{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar dataMemory = {};\n/** @class */\nvar MemoryStorage = /** @class */function () {\n  function MemoryStorage() {}\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  MemoryStorage.setItem = function (key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  };\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  MemoryStorage.getItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  };\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  MemoryStorage.removeItem = function (key) {\n    return delete dataMemory[key];\n  };\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  MemoryStorage.clear = function () {\n    dataMemory = {};\n    return dataMemory;\n  };\n  return MemoryStorage;\n}();\nexport { MemoryStorage };\nvar StorageHelper = /** @class */function () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.amplify.test-ls', 1);\n      this.storageWindow.removeItem('aws.amplify.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  StorageHelper.prototype.getStorage = function () {\n    return this.storageWindow;\n  };\n  return StorageHelper;\n}();\nexport { StorageHelper };","map":{"version":3,"mappings":"AAAA;AACA;AAEA,IAAIA,UAAU,GAAG,EAAE;AAEnB;AACA;EAAA,0BAyCA;EAxCC;;;;;;EAMOC,qBAAO,GAAd,UAAeC,GAAW,EAAEC,KAAU;IACrCH,UAAU,CAACE,GAAG,CAAC,GAAGC,KAAK;IACvB,OAAOH,UAAU,CAACE,GAAG,CAAC;EACvB,CAAC;EAED;;;;;;EAMOD,qBAAO,GAAd,UAAeC,GAAW;IACzB,OAAOE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,UAAU,EAAEE,GAAG,CAAC,GACzDF,UAAU,CAACE,GAAG,CAAC,GACfM,SAAS;EACb,CAAC;EAED;;;;;EAKOP,wBAAU,GAAjB,UAAkBC,GAAW;IAC5B,OAAO,OAAOF,UAAU,CAACE,GAAG,CAAC;EAC9B,CAAC;EAED;;;;EAIOD,mBAAK,GAAZ;IACCD,UAAU,GAAG,EAAE;IACf,OAAOA,UAAU;EAClB,CAAC;EACF,oBAAC;AAAD,CAAC,EAzCD;;AA2CA;EAEC;;;;EAIA;IACC,IAAI;MACH,IAAI,CAACS,aAAa,GAAGC,MAAM,CAACC,YAAY;MACxC,IAAI,CAACF,aAAa,CAACG,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC;MACpD,IAAI,CAACH,aAAa,CAACI,UAAU,CAAC,qBAAqB,CAAC;KACpD,CAAC,OAAOC,SAAS,EAAE;MACnB,IAAI,CAACL,aAAa,GAAGR,aAAa;;EAEpC;EAEA;;;;EAIAc,kCAAU,GAAV;IACC,OAAO,IAAI,CAACN,aAAa;EAC1B,CAAC;EACF,oBAAC;AAAD,CAAC,EAvBD","names":["dataMemory","MemoryStorage","key","value","Object","prototype","hasOwnProperty","call","undefined","storageWindow","window","localStorage","setItem","removeItem","exception","StorageHelper"],"sources":["/frontend-react-js/node_modules/@aws-amplify/core/src/StorageHelper/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nlet dataMemory = {};\n\n/** @class */\nexport class MemoryStorage {\n\t/**\n\t * This is used to set a specific item in storage\n\t * @param {string} key - the key for the item\n\t * @param {object} value - the value\n\t * @returns {string} value that was set\n\t */\n\tstatic setItem(key: string, value: any) {\n\t\tdataMemory[key] = value;\n\t\treturn dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to get a specific key from storage\n\t * @param {string} key - the key for the item\n\t * This is used to clear the storage\n\t * @returns {string} the data item\n\t */\n\tstatic getItem(key: string) {\n\t\treturn Object.prototype.hasOwnProperty.call(dataMemory, key)\n\t\t\t? dataMemory[key]\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * This is used to remove an item from storage\n\t * @param {string} key - the key being set\n\t * @returns {string} value - value that was deleted\n\t */\n\tstatic removeItem(key: string) {\n\t\treturn delete dataMemory[key];\n\t}\n\n\t/**\n\t * This is used to clear the storage\n\t * @returns {string} nothing\n\t */\n\tstatic clear() {\n\t\tdataMemory = {};\n\t\treturn dataMemory;\n\t}\n}\n\nexport class StorageHelper {\n\tprivate storageWindow: any;\n\t/**\n\t * This is used to get a storage object\n\t * @returns {object} the storage\n\t */\n\tconstructor() {\n\t\ttry {\n\t\t\tthis.storageWindow = window.localStorage;\n\t\t\tthis.storageWindow.setItem('aws.amplify.test-ls', 1);\n\t\t\tthis.storageWindow.removeItem('aws.amplify.test-ls');\n\t\t} catch (exception) {\n\t\t\tthis.storageWindow = MemoryStorage;\n\t\t}\n\t}\n\n\t/**\n\t * This is used to return the storage\n\t * @returns {object} the storage\n\t */\n\tgetStorage(): any {\n\t\treturn this.storageWindow;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}