{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetBucketPolicyStatusOutput, GetBucketPolicyStatusRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetBucketPolicyStatusCommand, serializeAws_restXmlGetBucketPolicyStatusCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket is public.\n *          In order to use this operation, you must have the <code>s3:GetBucketPolicyStatus</code>\n *          permission. For more information about Amazon S3 permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a\n *          Policy</a>.</p>\n *\n *          <p> For more information about when Amazon S3 considers a bucket public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a>. </p>\n *\n *          <p>The following operations are related to <code>GetBucketPolicyStatus</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 Block\n *                   Public Access</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetBucketPolicyStatusCommand = /** @class */function (_super) {\n  __extends(GetBucketPolicyStatusCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetBucketPolicyStatusCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetBucketPolicyStatusCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetBucketPolicyStatusCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetBucketPolicyStatusRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketPolicyStatusOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetBucketPolicyStatusCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetBucketPolicyStatusCommand(input, context);\n  };\n  GetBucketPolicyStatusCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context);\n  };\n  return GetBucketPolicyStatusCommand;\n}($Command);\nexport { GetBucketPolicyStatusCommand };","map":{"version":3,"mappings":";AACA,SAASA,2BAA2B,EAAEC,4BAA4B,QAAQ,oBAAoB;AAC9F,SACEC,kDAAkD,EAClDC,gDAAgD,QAC3C,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;EAAkDC;EAKhD;EACA;EAEA,sCAAqBC,KAAwC;IAA7D;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,wDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,8BAA8B;IAClD,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,4BAA4B,CAAC0B,kBAAkB;MACxEC,wBAAwB,EAAE5B,2BAA2B,CAAC2B;KACvD;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,gDAAS,GAAjB,UAAkBH,KAAwC,EAAEuB,OAAuB;IACjF,OAAO7B,gDAAgD,CAACM,KAAK,EAAEuB,OAAO,CAAC;EACzE,CAAC;EAEOpB,kDAAW,GAAnB,UAAoBqB,MAAsB,EAAED,OAAuB;IACjE,OAAO9B,kDAAkD,CAAC+B,MAAM,EAAED,OAAO,CAAC;EAC5E,CAAC;EAIH,mCAAC;AAAD,CAAC,CAvDiDzB,QAAQ","names":["GetBucketPolicyStatusOutput","GetBucketPolicyStatusRequest","deserializeAws_restXmlGetBucketPolicyStatusCommand","serializeAws_restXmlGetBucketPolicyStatusCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetBucketPolicyStatusCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-s3/commands/GetBucketPolicyStatusCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetBucketPolicyStatusOutput, GetBucketPolicyStatusRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetBucketPolicyStatusCommand,\n  serializeAws_restXmlGetBucketPolicyStatusCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetBucketPolicyStatusCommandInput = GetBucketPolicyStatusRequest;\nexport type GetBucketPolicyStatusCommandOutput = GetBucketPolicyStatusOutput & __MetadataBearer;\n\n/**\n * <p>Retrieves the policy status for an Amazon S3 bucket, indicating whether the bucket is public.\n *          In order to use this operation, you must have the <code>s3:GetBucketPolicyStatus</code>\n *          permission. For more information about Amazon S3 permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a\n *          Policy</a>.</p>\n *\n *          <p> For more information about when Amazon S3 considers a bucket public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a>. </p>\n *\n *          <p>The following operations are related to <code>GetBucketPolicyStatus</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 Block\n *                   Public Access</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetBucketPolicyStatusCommand extends $Command<\n  GetBucketPolicyStatusCommandInput,\n  GetBucketPolicyStatusCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetBucketPolicyStatusCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetBucketPolicyStatusCommandInput, GetBucketPolicyStatusCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetBucketPolicyStatusCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetBucketPolicyStatusRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetBucketPolicyStatusOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetBucketPolicyStatusCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetBucketPolicyStatusCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetBucketPolicyStatusCommandOutput> {\n    return deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}