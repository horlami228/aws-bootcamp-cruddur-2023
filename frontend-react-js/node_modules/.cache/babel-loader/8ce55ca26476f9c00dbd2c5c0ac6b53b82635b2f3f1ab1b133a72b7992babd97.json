{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketTaggingRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketTaggingCommand, serializeAws_restXmlPutBucketTaggingCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the tags for a bucket.</p>\n *          <p>Use tags to organize your AWS bill to reflect your own cost structure. To do this, sign\n *          up to get your AWS account bill with tag key values included. Then, to see the cost of\n *          combined resources, organize your billing information according to resources with the same\n *          tag key values. For example, you can tag several resources with a specific application\n *          name, and then organize your billing information to see the total cost of that application\n *          across several services. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Cost Allocation\n *             and Tagging</a>.</p>\n *\n *          <note>\n *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new\n *             value overwrites the old value. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html\">Using Cost Allocation in Amazon S3 Bucket\n *                Tags</a>.</p>\n *          </note>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutBucketTagging</code> action. The bucket owner has this permission by default\n *          and can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>\n *             <code>PutBucketTagging</code> has the following special errors:</p>\n *          <ul>\n *             <li>\n *                <p>Error code: <code>InvalidTagError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The tag provided was not a valid tag. This error can occur if\n *                      the tag did not pass input validation. For information about tag restrictions,\n *                      see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> and <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\">AWS-Generated Cost Allocation Tag Restrictions</a>.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>MalformedXMLError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The XML provided does not match the schema.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>OperationAbortedError </code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: A conflicting conditional operation is currently in progress\n *                      against this resource. Please try again.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InternalError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The service was unable to apply the provided tag to the\n *                      bucket.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The following operations are related to <code>PutBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketTaggingCommand = /** @class */function (_super) {\n  __extends(PutBucketTaggingCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutBucketTaggingCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutBucketTaggingCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketTaggingCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutBucketTaggingCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketTaggingCommand(input, context);\n  };\n  PutBucketTaggingCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketTaggingCommand(output, context);\n  };\n  return PutBucketTaggingCommand;\n}($Command);\nexport { PutBucketTaggingCommand };","map":{"version":3,"mappings":";AACA,SAASA,uBAAuB,QAAQ,oBAAoB;AAC5D,SACEC,6CAA6C,EAC7CC,2CAA2C,QACtC,0BAA0B;AACjC,SAASC,6BAA6B,QAAQ,yCAAyC;AACvF,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;EAA6CC;EAK3C;EACA;EAEA,iCAAqBC,KAAmC;IAAxD;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,mDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAChE,IAAI,CAACE,eAAe,CAACC,GAAG,CAACd,6BAA6B,CAACW,aAAa,CAAC,CAAC;IAEtE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,yBAAyB;IAC7C,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAE1B,uBAAuB,CAAC2B,kBAAkB;MACnEC,wBAAwB,EAAE,UAACC,MAAW;QAAK,aAAM;MAAN;KAC5C;IACO,kBAAc,GAAKf,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,2CAAS,GAAjB,UAAkBH,KAAmC,EAAEwB,OAAuB;IAC5E,OAAO/B,2CAA2C,CAACO,KAAK,EAAEwB,OAAO,CAAC;EACpE,CAAC;EAEOrB,6CAAW,GAAnB,UAAoBiB,MAAsB,EAAEI,OAAuB;IACjE,OAAOhC,6CAA6C,CAAC4B,MAAM,EAAEI,OAAO,CAAC;EACvE,CAAC;EAIH,8BAAC;AAAD,CAAC,CAxD4C1B,QAAQ","names":["PutBucketTaggingRequest","deserializeAws_restXmlPutBucketTaggingCommand","serializeAws_restXmlPutBucketTaggingCommand","getApplyMd5BodyChecksumPlugin","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketTaggingCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-s3/commands/PutBucketTaggingCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketTaggingRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketTaggingCommand,\n  serializeAws_restXmlPutBucketTaggingCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketTaggingCommandInput = PutBucketTaggingRequest;\nexport type PutBucketTaggingCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the tags for a bucket.</p>\n *          <p>Use tags to organize your AWS bill to reflect your own cost structure. To do this, sign\n *          up to get your AWS account bill with tag key values included. Then, to see the cost of\n *          combined resources, organize your billing information according to resources with the same\n *          tag key values. For example, you can tag several resources with a specific application\n *          name, and then organize your billing information to see the total cost of that application\n *          across several services. For more information, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Cost Allocation\n *             and Tagging</a>.</p>\n *\n *          <note>\n *             <p>Within a bucket, if you add a tag that has the same key as an existing tag, the new\n *             value overwrites the old value. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/CostAllocTagging.html\">Using Cost Allocation in Amazon S3 Bucket\n *                Tags</a>.</p>\n *          </note>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutBucketTagging</code> action. The bucket owner has this permission by default\n *          and can grant this permission to others. For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>\n *             <code>PutBucketTagging</code> has the following special errors:</p>\n *          <ul>\n *             <li>\n *                <p>Error code: <code>InvalidTagError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The tag provided was not a valid tag. This error can occur if\n *                      the tag did not pass input validation. For information about tag restrictions,\n *                      see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> and <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/aws-tag-restrictions.html\">AWS-Generated Cost Allocation Tag Restrictions</a>.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>MalformedXMLError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The XML provided does not match the schema.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>OperationAbortedError </code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: A conflicting conditional operation is currently in progress\n *                      against this resource. Please try again.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InternalError</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The service was unable to apply the provided tag to the\n *                      bucket.</p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The following operations are related to <code>PutBucketTagging</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\">GetBucketTagging</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\">DeleteBucketTagging</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketTaggingCommand extends $Command<\n  PutBucketTaggingCommandInput,\n  PutBucketTaggingCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketTaggingCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketTaggingCommandInput, PutBucketTaggingCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketTaggingCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketTaggingRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutBucketTaggingCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketTaggingCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutBucketTaggingCommandOutput> {\n    return deserializeAws_restXmlPutBucketTaggingCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}