{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { GetPublicAccessBlockOutput, GetPublicAccessBlockRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetPublicAccessBlockCommand, serializeAws_restXmlGetPublicAccessBlockCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use\n *          this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code> permission.\n *          For more information about Amazon S3 permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a\n *          Policy</a>.</p>\n *\n *          <important>\n *             <p>When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket or\n *             an object, it checks the <code>PublicAccessBlock</code> configuration for both the\n *             bucket (or the bucket that contains the object) and the bucket owner's account. If the\n *                <code>PublicAccessBlock</code> settings are different between the bucket and the\n *             account, Amazon S3 uses the most restrictive combination of the bucket-level and\n *             account-level settings.</p>\n *          </important>\n *\n *          <p>For more information about when Amazon S3 considers a bucket or an object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a>.</p>\n *\n *          <p>The following operations are related to <code>GetPublicAccessBlock</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 Block\n *                   Public Access</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar GetPublicAccessBlockCommand = /** @class */function (_super) {\n  __extends(GetPublicAccessBlockCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function GetPublicAccessBlockCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  GetPublicAccessBlockCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetPublicAccessBlockCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetPublicAccessBlockRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetPublicAccessBlockOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  GetPublicAccessBlockCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetPublicAccessBlockCommand(input, context);\n  };\n  GetPublicAccessBlockCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetPublicAccessBlockCommand(output, context);\n  };\n  return GetPublicAccessBlockCommand;\n}($Command);\nexport { GetPublicAccessBlockCommand };","map":{"version":3,"mappings":";AACA,SAASA,0BAA0B,EAAEC,2BAA2B,QAAQ,oBAAoB;AAC5F,SACEC,iDAAiD,EACjDC,+CAA+C,QAC1C,0BAA0B;AACjC,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;EAAiDC;EAK/C;EACA;EAEA,qCAAqBC,KAAuC;IAA5D;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,uDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAEhE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,6BAA6B;IACjD,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,2BAA2B,CAAC0B,kBAAkB;MACvEC,wBAAwB,EAAE5B,0BAA0B,CAAC2B;KACtD;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,+CAAS,GAAjB,UAAkBH,KAAuC,EAAEuB,OAAuB;IAChF,OAAO7B,+CAA+C,CAACM,KAAK,EAAEuB,OAAO,CAAC;EACxE,CAAC;EAEOpB,iDAAW,GAAnB,UAAoBqB,MAAsB,EAAED,OAAuB;IACjE,OAAO9B,iDAAiD,CAAC+B,MAAM,EAAED,OAAO,CAAC;EAC3E,CAAC;EAIH,kCAAC;AAAD,CAAC,CAvDgDzB,QAAQ","names":["GetPublicAccessBlockOutput","GetPublicAccessBlockRequest","deserializeAws_restXmlGetPublicAccessBlockCommand","serializeAws_restXmlGetPublicAccessBlockCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","GetPublicAccessBlockCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-s3/commands/GetPublicAccessBlockCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { GetPublicAccessBlockOutput, GetPublicAccessBlockRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlGetPublicAccessBlockCommand,\n  serializeAws_restXmlGetPublicAccessBlockCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type GetPublicAccessBlockCommandInput = GetPublicAccessBlockRequest;\nexport type GetPublicAccessBlockCommandOutput = GetPublicAccessBlockOutput & __MetadataBearer;\n\n/**\n * <p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 bucket. To use\n *          this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code> permission.\n *          For more information about Amazon S3 permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions in a\n *          Policy</a>.</p>\n *\n *          <important>\n *             <p>When Amazon S3 evaluates the <code>PublicAccessBlock</code> configuration for a bucket or\n *             an object, it checks the <code>PublicAccessBlock</code> configuration for both the\n *             bucket (or the bucket that contains the object) and the bucket owner's account. If the\n *                <code>PublicAccessBlock</code> settings are different between the bucket and the\n *             account, Amazon S3 uses the most restrictive combination of the bucket-level and\n *             account-level settings.</p>\n *          </important>\n *\n *          <p>For more information about when Amazon S3 considers a bucket or an object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a>.</p>\n *\n *          <p>The following operations are related to <code>GetPublicAccessBlock</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\">Using Amazon S3 Block\n *                   Public Access</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutPublicAccessBlock.html\">PutPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html\">GetPublicAccessBlock</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeletePublicAccessBlock.html\">DeletePublicAccessBlock</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class GetPublicAccessBlockCommand extends $Command<\n  GetPublicAccessBlockCommandInput,\n  GetPublicAccessBlockCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: GetPublicAccessBlockCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<GetPublicAccessBlockCommandInput, GetPublicAccessBlockCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"GetPublicAccessBlockCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: GetPublicAccessBlockRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetPublicAccessBlockOutput.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: GetPublicAccessBlockCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlGetPublicAccessBlockCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<GetPublicAccessBlockCommandOutput> {\n    return deserializeAws_restXmlGetPublicAccessBlockCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}