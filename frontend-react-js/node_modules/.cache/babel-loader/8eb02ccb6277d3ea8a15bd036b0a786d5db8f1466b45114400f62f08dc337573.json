{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */function () {\n  /**\n   * @constructor\n   * Initialize with configurations\n   * @param {Object} options\n   */\n  function I18n(options) {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n    this._lang = null;\n    /**\n     * @private\n     */\n    this._dict = {};\n    this._options = Object.assign({}, options);\n    this._lang = this._options.language;\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  I18n.prototype.setLanguage = function (lang) {\n    this._lang = lang;\n  };\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.get = function (key, defVal) {\n    if (defVal === void 0) {\n      defVal = undefined;\n    }\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    var lang = this._lang;\n    var val = this.getByLanguage(key, lang);\n    if (val) {\n      return val;\n    }\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n    if (val) {\n      return val;\n    }\n    return typeof defVal !== 'undefined' ? defVal : key;\n  };\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n  I18n.prototype.getByLanguage = function (key, language, defVal) {\n    if (defVal === void 0) {\n      defVal = null;\n    }\n    if (!language) {\n      return defVal;\n    }\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      return defVal;\n    }\n    return lang_dict[key];\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n    var lang_dict = this._dict[language];\n    if (!lang_dict) {\n      lang_dict = this._dict[language] = {};\n    }\n    Object.assign(lang_dict, vocabularies);\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  I18n.prototype.putVocabularies = function (vocabularies) {\n    var _this = this;\n    Object.keys(vocabularies).map(function (key) {\n      _this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  };\n  return I18n;\n}();\nexport { I18n };","map":{"version":3,"mappings":"AAAA;AACA;AAGA,SAASA,aAAa,IAAIC,MAAM,QAAQ,WAAW;AAEnD,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,MAAM,CAAC;AAEjC;;;AAGA;EAgBC;;;;;EAKA,cAAYE,OAAoB;IApBhC;;;IAGA,aAAQ,GAAgB,IAAI;IAE5B;;;IAGA,UAAK,GAAG,IAAI;IAEZ;;;IAGA,UAAK,GAAG,EAAE;IAQT,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,OAAO,CAAC;IAC1C,IAAI,CAACI,KAAK,GAAG,IAAI,CAACH,QAAQ,CAACI,QAAQ;IAEnC,IACC,CAAC,IAAI,CAACD,KAAK,IACX,OAAOE,MAAM,KAAK,WAAW,IAC7BA,MAAM,IACNA,MAAM,CAACC,SAAS,EACf;MACD,IAAI,CAACH,KAAK,GAAGE,MAAM,CAACC,SAAS,CAACF,QAAQ;;IAGvCN,MAAM,CAACS,KAAK,CAAC,IAAI,CAACJ,KAAK,CAAC;EACzB;EAEA;;;;;EAKAK,0BAAW,GAAX,UAAYC,IAAY;IACvB,IAAI,CAACN,KAAK,GAAGM,IAAI;EAClB,CAAC;EAED;;;;;;EAMAD,kBAAG,GAAH,UAAIE,GAAG,EAAEC,MAAkB;IAAlB;MAAAA,kBAAkB;IAAA;IAC1B,IAAI,CAAC,IAAI,CAACR,KAAK,EAAE;MAChB,OAAO,OAAOQ,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGD,GAAG;;IAGpD,IAAMD,IAAI,GAAG,IAAI,CAACN,KAAK;IACvB,IAAIS,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,GAAG,EAAED,IAAI,CAAC;IACvC,IAAIG,GAAG,EAAE;MACR,OAAOA,GAAG;;IAGX,IAAIH,IAAI,CAACK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MAC1BF,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,GAAG,EAAED,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;IAElD,IAAIH,GAAG,EAAE;MACR,OAAOA,GAAG;;IAGX,OAAO,OAAOD,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGD,GAAG;EACpD,CAAC;EAED;;;;;;;EAOAF,4BAAa,GAAb,UAAcE,GAAG,EAAEN,QAAQ,EAAEO,MAAa;IAAb;MAAAA,aAAa;IAAA;IACzC,IAAI,CAACP,QAAQ,EAAE;MACd,OAAOO,MAAM;;IAGd,IAAMK,SAAS,GAAG,IAAI,CAACC,KAAK,CAACb,QAAQ,CAAC;IACtC,IAAI,CAACY,SAAS,EAAE;MACf,OAAOL,MAAM;;IAGd,OAAOK,SAAS,CAACN,GAAG,CAAC;EACtB,CAAC;EAED;;;;;;EAMAF,yCAA0B,GAA1B,UAA2BJ,QAAQ,EAAEc,YAAY;IAChD,IAAIF,SAAS,GAAG,IAAI,CAACC,KAAK,CAACb,QAAQ,CAAC;IACpC,IAAI,CAACY,SAAS,EAAE;MACfA,SAAS,GAAG,IAAI,CAACC,KAAK,CAACb,QAAQ,CAAC,GAAG,EAAE;;IAEtCH,MAAM,CAACC,MAAM,CAACc,SAAS,EAAEE,YAAY,CAAC;EACvC,CAAC;EAED;;;;;;EAMAV,8BAAe,GAAf,UAAgBU,YAAY;IAA5B;IACCjB,MAAM,CAACkB,IAAI,CAACD,YAAY,CAAC,CAACE,GAAG,CAAC,aAAG;MAChCC,KAAI,CAACC,0BAA0B,CAACZ,GAAG,EAAEQ,YAAY,CAACR,GAAG,CAAC,CAAC;IACxD,CAAC,CAAC;EACH,CAAC;EACF,WAAC;AAAD,CAAC,EAtHD","names":["ConsoleLogger","Logger","logger","options","_options","Object","assign","_lang","language","window","navigator","debug","I18n","lang","key","defVal","val","getByLanguage","indexOf","split","lang_dict","_dict","vocabularies","keys","map","_this","putVocabulariesForLanguage"],"sources":["/frontend-react-js/node_modules/@aws-amplify/core/src/I18n/I18n.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { I18nOptions } from './types';\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('I18n');\n\n/**\n * Language transition class\n */\nexport class I18n {\n\t/**\n\t * @private\n\t */\n\t_options: I18nOptions = null;\n\n\t/**\n\t * @private\n\t */\n\t_lang = null;\n\n\t/**\n\t * @private\n\t */\n\t_dict = {};\n\n\t/**\n\t * @constructor\n\t * Initialize with configurations\n\t * @param {Object} options\n\t */\n\tconstructor(options: I18nOptions) {\n\t\tthis._options = Object.assign({}, options);\n\t\tthis._lang = this._options.language;\n\n\t\tif (\n\t\t\t!this._lang &&\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow &&\n\t\t\twindow.navigator\n\t\t) {\n\t\t\tthis._lang = window.navigator.language;\n\t\t}\n\n\t\tlogger.debug(this._lang);\n\t}\n\n\t/**\n\t * @method\n\t * Explicitly setting language\n\t * @param {String} lang\n\t */\n\tsetLanguage(lang: string) {\n\t\tthis._lang = lang;\n\t}\n\n\t/**\n\t * @method\n\t * Get value\n\t * @param {String} key\n\t * @param {String} defVal - Default value\n\t */\n\tget(key, defVal = undefined) {\n\t\tif (!this._lang) {\n\t\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t\t}\n\n\t\tconst lang = this._lang;\n\t\tlet val = this.getByLanguage(key, lang);\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\tif (lang.indexOf('-') > 0) {\n\t\t\tval = this.getByLanguage(key, lang.split('-')[0]);\n\t\t}\n\t\tif (val) {\n\t\t\treturn val;\n\t\t}\n\n\t\treturn typeof defVal !== 'undefined' ? defVal : key;\n\t}\n\n\t/**\n\t * @method\n\t * Get value according to specified language\n\t * @param {String} key\n\t * @param {String} language - Specified langurage to be used\n\t * @param {String} defVal - Default value\n\t */\n\tgetByLanguage(key, language, defVal = null) {\n\t\tif (!language) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\tconst lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\treturn defVal;\n\t\t}\n\n\t\treturn lang_dict[key];\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {String} language - Language of the dictionary\n\t * @param {Object} vocabularies - Object that has key-value as dictionary entry\n\t */\n\tputVocabulariesForLanguage(language, vocabularies) {\n\t\tlet lang_dict = this._dict[language];\n\t\tif (!lang_dict) {\n\t\t\tlang_dict = this._dict[language] = {};\n\t\t}\n\t\tObject.assign(lang_dict, vocabularies);\n\t}\n\n\t/**\n\t * @method\n\t * Add vocabularies for one language\n\t * @param {Object} vocabularies - Object that has language as key,\n\t *                                vocabularies of each language as value\n\t */\n\tputVocabularies(vocabularies) {\n\t\tObject.keys(vocabularies).map(key => {\n\t\t\tthis.putVocabulariesForLanguage(key, vocabularies[key]);\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}