{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketPolicyRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketPolicyCommand, serializeAws_restXmlPutBucketPolicyCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using an identity other than\n *          the root user of the AWS account that owns the bucket, the calling identity must have the\n *             <code>PutBucketPolicy</code> permissions on the specified bucket and belong to the\n *          bucket owner's account in order to use this operation.</p>\n *\n *          <p>If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n *             Access Denied</code> error. If you have the correct permissions, but you're not using an\n *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n *             Allowed</code> error.</p>\n *\n *          <important>\n *             <p> As a security precaution, the root user of the AWS account that owns a bucket can\n *             always use this operation, even if the policy explicitly denies the root user the\n *             ability to perform this action. </p>\n *          </important>\n *\n *\n *          <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n *             Policies</a>.</p>\n *\n *          <p>The following operations are related to <code>PutBucketPolicy</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketPolicyCommand = /** @class */function (_super) {\n  __extends(PutBucketPolicyCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutBucketPolicyCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutBucketPolicyCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketPolicyCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutBucketPolicyCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketPolicyCommand(input, context);\n  };\n  PutBucketPolicyCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketPolicyCommand(output, context);\n  };\n  return PutBucketPolicyCommand;\n}($Command);\nexport { PutBucketPolicyCommand };","map":{"version":3,"mappings":";AACA,SAASA,sBAAsB,QAAQ,oBAAoB;AAC3D,SACEC,4CAA4C,EAC5CC,0CAA0C,QACrC,0BAA0B;AACjC,SAASC,6BAA6B,QAAQ,yCAAyC;AACvF,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;EAA4CC;EAK1C;EACA;EAEA,gCAAqBC,KAAkC;IAAvD;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,kDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAChE,IAAI,CAACE,eAAe,CAACC,GAAG,CAACd,6BAA6B,CAACW,aAAa,CAAC,CAAC;IAEtE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,wBAAwB;IAC5C,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAE1B,sBAAsB,CAAC2B,kBAAkB;MAClEC,wBAAwB,EAAE,UAACC,MAAW;QAAK,aAAM;MAAN;KAC5C;IACO,kBAAc,GAAKf,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,0CAAS,GAAjB,UAAkBH,KAAkC,EAAEwB,OAAuB;IAC3E,OAAO/B,0CAA0C,CAACO,KAAK,EAAEwB,OAAO,CAAC;EACnE,CAAC;EAEOrB,4CAAW,GAAnB,UAAoBiB,MAAsB,EAAEI,OAAuB;IACjE,OAAOhC,4CAA4C,CAAC4B,MAAM,EAAEI,OAAO,CAAC;EACtE,CAAC;EAIH,6BAAC;AAAD,CAAC,CAxD2C1B,QAAQ","names":["PutBucketPolicyRequest","deserializeAws_restXmlPutBucketPolicyCommand","serializeAws_restXmlPutBucketPolicyCommand","getApplyMd5BodyChecksumPlugin","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketPolicyCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-s3/commands/PutBucketPolicyCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketPolicyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketPolicyCommand,\n  serializeAws_restXmlPutBucketPolicyCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketPolicyCommandInput = PutBucketPolicyRequest;\nexport type PutBucketPolicyCommandOutput = __MetadataBearer;\n\n/**\n * <p>Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using an identity other than\n *          the root user of the AWS account that owns the bucket, the calling identity must have the\n *             <code>PutBucketPolicy</code> permissions on the specified bucket and belong to the\n *          bucket owner's account in order to use this operation.</p>\n *\n *          <p>If you don't have <code>PutBucketPolicy</code> permissions, Amazon S3 returns a <code>403\n *             Access Denied</code> error. If you have the correct permissions, but you're not using an\n *          identity that belongs to the bucket owner's account, Amazon S3 returns a <code>405 Method Not\n *             Allowed</code> error.</p>\n *\n *          <important>\n *             <p> As a security precaution, the root user of the AWS account that owns a bucket can\n *             always use this operation, even if the policy explicitly denies the root user the\n *             ability to perform this action. </p>\n *          </important>\n *\n *\n *          <p>For more information about bucket policies, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-iam-policies.html\">Using Bucket Policies and User\n *             Policies</a>.</p>\n *\n *          <p>The following operations are related to <code>PutBucketPolicy</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\">DeleteBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketPolicyCommand extends $Command<\n  PutBucketPolicyCommandInput,\n  PutBucketPolicyCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketPolicyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketPolicyCommandInput, PutBucketPolicyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketPolicyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketPolicyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutBucketPolicyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketPolicyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutBucketPolicyCommandOutput> {\n    return deserializeAws_restXmlPutBucketPolicyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}