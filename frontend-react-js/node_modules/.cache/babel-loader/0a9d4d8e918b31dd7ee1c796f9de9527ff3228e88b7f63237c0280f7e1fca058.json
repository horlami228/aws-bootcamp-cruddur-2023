{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1CreateAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps\";\n          if (input.CreateApplicationRequest !== undefined) {\n            body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateExportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.ExportJobRequest !== undefined) {\n            body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateImportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.ImportJobRequest !== undefined) {\n            body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreatePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders\";\n          if (input.CreateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeletePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteUserEndpointsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationSettingsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignActivitiesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetChannelsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyActivityId !== undefined) {\n            labelValue = input.JourneyActivityId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionMetricsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetPushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentExportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentImportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetUserEndpointsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListJourneysCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTagsForResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplatesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates\";\n          query = __assign(__assign(__assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.TemplateType !== undefined && {\n            \"template-type\": input.TemplateType\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplateVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PhoneNumberValidateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/phone/number/validate\";\n          if (input.NumberValidateRequest !== undefined) {\n            body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EventsRequest !== undefined) {\n            body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.WriteEventStream !== undefined) {\n            body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RemoveAttributesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.AttributeType !== undefined) {\n            labelValue = input.AttributeType;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n          }\n          if (input.UpdateAttributesRequest !== undefined) {\n            body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendMessagesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.MessageRequest !== undefined) {\n            body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendUsersMessagesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SendUsersMessageRequest !== undefined) {\n            body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1TagResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n          if (input.TagsModel !== undefined) {\n            body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UntagResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n          query = __assign({}, input.TagKeys !== undefined && {\n            tagKeys: (input.TagKeys || []).map(function (_entry) {\n              return _entry;\n            })\n          });\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.ADMChannelRequest !== undefined) {\n            body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.APNSChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.APNSSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.APNSVoipChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.APNSVoipSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApplicationSettingsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.WriteApplicationSettingsRequest !== undefined) {\n            body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.BaiduChannelRequest !== undefined) {\n            body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EmailChannelRequest !== undefined) {\n            body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n          if (input.EndpointRequest !== undefined) {\n            body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointsBatchCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.EndpointBatchRequest !== undefined) {\n            body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.GCMChannelRequest !== undefined) {\n            body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyStateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n          if (input.JourneyStateRequest !== undefined) {\n            body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdatePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n          if (input.UpdateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.SMSChannelRequest !== undefined) {\n            body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateTemplateActiveVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n          if (input.TemplateActiveVersionRequest !== undefined) {\n            body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n          if (input.VoiceChannelRequest !== undefined) {\n            body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n          if (body === undefined) {\n            body = {};\n          }\n          body = JSON.stringify(body);\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2 /*return*/, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateAppCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateCampaignCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateEmailTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateExportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateExportJobCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateExportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateImportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateImportJobCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateImportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateJourneyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreatePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreatePushTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreatePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateSegmentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateSmsTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1CreateVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteAdmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteApnsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteAppCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteCampaignCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteEmailChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteEndpointCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteEventStreamCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteGcmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteJourneyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeletePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeletePushTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeletePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteSegmentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteSmsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteUserEndpointsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteUserEndpointsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1DeleteVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetAdmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApnsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetAppCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApplicationDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationDateRangeKpiResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetApplicationSettingsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetApplicationSettingsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetApplicationSettingsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetAppsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetAppsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetAppsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetBaiduChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignActivitiesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ActivitiesResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignActivitiesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignDateRangeKpiResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignVersionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetCampaignVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetCampaignVersionsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetCampaignVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetChannelsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetChannelsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ChannelsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetChannelsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetEmailChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetEmailTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailTemplateResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetEndpointCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetEventStreamCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetExportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetExportJobCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetExportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetExportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetExportJobsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetExportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetGcmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetImportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetImportJobCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetImportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetImportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetImportJobsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetImportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetJourneyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetJourneyDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyDateRangeKpiResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionActivityMetricsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetJourneyExecutionMetricsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionMetricsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetPushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetPushTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PushNotificationTemplateResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetPushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetRecommenderConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ListRecommenderConfigurationsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetRecommenderConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentExportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentExportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentImportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentImportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentVersionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSegmentVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSegmentVersionsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSegmentVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSmsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetSmsTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSTemplateResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetUserEndpointsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetUserEndpointsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetUserEndpointsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetVoiceChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1GetVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1GetVoiceTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceTemplateResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1GetVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListJourneysCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListJourneysCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneysResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListJourneysCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListTagsForResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListTagsForResourceCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagsModel: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListTagsForResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListTemplatesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListTemplatesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplatesResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListTemplatesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1ListTemplateVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1ListTemplateVersionsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplateVersionsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1ListTemplateVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PhoneNumberValidateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1PhoneNumberValidateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NumberValidateResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1PhoneNumberValidateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PutEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1PutEventsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventsResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1PutEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1PutEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1PutEventStreamCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1PutEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1RemoveAttributesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1RemoveAttributesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AttributesResource: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1RemoveAttributesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1SendMessagesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1SendMessagesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1SendMessagesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1SendUsersMessagesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1SendUsersMessagesCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SendUsersMessageResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1SendUsersMessagesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1TagResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1TagResourceCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1TagResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UntagResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UntagResourceCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UntagResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n    var _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateAdmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateApnsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateApplicationSettingsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateApplicationSettingsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateCampaignCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateEmailChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateEndpointCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateEndpointsBatchCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateEndpointsBatchCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateGcmChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateJourneyCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ConflictException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ConflictException\":\n              return [3 /*break*/, 4];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 6];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 8];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 10];\n            case \"NotFoundException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 12];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 14];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 16];\n          }\n          return [3 /*break*/, 18];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateJourneyStateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateJourneyStateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateJourneyStateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdatePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdatePushTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdatePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateSegmentCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateSmsChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateTemplateActiveVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1UpdateVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context)];\n          }\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2 /*return*/, Promise.resolve(contents)];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1UpdateVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3 /*break*/, 2];\n            case \"ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3 /*break*/, 6];\n            case \"MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3 /*break*/, 8];\n            case \"NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3 /*break*/, 10];\n            case \"PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n          }\n          return [3 /*break*/, 16];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 17];\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1ForbiddenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ForbiddenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1InternalServerErrorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalServerErrorException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1MethodNotAllowedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MethodNotAllowedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1PayloadTooLargeExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"PayloadTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_restJson1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_restJson1Activity = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CUSTOM !== undefined && input.CUSTOM !== null && {\n    CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context)\n  }), input.ConditionalSplit !== undefined && input.ConditionalSplit !== null && {\n    ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EMAIL !== undefined && input.EMAIL !== null && {\n    EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context)\n  }), input.Holdout !== undefined && input.Holdout !== null && {\n    Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context)\n  }), input.MultiCondition !== undefined && input.MultiCondition !== null && {\n    MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context)\n  }), input.PUSH !== undefined && input.PUSH !== null && {\n    PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context)\n  }), input.RandomSplit !== undefined && input.RandomSplit !== null && {\n    RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context)\n  }), input.SMS !== undefined && input.SMS !== null && {\n    SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context)\n  }), input.Wait !== undefined && input.Wait !== null && {\n    Wait: serializeAws_restJson1WaitActivity(input.Wait, context)\n  });\n};\nvar serializeAws_restJson1AddressConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\nvar serializeAws_restJson1ADMChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.ClientId !== undefined && input.ClientId !== null && {\n    ClientId: input.ClientId\n  }), input.ClientSecret !== undefined && input.ClientSecret !== null && {\n    ClientSecret: input.ClientSecret\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\nvar serializeAws_restJson1ADMMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ConsolidationKey !== undefined && input.ConsolidationKey !== null && {\n    ConsolidationKey: input.ConsolidationKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && {\n    ExpiresAfter: input.ExpiresAfter\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.MD5 !== undefined && input.MD5 !== null && {\n    MD5: input.MD5\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1AndroidPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1APNSChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\nvar serializeAws_restJson1APNSMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.APNSPushType !== undefined && input.APNSPushType !== null && {\n    APNSPushType: input.APNSPushType\n  }), input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Badge !== undefined && input.Badge !== null && {\n    Badge: input.Badge\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Category !== undefined && input.Category !== null && {\n    Category: input.Category\n  }), input.CollapseId !== undefined && input.CollapseId !== null && {\n    CollapseId: input.CollapseId\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.PreferredAuthenticationMethod !== undefined && input.PreferredAuthenticationMethod !== null && {\n    PreferredAuthenticationMethod: input.PreferredAuthenticationMethod\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.ThreadId !== undefined && input.ThreadId !== null && {\n    ThreadId: input.ThreadId\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1APNSPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1APNSSandboxChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\nvar serializeAws_restJson1APNSVoipChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\nvar serializeAws_restJson1APNSVoipSandboxChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\nvar serializeAws_restJson1AttributeDimension = function (input, context) {\n  return __assign(__assign({}, input.AttributeType !== undefined && input.AttributeType !== null && {\n    AttributeType: input.AttributeType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\nvar serializeAws_restJson1BaiduChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SecretKey !== undefined && input.SecretKey !== null && {\n    SecretKey: input.SecretKey\n  });\n};\nvar serializeAws_restJson1BaiduMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1CampaignCustomMessage = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\nvar serializeAws_restJson1CampaignEmailMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.HtmlBody !== undefined && input.HtmlBody !== null && {\n    HtmlBody: input.HtmlBody\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  });\n};\nvar serializeAws_restJson1CampaignEventFilter = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\nvar serializeAws_restJson1CampaignHook = function (input, context) {\n  return __assign(__assign(__assign({}, input.LambdaFunctionName !== undefined && input.LambdaFunctionName !== null && {\n    LambdaFunctionName: input.LambdaFunctionName\n  }), input.Mode !== undefined && input.Mode !== null && {\n    Mode: input.Mode\n  }), input.WebUrl !== undefined && input.WebUrl !== null && {\n    WebUrl: input.WebUrl\n  });\n};\nvar serializeAws_restJson1CampaignLimits = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Daily !== undefined && input.Daily !== null && {\n    Daily: input.Daily\n  }), input.MaximumDuration !== undefined && input.MaximumDuration !== null && {\n    MaximumDuration: input.MaximumDuration\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  }), input.Total !== undefined && input.Total !== null && {\n    Total: input.Total\n  });\n};\nvar serializeAws_restJson1CampaignSmsMessage = function (input, context) {\n  return __assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\nvar serializeAws_restJson1Condition = function (input, context) {\n  return __assign(__assign({}, input.Conditions !== undefined && input.Conditions !== null && {\n    Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context)\n  }), input.Operator !== undefined && input.Operator !== null && {\n    Operator: input.Operator\n  });\n};\nvar serializeAws_restJson1ConditionalSplitActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1Condition(input.Condition, context)\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  }), input.FalseActivity !== undefined && input.FalseActivity !== null && {\n    FalseActivity: input.FalseActivity\n  }), input.TrueActivity !== undefined && input.TrueActivity !== null && {\n    TrueActivity: input.TrueActivity\n  });\n};\nvar serializeAws_restJson1CreateApplicationRequest = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1CreateRecommenderConfigurationShape = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\nvar serializeAws_restJson1CustomDeliveryConfiguration = function (input, context) {\n  return __assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  });\n};\nvar serializeAws_restJson1CustomMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  }), input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\nvar serializeAws_restJson1DefaultMessage = function (input, context) {\n  return __assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\nvar serializeAws_restJson1DefaultPushNotificationMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1DefaultPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1DirectMessageConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context)\n  }), input.DefaultPushNotificationMessage !== undefined && input.DefaultPushNotificationMessage !== null && {\n    DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(input.DefaultPushNotificationMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context)\n  }), input.VoiceMessage !== undefined && input.VoiceMessage !== null && {\n    VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context)\n  });\n};\nvar serializeAws_restJson1EmailChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ConfigurationSet !== undefined && input.ConfigurationSet !== null && {\n    ConfigurationSet: input.ConfigurationSet\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.Identity !== undefined && input.Identity !== null && {\n    Identity: input.Identity\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\nvar serializeAws_restJson1EmailMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FeedbackForwardingAddress !== undefined && input.FeedbackForwardingAddress !== null && {\n    FeedbackForwardingAddress: input.FeedbackForwardingAddress\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.RawEmail !== undefined && input.RawEmail !== null && {\n    RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context)\n  }), input.ReplyToAddresses !== undefined && input.ReplyToAddresses !== null && {\n    ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context)\n  }), input.SimpleEmail !== undefined && input.SimpleEmail !== null && {\n    SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context)\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\nvar serializeAws_restJson1EmailMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\nvar serializeAws_restJson1EmailTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: input.HtmlPart\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: input.Subject\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: input.TextPart\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1EndpointBatchItem = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\nvar serializeAws_restJson1EndpointBatchRequest = function (input, context) {\n  return __assign({}, input.Item !== undefined && input.Item !== null && {\n    Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context)\n  });\n};\nvar serializeAws_restJson1EndpointDemographic = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: input.AppVersion\n  }), input.Locale !== undefined && input.Locale !== null && {\n    Locale: input.Locale\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: input.Make\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: input.Model\n  }), input.ModelVersion !== undefined && input.ModelVersion !== null && {\n    ModelVersion: input.ModelVersion\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: input.Platform\n  }), input.PlatformVersion !== undefined && input.PlatformVersion !== null && {\n    PlatformVersion: input.PlatformVersion\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\nvar serializeAws_restJson1EndpointLocation = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.City !== undefined && input.City !== null && {\n    City: input.City\n  }), input.Country !== undefined && input.Country !== null && {\n    Country: input.Country\n  }), input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  }), input.PostalCode !== undefined && input.PostalCode !== null && {\n    PostalCode: input.PostalCode\n  }), input.Region !== undefined && input.Region !== null && {\n    Region: input.Region\n  });\n};\nvar serializeAws_restJson1EndpointRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\nvar serializeAws_restJson1EndpointSendConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\nvar serializeAws_restJson1EndpointUser = function (input, context) {\n  return __assign(__assign({}, input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context)\n  }), input.UserId !== undefined && input.UserId !== null && {\n    UserId: input.UserId\n  });\n};\nvar serializeAws_restJson1Event = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppPackageName !== undefined && input.AppPackageName !== null && {\n    AppPackageName: input.AppPackageName\n  }), input.AppTitle !== undefined && input.AppTitle !== null && {\n    AppTitle: input.AppTitle\n  }), input.AppVersionCode !== undefined && input.AppVersionCode !== null && {\n    AppVersionCode: input.AppVersionCode\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.ClientSdkVersion !== undefined && input.ClientSdkVersion !== null && {\n    ClientSdkVersion: input.ClientSdkVersion\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: input.EventType\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.SdkName !== undefined && input.SdkName !== null && {\n    SdkName: input.SdkName\n  }), input.Session !== undefined && input.Session !== null && {\n    Session: serializeAws_restJson1Session(input.Session, context)\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: input.Timestamp\n  });\n};\nvar serializeAws_restJson1EventCondition = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.MessageActivity !== undefined && input.MessageActivity !== null && {\n    MessageActivity: input.MessageActivity\n  });\n};\nvar serializeAws_restJson1EventDimensions = function (input, context) {\n  return __assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: serializeAws_restJson1SetDimension(input.EventType, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  });\n};\nvar serializeAws_restJson1EventFilter = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\nvar serializeAws_restJson1EventsBatch = function (input, context) {\n  return __assign(__assign({}, input.Endpoint !== undefined && input.Endpoint !== null && {\n    Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context)\n  }), input.Events !== undefined && input.Events !== null && {\n    Events: serializeAws_restJson1MapOfEvent(input.Events, context)\n  });\n};\nvar serializeAws_restJson1EventsRequest = function (input, context) {\n  return __assign({}, input.BatchItem !== undefined && input.BatchItem !== null && {\n    BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context)\n  });\n};\nvar serializeAws_restJson1EventStartCondition = function (input, context) {\n  return __assign(__assign({}, input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\nvar serializeAws_restJson1ExportJobRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && {\n    S3UrlPrefix: input.S3UrlPrefix\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  });\n};\nvar serializeAws_restJson1GCMChannelRequest = function (input, context) {\n  return __assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\nvar serializeAws_restJson1GCMMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.CollapseKey !== undefined && input.CollapseKey !== null && {\n    CollapseKey: input.CollapseKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.RestrictedPackageName !== undefined && input.RestrictedPackageName !== null && {\n    RestrictedPackageName: input.RestrictedPackageName\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1GPSCoordinates = function (input, context) {\n  return __assign(__assign({}, input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  });\n};\nvar serializeAws_restJson1GPSPointDimension = function (input, context) {\n  return __assign(__assign({}, input.Coordinates !== undefined && input.Coordinates !== null && {\n    Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context)\n  }), input.RangeInKilometers !== undefined && input.RangeInKilometers !== null && {\n    RangeInKilometers: input.RangeInKilometers\n  });\n};\nvar serializeAws_restJson1HoldoutActivity = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\nvar serializeAws_restJson1ImportJobRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefineSegment !== undefined && input.DefineSegment !== null && {\n    DefineSegment: input.DefineSegment\n  }), input.ExternalId !== undefined && input.ExternalId !== null && {\n    ExternalId: input.ExternalId\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.RegisterEndpoints !== undefined && input.RegisterEndpoints !== null && {\n    RegisterEndpoints: input.RegisterEndpoints\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3Url !== undefined && input.S3Url !== null && {\n    S3Url: input.S3Url\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentName !== undefined && input.SegmentName !== null && {\n    SegmentName: input.SegmentName\n  });\n};\nvar serializeAws_restJson1JourneyCustomMessage = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\nvar serializeAws_restJson1JourneyEmailMessage = function (input, context) {\n  return __assign({}, input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  });\n};\nvar serializeAws_restJson1JourneyLimits = function (input, context) {\n  return __assign(__assign(__assign({}, input.DailyCap !== undefined && input.DailyCap !== null && {\n    DailyCap: input.DailyCap\n  }), input.EndpointReentryCap !== undefined && input.EndpointReentryCap !== null && {\n    EndpointReentryCap: input.EndpointReentryCap\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  });\n};\nvar serializeAws_restJson1JourneyPushMessage = function (input, context) {\n  return __assign({}, input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  });\n};\nvar serializeAws_restJson1JourneySchedule = function (input, context) {\n  return __assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\nvar serializeAws_restJson1JourneySMSMessage = function (input, context) {\n  return __assign(__assign({}, input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\nvar serializeAws_restJson1JourneyStateRequest = function (input, context) {\n  return __assign({}, input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\nvar serializeAws_restJson1ListOf__EndpointTypesElement = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_restJson1ListOf__string = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_restJson1ListOfEndpointBatchItem = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1EndpointBatchItem(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfMultiConditionalBranch = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfRandomSplitEntry = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfSegmentDimensions = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfSegmentGroup = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfSegmentReference = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1SegmentReference(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfSimpleCondition = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\nvar serializeAws_restJson1ListOfWriteTreatmentResource = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_restJson1WriteTreatmentResource(entry, context);\n  });\n};\nvar serializeAws_restJson1MapOf__double = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOf__string = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfActivity = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfAddressConfiguration = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AddressConfiguration(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfAttributeDimension = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfEndpointSendConfiguration = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EndpointSendConfiguration(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfEvent = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Event(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfEventsBatch = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EventsBatch(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfListOf__string = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1MapOfMetricDimension = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\nvar serializeAws_restJson1Message = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageSmallIconUrl !== undefined && input.ImageSmallIconUrl !== null && {\n    ImageSmallIconUrl: input.ImageSmallIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.JsonBody !== undefined && input.JsonBody !== null && {\n    JsonBody: input.JsonBody\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\nvar serializeAws_restJson1MessageConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context)\n  }), input.CustomMessage !== undefined && input.CustomMessage !== null && {\n    CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context)\n  });\n};\nvar serializeAws_restJson1MessageRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Addresses !== undefined && input.Addresses !== null && {\n    Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context)\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.Endpoints !== undefined && input.Endpoints !== null && {\n    Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  });\n};\nvar serializeAws_restJson1MetricDimension = function (input, context) {\n  return __assign(__assign({}, input.ComparisonOperator !== undefined && input.ComparisonOperator !== null && {\n    ComparisonOperator: input.ComparisonOperator\n  }), input.Value !== undefined && input.Value !== null && {\n    Value: input.Value\n  });\n};\nvar serializeAws_restJson1MultiConditionalBranch = function (input, context) {\n  return __assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1SimpleCondition(input.Condition, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  });\n};\nvar serializeAws_restJson1MultiConditionalSplitActivity = function (input, context) {\n  return __assign(__assign(__assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context)\n  }), input.DefaultActivity !== undefined && input.DefaultActivity !== null && {\n    DefaultActivity: input.DefaultActivity\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  });\n};\nvar serializeAws_restJson1NumberValidateRequest = function (input, context) {\n  return __assign(__assign({}, input.IsoCountryCode !== undefined && input.IsoCountryCode !== null && {\n    IsoCountryCode: input.IsoCountryCode\n  }), input.PhoneNumber !== undefined && input.PhoneNumber !== null && {\n    PhoneNumber: input.PhoneNumber\n  });\n};\nvar serializeAws_restJson1PublicEndpoint = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\nvar serializeAws_restJson1PushMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\nvar serializeAws_restJson1PushNotificationTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADM !== undefined && input.ADM !== null && {\n    ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context)\n  }), input.APNS !== undefined && input.APNS !== null && {\n    APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context)\n  }), input.Baidu !== undefined && input.Baidu !== null && {\n    Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context)\n  }), input.Default !== undefined && input.Default !== null && {\n    Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context)\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.GCM !== undefined && input.GCM !== null && {\n    GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context)\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1QuietTime = function (input, context) {\n  return __assign(__assign({}, input.End !== undefined && input.End !== null && {\n    End: input.End\n  }), input.Start !== undefined && input.Start !== null && {\n    Start: input.Start\n  });\n};\nvar serializeAws_restJson1RandomSplitActivity = function (input, context) {\n  return __assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context)\n  });\n};\nvar serializeAws_restJson1RandomSplitEntry = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\nvar serializeAws_restJson1RawEmail = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  });\n};\nvar serializeAws_restJson1RecencyDimension = function (input, context) {\n  return __assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.RecencyType !== undefined && input.RecencyType !== null && {\n    RecencyType: input.RecencyType\n  });\n};\nvar serializeAws_restJson1Schedule = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime\n  }), input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context)\n  }), input.Frequency !== undefined && input.Frequency !== null && {\n    Frequency: input.Frequency\n  }), input.IsLocalTime !== undefined && input.IsLocalTime !== null && {\n    IsLocalTime: input.IsLocalTime\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\nvar serializeAws_restJson1SegmentBehaviors = function (input, context) {\n  return __assign({}, input.Recency !== undefined && input.Recency !== null && {\n    Recency: serializeAws_restJson1RecencyDimension(input.Recency, context)\n  });\n};\nvar serializeAws_restJson1SegmentCondition = function (input, context) {\n  return __assign({}, input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\nvar serializeAws_restJson1SegmentDemographics = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context)\n  }), input.Channel !== undefined && input.Channel !== null && {\n    Channel: serializeAws_restJson1SetDimension(input.Channel, context)\n  }), input.DeviceType !== undefined && input.DeviceType !== null && {\n    DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context)\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: serializeAws_restJson1SetDimension(input.Make, context)\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: serializeAws_restJson1SetDimension(input.Model, context)\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: serializeAws_restJson1SetDimension(input.Platform, context)\n  });\n};\nvar serializeAws_restJson1SegmentDimensions = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.Behavior !== undefined && input.Behavior !== null && {\n    Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context)\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context)\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1SegmentLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  }), input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context)\n  });\n};\nvar serializeAws_restJson1SegmentGroup = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context)\n  }), input.SourceSegments !== undefined && input.SourceSegments !== null && {\n    SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context)\n  }), input.SourceType !== undefined && input.SourceType !== null && {\n    SourceType: input.SourceType\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_restJson1SegmentGroupList = function (input, context) {\n  return __assign(__assign({}, input.Groups !== undefined && input.Groups !== null && {\n    Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context)\n  }), input.Include !== undefined && input.Include !== null && {\n    Include: input.Include\n  });\n};\nvar serializeAws_restJson1SegmentLocation = function (input, context) {\n  return __assign(__assign({}, input.Country !== undefined && input.Country !== null && {\n    Country: serializeAws_restJson1SetDimension(input.Country, context)\n  }), input.GPSPoint !== undefined && input.GPSPoint !== null && {\n    GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context)\n  });\n};\nvar serializeAws_restJson1SegmentReference = function (input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\nvar serializeAws_restJson1SendUsersMessageRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  }), input.Users !== undefined && input.Users !== null && {\n    Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context)\n  });\n};\nvar serializeAws_restJson1Session = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.StartTimestamp !== undefined && input.StartTimestamp !== null && {\n    StartTimestamp: input.StartTimestamp\n  }), input.StopTimestamp !== undefined && input.StopTimestamp !== null && {\n    StopTimestamp: input.StopTimestamp\n  });\n};\nvar serializeAws_restJson1SetDimension = function (input, context) {\n  return __assign(__assign({}, input.DimensionType !== undefined && input.DimensionType !== null && {\n    DimensionType: input.DimensionType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\nvar serializeAws_restJson1SimpleCondition = function (input, context) {\n  return __assign(__assign(__assign({}, input.EventCondition !== undefined && input.EventCondition !== null && {\n    EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context)\n  }), input.SegmentCondition !== undefined && input.SegmentCondition !== null && {\n    SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context)\n  }), input.SegmentDimensions !== undefined && input.SegmentDimensions !== null && {\n    segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context)\n  });\n};\nvar serializeAws_restJson1SimpleEmail = function (input, context) {\n  return __assign(__assign(__assign({}, input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context)\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context)\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context)\n  });\n};\nvar serializeAws_restJson1SimpleEmailPart = function (input, context) {\n  return __assign(__assign({}, input.Charset !== undefined && input.Charset !== null && {\n    Charset: input.Charset\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\nvar serializeAws_restJson1SMSChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.ShortCode !== undefined && input.ShortCode !== null && {\n    ShortCode: input.ShortCode\n  });\n};\nvar serializeAws_restJson1SMSMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Keyword !== undefined && input.Keyword !== null && {\n    Keyword: input.Keyword\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\nvar serializeAws_restJson1SMSMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\nvar serializeAws_restJson1SMSTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1StartCondition = function (input, context) {\n  return __assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EventStartCondition !== undefined && input.EventStartCondition !== null && {\n    EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context)\n  }), input.SegmentStartCondition !== undefined && input.SegmentStartCondition !== null && {\n    SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context)\n  });\n};\nvar serializeAws_restJson1TagsModel = function (input, context) {\n  return __assign({}, input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1Template = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\nvar serializeAws_restJson1TemplateActiveVersionRequest = function (input, context) {\n  return __assign({}, input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\nvar serializeAws_restJson1TemplateConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.EmailTemplate !== undefined && input.EmailTemplate !== null && {\n    EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context)\n  }), input.PushTemplate !== undefined && input.PushTemplate !== null && {\n    PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context)\n  }), input.SMSTemplate !== undefined && input.SMSTemplate !== null && {\n    SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context)\n  }), input.VoiceTemplate !== undefined && input.VoiceTemplate !== null && {\n    VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context)\n  });\n};\nvar serializeAws_restJson1UpdateAttributesRequest = function (input, context) {\n  return __assign({}, input.Blacklist !== undefined && input.Blacklist !== null && {\n    Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context)\n  });\n};\nvar serializeAws_restJson1UpdateRecommenderConfigurationShape = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\nvar serializeAws_restJson1VoiceChannelRequest = function (input, context) {\n  return __assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\nvar serializeAws_restJson1VoiceMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  });\n};\nvar serializeAws_restJson1VoiceTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1WaitActivity = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.WaitTime !== undefined && input.WaitTime !== null && {\n    WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context)\n  });\n};\nvar serializeAws_restJson1WaitTime = function (input, context) {\n  return __assign(__assign({}, input.WaitFor !== undefined && input.WaitFor !== null && {\n    WaitFor: input.WaitFor\n  }), input.WaitUntil !== undefined && input.WaitUntil !== null && {\n    WaitUntil: input.WaitUntil\n  });\n};\nvar serializeAws_restJson1WriteApplicationSettingsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.CampaignHook !== undefined && input.CampaignHook !== null && {\n    CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context)\n  }), input.CloudWatchMetricsEnabled !== undefined && input.CloudWatchMetricsEnabled !== null && {\n    CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled\n  }), input.EventTaggingEnabled !== undefined && input.EventTaggingEnabled !== null && {\n    EventTaggingEnabled: input.EventTaggingEnabled\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  });\n};\nvar serializeAws_restJson1WriteCampaignRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AdditionalTreatments !== undefined && input.AdditionalTreatments !== null && {\n    AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context)\n  }), input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.HoldoutPercent !== undefined && input.HoldoutPercent !== null && {\n    HoldoutPercent: input.HoldoutPercent\n  }), input.Hook !== undefined && input.Hook !== null && {\n    Hook: serializeAws_restJson1CampaignHook(input.Hook, context)\n  }), input.IsPaused !== undefined && input.IsPaused !== null && {\n    IsPaused: input.IsPaused\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1WriteEventStream = function (input, context) {\n  return __assign(__assign({}, input.DestinationStreamArn !== undefined && input.DestinationStreamArn !== null && {\n    DestinationStreamArn: input.DestinationStreamArn\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\nvar serializeAws_restJson1WriteJourneyRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Activities !== undefined && input.Activities !== null && {\n    Activities: serializeAws_restJson1MapOfActivity(input.Activities, context)\n  }), input.CreationDate !== undefined && input.CreationDate !== null && {\n    CreationDate: input.CreationDate\n  }), input.LastModifiedDate !== undefined && input.LastModifiedDate !== null && {\n    LastModifiedDate: input.LastModifiedDate\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1JourneyLimits(input.Limits, context)\n  }), input.LocalTime !== undefined && input.LocalTime !== null && {\n    LocalTime: input.LocalTime\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.RefreshFrequency !== undefined && input.RefreshFrequency !== null && {\n    RefreshFrequency: input.RefreshFrequency\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context)\n  }), input.StartActivity !== undefined && input.StartActivity !== null && {\n    StartActivity: input.StartActivity\n  }), input.StartCondition !== undefined && input.StartCondition !== null && {\n    StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context)\n  }), input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\nvar serializeAws_restJson1WriteSegmentRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.SegmentGroups !== undefined && input.SegmentGroups !== null && {\n    SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context)\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\nvar serializeAws_restJson1WriteTreatmentResource = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SizePercent !== undefined && input.SizePercent !== null && {\n    SizePercent: input.SizePercent\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  });\n};\nvar deserializeAws_restJson1ActivitiesResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1Activity = function (output, context) {\n  return {\n    CUSTOM: output.CUSTOM !== undefined && output.CUSTOM !== null ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context) : undefined,\n    ConditionalSplit: output.ConditionalSplit !== undefined && output.ConditionalSplit !== null ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL: output.EMAIL !== undefined && output.EMAIL !== null ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context) : undefined,\n    Holdout: output.Holdout !== undefined && output.Holdout !== null ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context) : undefined,\n    MultiCondition: output.MultiCondition !== undefined && output.MultiCondition !== null ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context) : undefined,\n    PUSH: output.PUSH !== undefined && output.PUSH !== null ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context) : undefined,\n    RandomSplit: output.RandomSplit !== undefined && output.RandomSplit !== null ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context) : undefined,\n    SMS: output.SMS !== undefined && output.SMS !== null ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context) : undefined,\n    Wait: output.Wait !== undefined && output.Wait !== null ? deserializeAws_restJson1WaitActivity(output.Wait, context) : undefined\n  };\n};\nvar deserializeAws_restJson1ActivityResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart: output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount: output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null ? output.SuccessfulEndpointCount : undefined,\n    TimezonesCompletedCount: output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null ? output.TimezonesCompletedCount : undefined,\n    TimezonesTotalCount: output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null ? output.TimezonesTotalCount : undefined,\n    TotalEndpointCount: output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null ? output.TotalEndpointCount : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined\n  };\n};\nvar deserializeAws_restJson1ADMChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1AndroidPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl: output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null ? output.SmallImageIconUrl : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\nvar deserializeAws_restJson1APNSChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1APNSPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\nvar deserializeAws_restJson1APNSSandboxChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1APNSVoipChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1APNSVoipSandboxChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1ApplicationDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\nvar deserializeAws_restJson1ApplicationResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1ApplicationSettingsResource = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook: output.CampaignHook !== undefined && output.CampaignHook !== null ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined\n  };\n};\nvar deserializeAws_restJson1ApplicationsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1AttributeDimension = function (output, context) {\n  return {\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\nvar deserializeAws_restJson1AttributesResource = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1ListOf__string(output.Attributes, context) : undefined\n  };\n};\nvar deserializeAws_restJson1BaiduChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1BaseKpiResult = function (output, context) {\n  return {\n    Rows: output.Rows !== undefined && output.Rows !== null ? deserializeAws_restJson1ListOfResultRow(output.Rows, context) : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignCustomMessage = function (output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignEmailMessage = function (output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignEventFilter = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignHook = function (output, context) {\n  return {\n    LambdaFunctionName: output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null ? output.LambdaFunctionName : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignLimits = function (output, context) {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration: output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignResponse = function (output, context) {\n  return {\n    AdditionalTreatments: output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    DefaultState: output.DefaultState !== undefined && output.DefaultState !== null ? deserializeAws_restJson1CampaignState(output.DefaultState, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent: output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook: output.Hook !== undefined && output.Hook !== null ? deserializeAws_restJson1CampaignHook(output.Hook, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignSmsMessage = function (output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1CampaignState = function (output, context) {\n  return {\n    CampaignStatus: output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined\n  };\n};\nvar deserializeAws_restJson1ChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1ChannelsResponse = function (output, context) {\n  return {\n    Channels: output.Channels !== undefined && output.Channels !== null ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Condition = function (output, context) {\n  return {\n    Conditions: output.Conditions !== undefined && output.Conditions !== null ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context) : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined\n  };\n};\nvar deserializeAws_restJson1ConditionalSplitActivity = function (output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1Condition(output.Condition, context) : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined,\n    FalseActivity: output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined\n  };\n};\nvar deserializeAws_restJson1CreateTemplateMessageBody = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\nvar deserializeAws_restJson1CustomDeliveryConfiguration = function (output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined\n  };\n};\nvar deserializeAws_restJson1CustomMessageActivity = function (output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined,\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\nvar deserializeAws_restJson1DefaultPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\nvar deserializeAws_restJson1EmailChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet: output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1EmailMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\nvar deserializeAws_restJson1EmailTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointDemographic = function (output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion: output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointItemResponse = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointLocation = function (output, context) {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointMessageResult = function (output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointResponse = function (output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context) : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context) : undefined,\n    EffectiveDate: output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus: output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1EndpointLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__double(output.Metrics, context) : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User: output.User !== undefined && output.User !== null ? deserializeAws_restJson1EndpointUser(output.User, context) : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context) : undefined\n  };\n};\nvar deserializeAws_restJson1EndpointUser = function (output, context) {\n  return {\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context) : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined\n  };\n};\nvar deserializeAws_restJson1EventCondition = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    MessageActivity: output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined\n  };\n};\nvar deserializeAws_restJson1EventDimensions = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    EventType: output.EventType !== undefined && output.EventType !== null ? deserializeAws_restJson1SetDimension(output.EventType, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined\n  };\n};\nvar deserializeAws_restJson1EventFilter = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\nvar deserializeAws_restJson1EventItemResponse = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\nvar deserializeAws_restJson1EventsResponse = function (output, context) {\n  return {\n    Results: output.Results !== undefined && output.Results !== null ? deserializeAws_restJson1MapOfItemResponse(output.Results, context) : undefined\n  };\n};\nvar deserializeAws_restJson1EventStartCondition = function (output, context) {\n  return {\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1EventFilter(output.EventFilter, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\nvar deserializeAws_restJson1EventStream = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn: output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null ? output.DestinationStreamArn : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy: output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined\n  };\n};\nvar deserializeAws_restJson1ExportJobResource = function (output, context) {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined\n  };\n};\nvar deserializeAws_restJson1ExportJobResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ExportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\nvar deserializeAws_restJson1ExportJobsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1GCMChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1GPSCoordinates = function (output, context) {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined\n  };\n};\nvar deserializeAws_restJson1GPSPointDimension = function (output, context) {\n  return {\n    Coordinates: output.Coordinates !== undefined && output.Coordinates !== null ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context) : undefined,\n    RangeInKilometers: output.RangeInKilometers !== undefined && output.RangeInKilometers !== null ? output.RangeInKilometers : undefined\n  };\n};\nvar deserializeAws_restJson1HoldoutActivity = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\nvar deserializeAws_restJson1ImportJobResource = function (output, context) {\n  return {\n    DefineSegment: output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints: output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null ? output.RegisterEndpoints : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined\n  };\n};\nvar deserializeAws_restJson1ImportJobResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ImportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\nvar deserializeAws_restJson1ImportJobsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1ItemResponse = function (output, context) {\n  return {\n    EndpointItemResponse: output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context) : undefined,\n    EventsItemResponse: output.EventsItemResponse !== undefined && output.EventsItemResponse !== null ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context) : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyCustomMessage = function (output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyEmailMessage = function (output, context) {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = function (output, context) {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId: output.JourneyActivityId !== undefined && output.JourneyActivityId !== null ? output.JourneyActivityId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyExecutionMetricsResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyLimits = function (output, context) {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap: output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null ? output.EndpointReentryCap : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyPushMessage = function (output, context) {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined\n  };\n};\nvar deserializeAws_restJson1JourneyResponse = function (output, context) {\n  return {\n    Activities: output.Activities !== undefined && output.Activities !== null ? deserializeAws_restJson1MapOfActivity(output.Activities, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1JourneyLimits(output.Limits, context) : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    RefreshFrequency: output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1JourneySchedule(output.Schedule, context) : undefined,\n    StartActivity: output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition: output.StartCondition !== undefined && output.StartCondition !== null ? deserializeAws_restJson1StartCondition(output.StartCondition, context) : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1JourneySchedule = function (output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\nvar deserializeAws_restJson1JourneySMSMessage = function (output, context) {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\nvar deserializeAws_restJson1JourneysResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1ListOf__EndpointTypesElement = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1ListOf__string = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_restJson1ListOfActivityResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ActivityResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfApplicationResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ApplicationResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfCampaignResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1CampaignResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfEndpointResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1EndpointResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfExportJobResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ExportJobResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfImportJobResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ImportJobResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfJourneyResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1JourneyResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfMultiConditionalBranch = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfRandomSplitEntry = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfRecommenderConfigurationResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfResultRow = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ResultRow(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfResultRowValue = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1ResultRowValue(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfSegmentDimensions = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfSegmentGroup = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfSegmentReference = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SegmentReference(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfSegmentResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SegmentResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfSimpleCondition = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfTemplateResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1TemplateResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfTemplateVersionResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListOfTreatmentResource = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_restJson1TreatmentResource(entry, context);\n  });\n};\nvar deserializeAws_restJson1ListRecommenderConfigurationsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1MapOf__double = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOf__integer = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOf__string = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfActivity = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfAttributeDimension = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfChannelResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ChannelResponse(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfEndpointMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EndpointMessageResult(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfEventItemResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EventItemResponse(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfItemResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ItemResponse(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfListOf__string = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfMapOfEndpointMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MapOfEndpointMessageResult(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MessageResult(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1MapOfMetricDimension = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\nvar deserializeAws_restJson1Message = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl: output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null ? output.ImageSmallIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\nvar deserializeAws_restJson1MessageBody = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\nvar deserializeAws_restJson1MessageConfiguration = function (output, context) {\n  return {\n    ADMMessage: output.ADMMessage !== undefined && output.ADMMessage !== null ? deserializeAws_restJson1Message(output.ADMMessage, context) : undefined,\n    APNSMessage: output.APNSMessage !== undefined && output.APNSMessage !== null ? deserializeAws_restJson1Message(output.APNSMessage, context) : undefined,\n    BaiduMessage: output.BaiduMessage !== undefined && output.BaiduMessage !== null ? deserializeAws_restJson1Message(output.BaiduMessage, context) : undefined,\n    CustomMessage: output.CustomMessage !== undefined && output.CustomMessage !== null ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context) : undefined,\n    DefaultMessage: output.DefaultMessage !== undefined && output.DefaultMessage !== null ? deserializeAws_restJson1Message(output.DefaultMessage, context) : undefined,\n    EmailMessage: output.EmailMessage !== undefined && output.EmailMessage !== null ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context) : undefined,\n    GCMMessage: output.GCMMessage !== undefined && output.GCMMessage !== null ? deserializeAws_restJson1Message(output.GCMMessage, context) : undefined,\n    SMSMessage: output.SMSMessage !== undefined && output.SMSMessage !== null ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context) : undefined\n  };\n};\nvar deserializeAws_restJson1MessageResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult: output.EndpointResult !== undefined && output.EndpointResult !== null ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context) : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMessageResult(output.Result, context) : undefined\n  };\n};\nvar deserializeAws_restJson1MessageResult = function (output, context) {\n  return {\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\nvar deserializeAws_restJson1MetricDimension = function (output, context) {\n  return {\n    ComparisonOperator: output.ComparisonOperator !== undefined && output.ComparisonOperator !== null ? output.ComparisonOperator : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\nvar deserializeAws_restJson1MultiConditionalBranch = function (output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1SimpleCondition(output.Condition, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined\n  };\n};\nvar deserializeAws_restJson1MultiConditionalSplitActivity = function (output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context) : undefined,\n    DefaultActivity: output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined\n  };\n};\nvar deserializeAws_restJson1NumberValidateResponse = function (output, context) {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164: output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null ? output.CleansedPhoneNumberE164 : undefined,\n    CleansedPhoneNumberNational: output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null ? output.CleansedPhoneNumberNational : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2: output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric: output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null ? output.CountryCodeNumeric : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2: output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null ? output.OriginalCountryCodeIso2 : undefined,\n    OriginalPhoneNumber: output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null ? output.OriginalPhoneNumber : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode: output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined\n  };\n};\nvar deserializeAws_restJson1PushMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\nvar deserializeAws_restJson1PushNotificationTemplateResponse = function (output, context) {\n  return {\n    ADM: output.ADM !== undefined && output.ADM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context) : undefined,\n    APNS: output.APNS !== undefined && output.APNS !== null ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context) : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu: output.Baidu !== undefined && output.Baidu !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default: output.Default !== undefined && output.Default !== null ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context) : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    GCM: output.GCM !== undefined && output.GCM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1QuietTime = function (output, context) {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined\n  };\n};\nvar deserializeAws_restJson1RandomSplitActivity = function (output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context) : undefined\n  };\n};\nvar deserializeAws_restJson1RandomSplitEntry = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\nvar deserializeAws_restJson1RecencyDimension = function (output, context) {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined\n  };\n};\nvar deserializeAws_restJson1RecommenderConfigurationResponse = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOf__string(output.Attributes, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType: output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null ? output.RecommendationProviderIdType : undefined,\n    RecommendationProviderRoleArn: output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null ? output.RecommendationProviderRoleArn : undefined,\n    RecommendationProviderUri: output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null ? output.RecommendationProviderUri : undefined,\n    RecommendationTransformerUri: output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null ? output.RecommendationTransformerUri : undefined,\n    RecommendationsDisplayName: output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null ? output.RecommendationsDisplayName : undefined,\n    RecommendationsPerMessage: output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null ? output.RecommendationsPerMessage : undefined\n  };\n};\nvar deserializeAws_restJson1ResultRow = function (output, context) {\n  return {\n    GroupedBys: output.GroupedBys !== undefined && output.GroupedBys !== null ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context) : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context) : undefined\n  };\n};\nvar deserializeAws_restJson1ResultRowValue = function (output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\nvar deserializeAws_restJson1Schedule = function (output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context) : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentBehaviors = function (output, context) {\n  return {\n    Recency: output.Recency !== undefined && output.Recency !== null ? deserializeAws_restJson1RecencyDimension(output.Recency, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentCondition = function (output, context) {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentDemographics = function (output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? deserializeAws_restJson1SetDimension(output.AppVersion, context) : undefined,\n    Channel: output.Channel !== undefined && output.Channel !== null ? deserializeAws_restJson1SetDimension(output.Channel, context) : undefined,\n    DeviceType: output.DeviceType !== undefined && output.DeviceType !== null ? deserializeAws_restJson1SetDimension(output.DeviceType, context) : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? deserializeAws_restJson1SetDimension(output.Make, context) : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? deserializeAws_restJson1SetDimension(output.Model, context) : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? deserializeAws_restJson1SetDimension(output.Platform, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentDimensions = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    Behavior: output.Behavior !== undefined && output.Behavior !== null ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context) : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context) : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1SegmentLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined,\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentGroup = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context) : undefined,\n    SourceSegments: output.SourceSegments !== undefined && output.SourceSegments !== null ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context) : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentGroupList = function (output, context) {\n  return {\n    Groups: output.Groups !== undefined && output.Groups !== null ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context) : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentImportResource = function (output, context) {\n  return {\n    ChannelCounts: output.ChannelCounts !== undefined && output.ChannelCounts !== null ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context) : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentLocation = function (output, context) {\n  return {\n    Country: output.Country !== undefined && output.Country !== null ? deserializeAws_restJson1SetDimension(output.Country, context) : undefined,\n    GPSPoint: output.GPSPoint !== undefined && output.GPSPoint !== null ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentReference = function (output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition: output.ImportDefinition !== undefined && output.ImportDefinition !== null ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups: output.SegmentGroups !== undefined && output.SegmentGroups !== null ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context) : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SegmentsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1SendUsersMessageResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SetDimension = function (output, context) {\n  return {\n    DimensionType: output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SimpleCondition = function (output, context) {\n  return {\n    EventCondition: output.EventCondition !== undefined && output.EventCondition !== null ? deserializeAws_restJson1EventCondition(output.EventCondition, context) : undefined,\n    SegmentCondition: output.SegmentCondition !== undefined && output.SegmentCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context) : undefined,\n    SegmentDimensions: output.segmentDimensions !== undefined && output.segmentDimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context) : undefined\n  };\n};\nvar deserializeAws_restJson1SMSChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond: output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null ? output.PromotionalMessagesPerSecond : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond: output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null ? output.TransactionalMessagesPerSecond : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1SMSMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\nvar deserializeAws_restJson1SMSTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1StartCondition = function (output, context) {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition: output.EventStartCondition !== undefined && output.EventStartCondition !== null ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context) : undefined,\n    SegmentStartCondition: output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context) : undefined\n  };\n};\nvar deserializeAws_restJson1TagsModel = function (output, context) {\n  return {\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1Template = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1TemplateConfiguration = function (output, context) {\n  return {\n    EmailTemplate: output.EmailTemplate !== undefined && output.EmailTemplate !== null ? deserializeAws_restJson1Template(output.EmailTemplate, context) : undefined,\n    PushTemplate: output.PushTemplate !== undefined && output.PushTemplate !== null ? deserializeAws_restJson1Template(output.PushTemplate, context) : undefined,\n    SMSTemplate: output.SMSTemplate !== undefined && output.SMSTemplate !== null ? deserializeAws_restJson1Template(output.SMSTemplate, context) : undefined,\n    VoiceTemplate: output.VoiceTemplate !== undefined && output.VoiceTemplate !== null ? deserializeAws_restJson1Template(output.VoiceTemplate, context) : undefined\n  };\n};\nvar deserializeAws_restJson1TemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1TemplatesResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_restJson1TemplateVersionResponse = function (output, context) {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1TemplateVersionsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context) : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\nvar deserializeAws_restJson1TreatmentResource = function (output, context) {\n  return {\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined\n  };\n};\nvar deserializeAws_restJson1VoiceChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\nvar deserializeAws_restJson1VoiceTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\nvar deserializeAws_restJson1WaitActivity = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime: output.WaitTime !== undefined && output.WaitTime !== null ? deserializeAws_restJson1WaitTime(output.WaitTime, context) : undefined\n  };\n};\nvar deserializeAws_restJson1WaitTime = function (output, context) {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined\n  };\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","extendedEncodeURIComponent","__extendedEncodeURIComponent","serializeAws_restJson1CreateAppCommand","input","context","headers","resolvedPath","CreateApplicationRequest","undefined","body","serializeAws_restJson1CreateApplicationRequest","JSON","stringify","endpoint","_a","_c","hostname","_b","protocol","port","method","path","serializeAws_restJson1CreateCampaignCommand","ApplicationId","labelValue","length","Error","replace","WriteCampaignRequest","serializeAws_restJson1WriteCampaignRequest","serializeAws_restJson1CreateEmailTemplateCommand","TemplateName","EmailTemplateRequest","serializeAws_restJson1EmailTemplateRequest","serializeAws_restJson1CreateExportJobCommand","ExportJobRequest","serializeAws_restJson1ExportJobRequest","serializeAws_restJson1CreateImportJobCommand","ImportJobRequest","serializeAws_restJson1ImportJobRequest","serializeAws_restJson1CreateJourneyCommand","WriteJourneyRequest","serializeAws_restJson1WriteJourneyRequest","serializeAws_restJson1CreatePushTemplateCommand","PushNotificationTemplateRequest","serializeAws_restJson1PushNotificationTemplateRequest","serializeAws_restJson1CreateRecommenderConfigurationCommand","CreateRecommenderConfiguration","serializeAws_restJson1CreateRecommenderConfigurationShape","serializeAws_restJson1CreateSegmentCommand","WriteSegmentRequest","serializeAws_restJson1WriteSegmentRequest","serializeAws_restJson1CreateSmsTemplateCommand","SMSTemplateRequest","serializeAws_restJson1SMSTemplateRequest","serializeAws_restJson1CreateVoiceTemplateCommand","VoiceTemplateRequest","serializeAws_restJson1VoiceTemplateRequest","serializeAws_restJson1DeleteAdmChannelCommand","serializeAws_restJson1DeleteApnsChannelCommand","serializeAws_restJson1DeleteApnsSandboxChannelCommand","serializeAws_restJson1DeleteApnsVoipChannelCommand","serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand","serializeAws_restJson1DeleteAppCommand","serializeAws_restJson1DeleteBaiduChannelCommand","serializeAws_restJson1DeleteCampaignCommand","CampaignId","serializeAws_restJson1DeleteEmailChannelCommand","serializeAws_restJson1DeleteEmailTemplateCommand","query","Version","version","serializeAws_restJson1DeleteEndpointCommand","EndpointId","serializeAws_restJson1DeleteEventStreamCommand","serializeAws_restJson1DeleteGcmChannelCommand","serializeAws_restJson1DeleteJourneyCommand","JourneyId","serializeAws_restJson1DeletePushTemplateCommand","serializeAws_restJson1DeleteRecommenderConfigurationCommand","RecommenderId","serializeAws_restJson1DeleteSegmentCommand","SegmentId","serializeAws_restJson1DeleteSmsChannelCommand","serializeAws_restJson1DeleteSmsTemplateCommand","serializeAws_restJson1DeleteUserEndpointsCommand","UserId","serializeAws_restJson1DeleteVoiceChannelCommand","serializeAws_restJson1DeleteVoiceTemplateCommand","serializeAws_restJson1GetAdmChannelCommand","serializeAws_restJson1GetApnsChannelCommand","serializeAws_restJson1GetApnsSandboxChannelCommand","serializeAws_restJson1GetApnsVoipChannelCommand","serializeAws_restJson1GetApnsVoipSandboxChannelCommand","serializeAws_restJson1GetAppCommand","serializeAws_restJson1GetApplicationDateRangeKpiCommand","KpiName","EndTime","toISOString","split","toString","NextToken","PageSize","StartTime","serializeAws_restJson1GetApplicationSettingsCommand","serializeAws_restJson1GetAppsCommand","Token","token","serializeAws_restJson1GetBaiduChannelCommand","serializeAws_restJson1GetCampaignCommand","serializeAws_restJson1GetCampaignActivitiesCommand","serializeAws_restJson1GetCampaignDateRangeKpiCommand","serializeAws_restJson1GetCampaignsCommand","serializeAws_restJson1GetCampaignVersionCommand","serializeAws_restJson1GetCampaignVersionsCommand","serializeAws_restJson1GetChannelsCommand","serializeAws_restJson1GetEmailChannelCommand","serializeAws_restJson1GetEmailTemplateCommand","serializeAws_restJson1GetEndpointCommand","serializeAws_restJson1GetEventStreamCommand","serializeAws_restJson1GetExportJobCommand","JobId","serializeAws_restJson1GetExportJobsCommand","serializeAws_restJson1GetGcmChannelCommand","serializeAws_restJson1GetImportJobCommand","serializeAws_restJson1GetImportJobsCommand","serializeAws_restJson1GetJourneyCommand","serializeAws_restJson1GetJourneyDateRangeKpiCommand","serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","JourneyActivityId","serializeAws_restJson1GetJourneyExecutionMetricsCommand","serializeAws_restJson1GetPushTemplateCommand","serializeAws_restJson1GetRecommenderConfigurationCommand","serializeAws_restJson1GetRecommenderConfigurationsCommand","serializeAws_restJson1GetSegmentCommand","serializeAws_restJson1GetSegmentExportJobsCommand","serializeAws_restJson1GetSegmentImportJobsCommand","serializeAws_restJson1GetSegmentsCommand","serializeAws_restJson1GetSegmentVersionCommand","serializeAws_restJson1GetSegmentVersionsCommand","serializeAws_restJson1GetSmsChannelCommand","serializeAws_restJson1GetSmsTemplateCommand","serializeAws_restJson1GetUserEndpointsCommand","serializeAws_restJson1GetVoiceChannelCommand","serializeAws_restJson1GetVoiceTemplateCommand","serializeAws_restJson1ListJourneysCommand","serializeAws_restJson1ListTagsForResourceCommand","ResourceArn","serializeAws_restJson1ListTemplatesCommand","Prefix","prefix","TemplateType","serializeAws_restJson1ListTemplateVersionsCommand","serializeAws_restJson1PhoneNumberValidateCommand","NumberValidateRequest","serializeAws_restJson1NumberValidateRequest","serializeAws_restJson1PutEventsCommand","EventsRequest","serializeAws_restJson1EventsRequest","serializeAws_restJson1PutEventStreamCommand","WriteEventStream","serializeAws_restJson1WriteEventStream","serializeAws_restJson1RemoveAttributesCommand","AttributeType","UpdateAttributesRequest","serializeAws_restJson1UpdateAttributesRequest","serializeAws_restJson1SendMessagesCommand","MessageRequest","serializeAws_restJson1MessageRequest","serializeAws_restJson1SendUsersMessagesCommand","SendUsersMessageRequest","serializeAws_restJson1SendUsersMessageRequest","serializeAws_restJson1TagResourceCommand","TagsModel","serializeAws_restJson1TagsModel","serializeAws_restJson1UntagResourceCommand","TagKeys","tagKeys","map","_entry","serializeAws_restJson1UpdateAdmChannelCommand","ADMChannelRequest","serializeAws_restJson1ADMChannelRequest","serializeAws_restJson1UpdateApnsChannelCommand","APNSChannelRequest","serializeAws_restJson1APNSChannelRequest","serializeAws_restJson1UpdateApnsSandboxChannelCommand","APNSSandboxChannelRequest","serializeAws_restJson1APNSSandboxChannelRequest","serializeAws_restJson1UpdateApnsVoipChannelCommand","APNSVoipChannelRequest","serializeAws_restJson1APNSVoipChannelRequest","serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand","APNSVoipSandboxChannelRequest","serializeAws_restJson1APNSVoipSandboxChannelRequest","serializeAws_restJson1UpdateApplicationSettingsCommand","WriteApplicationSettingsRequest","serializeAws_restJson1WriteApplicationSettingsRequest","serializeAws_restJson1UpdateBaiduChannelCommand","BaiduChannelRequest","serializeAws_restJson1BaiduChannelRequest","serializeAws_restJson1UpdateCampaignCommand","serializeAws_restJson1UpdateEmailChannelCommand","EmailChannelRequest","serializeAws_restJson1EmailChannelRequest","serializeAws_restJson1UpdateEmailTemplateCommand","CreateNewVersion","serializeAws_restJson1UpdateEndpointCommand","EndpointRequest","serializeAws_restJson1EndpointRequest","serializeAws_restJson1UpdateEndpointsBatchCommand","EndpointBatchRequest","serializeAws_restJson1EndpointBatchRequest","serializeAws_restJson1UpdateGcmChannelCommand","GCMChannelRequest","serializeAws_restJson1GCMChannelRequest","serializeAws_restJson1UpdateJourneyCommand","serializeAws_restJson1UpdateJourneyStateCommand","JourneyStateRequest","serializeAws_restJson1JourneyStateRequest","serializeAws_restJson1UpdatePushTemplateCommand","serializeAws_restJson1UpdateRecommenderConfigurationCommand","UpdateRecommenderConfiguration","serializeAws_restJson1UpdateRecommenderConfigurationShape","serializeAws_restJson1UpdateSegmentCommand","serializeAws_restJson1UpdateSmsChannelCommand","SMSChannelRequest","serializeAws_restJson1SMSChannelRequest","serializeAws_restJson1UpdateSmsTemplateCommand","serializeAws_restJson1UpdateTemplateActiveVersionCommand","TemplateActiveVersionRequest","serializeAws_restJson1TemplateActiveVersionRequest","serializeAws_restJson1UpdateVoiceChannelCommand","VoiceChannelRequest","serializeAws_restJson1VoiceChannelRequest","serializeAws_restJson1UpdateVoiceTemplateCommand","deserializeAws_restJson1CreateAppCommand","output","statusCode","deserializeAws_restJson1CreateAppCommandError","contents","$metadata","deserializeMetadata","ApplicationResponse","parseBody","data","deserializeAws_restJson1ApplicationResponse","Promise","resolve","parsedOutput","_k","_l","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1BadRequestExceptionResponse","response","name","deserializeAws_restJson1ForbiddenExceptionResponse","deserializeAws_restJson1InternalServerErrorExceptionResponse","deserializeAws_restJson1MethodNotAllowedExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","deserializeAws_restJson1PayloadTooLargeExceptionResponse","deserializeAws_restJson1TooManyRequestsExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","deserializeAws_restJson1CreateCampaignCommand","deserializeAws_restJson1CreateCampaignCommandError","CampaignResponse","deserializeAws_restJson1CampaignResponse","deserializeAws_restJson1CreateEmailTemplateCommand","deserializeAws_restJson1CreateEmailTemplateCommandError","CreateTemplateMessageBody","deserializeAws_restJson1CreateTemplateMessageBody","_h","_j","deserializeAws_restJson1CreateExportJobCommand","deserializeAws_restJson1CreateExportJobCommandError","ExportJobResponse","deserializeAws_restJson1ExportJobResponse","deserializeAws_restJson1CreateImportJobCommand","deserializeAws_restJson1CreateImportJobCommandError","ImportJobResponse","deserializeAws_restJson1ImportJobResponse","deserializeAws_restJson1CreateJourneyCommand","deserializeAws_restJson1CreateJourneyCommandError","JourneyResponse","deserializeAws_restJson1JourneyResponse","deserializeAws_restJson1CreatePushTemplateCommand","deserializeAws_restJson1CreatePushTemplateCommandError","deserializeAws_restJson1CreateRecommenderConfigurationCommand","deserializeAws_restJson1CreateRecommenderConfigurationCommandError","RecommenderConfigurationResponse","deserializeAws_restJson1RecommenderConfigurationResponse","deserializeAws_restJson1CreateSegmentCommand","deserializeAws_restJson1CreateSegmentCommandError","SegmentResponse","deserializeAws_restJson1SegmentResponse","deserializeAws_restJson1CreateSmsTemplateCommand","deserializeAws_restJson1CreateSmsTemplateCommandError","deserializeAws_restJson1CreateVoiceTemplateCommand","deserializeAws_restJson1CreateVoiceTemplateCommandError","deserializeAws_restJson1DeleteAdmChannelCommand","deserializeAws_restJson1DeleteAdmChannelCommandError","ADMChannelResponse","deserializeAws_restJson1ADMChannelResponse","deserializeAws_restJson1DeleteApnsChannelCommand","deserializeAws_restJson1DeleteApnsChannelCommandError","APNSChannelResponse","deserializeAws_restJson1APNSChannelResponse","deserializeAws_restJson1DeleteApnsSandboxChannelCommand","deserializeAws_restJson1DeleteApnsSandboxChannelCommandError","APNSSandboxChannelResponse","deserializeAws_restJson1APNSSandboxChannelResponse","deserializeAws_restJson1DeleteApnsVoipChannelCommand","deserializeAws_restJson1DeleteApnsVoipChannelCommandError","APNSVoipChannelResponse","deserializeAws_restJson1APNSVoipChannelResponse","deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand","deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError","APNSVoipSandboxChannelResponse","deserializeAws_restJson1APNSVoipSandboxChannelResponse","deserializeAws_restJson1DeleteAppCommand","deserializeAws_restJson1DeleteAppCommandError","deserializeAws_restJson1DeleteBaiduChannelCommand","deserializeAws_restJson1DeleteBaiduChannelCommandError","BaiduChannelResponse","deserializeAws_restJson1BaiduChannelResponse","deserializeAws_restJson1DeleteCampaignCommand","deserializeAws_restJson1DeleteCampaignCommandError","deserializeAws_restJson1DeleteEmailChannelCommand","deserializeAws_restJson1DeleteEmailChannelCommandError","EmailChannelResponse","deserializeAws_restJson1EmailChannelResponse","deserializeAws_restJson1DeleteEmailTemplateCommand","deserializeAws_restJson1DeleteEmailTemplateCommandError","MessageBody","deserializeAws_restJson1MessageBody","deserializeAws_restJson1DeleteEndpointCommand","deserializeAws_restJson1DeleteEndpointCommandError","EndpointResponse","deserializeAws_restJson1EndpointResponse","deserializeAws_restJson1DeleteEventStreamCommand","deserializeAws_restJson1DeleteEventStreamCommandError","EventStream","deserializeAws_restJson1EventStream","deserializeAws_restJson1DeleteGcmChannelCommand","deserializeAws_restJson1DeleteGcmChannelCommandError","GCMChannelResponse","deserializeAws_restJson1GCMChannelResponse","deserializeAws_restJson1DeleteJourneyCommand","deserializeAws_restJson1DeleteJourneyCommandError","deserializeAws_restJson1DeletePushTemplateCommand","deserializeAws_restJson1DeletePushTemplateCommandError","deserializeAws_restJson1DeleteRecommenderConfigurationCommand","deserializeAws_restJson1DeleteRecommenderConfigurationCommandError","deserializeAws_restJson1DeleteSegmentCommand","deserializeAws_restJson1DeleteSegmentCommandError","deserializeAws_restJson1DeleteSmsChannelCommand","deserializeAws_restJson1DeleteSmsChannelCommandError","SMSChannelResponse","deserializeAws_restJson1SMSChannelResponse","deserializeAws_restJson1DeleteSmsTemplateCommand","deserializeAws_restJson1DeleteSmsTemplateCommandError","deserializeAws_restJson1DeleteUserEndpointsCommand","deserializeAws_restJson1DeleteUserEndpointsCommandError","EndpointsResponse","deserializeAws_restJson1EndpointsResponse","deserializeAws_restJson1DeleteVoiceChannelCommand","deserializeAws_restJson1DeleteVoiceChannelCommandError","VoiceChannelResponse","deserializeAws_restJson1VoiceChannelResponse","deserializeAws_restJson1DeleteVoiceTemplateCommand","deserializeAws_restJson1DeleteVoiceTemplateCommandError","deserializeAws_restJson1GetAdmChannelCommand","deserializeAws_restJson1GetAdmChannelCommandError","deserializeAws_restJson1GetApnsChannelCommand","deserializeAws_restJson1GetApnsChannelCommandError","deserializeAws_restJson1GetApnsSandboxChannelCommand","deserializeAws_restJson1GetApnsSandboxChannelCommandError","deserializeAws_restJson1GetApnsVoipChannelCommand","deserializeAws_restJson1GetApnsVoipChannelCommandError","deserializeAws_restJson1GetApnsVoipSandboxChannelCommand","deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError","deserializeAws_restJson1GetAppCommand","deserializeAws_restJson1GetAppCommandError","deserializeAws_restJson1GetApplicationDateRangeKpiCommand","deserializeAws_restJson1GetApplicationDateRangeKpiCommandError","ApplicationDateRangeKpiResponse","deserializeAws_restJson1ApplicationDateRangeKpiResponse","deserializeAws_restJson1GetApplicationSettingsCommand","deserializeAws_restJson1GetApplicationSettingsCommandError","ApplicationSettingsResource","deserializeAws_restJson1ApplicationSettingsResource","deserializeAws_restJson1GetAppsCommand","deserializeAws_restJson1GetAppsCommandError","ApplicationsResponse","deserializeAws_restJson1ApplicationsResponse","deserializeAws_restJson1GetBaiduChannelCommand","deserializeAws_restJson1GetBaiduChannelCommandError","deserializeAws_restJson1GetCampaignCommand","deserializeAws_restJson1GetCampaignCommandError","deserializeAws_restJson1GetCampaignActivitiesCommand","deserializeAws_restJson1GetCampaignActivitiesCommandError","ActivitiesResponse","deserializeAws_restJson1ActivitiesResponse","deserializeAws_restJson1GetCampaignDateRangeKpiCommand","deserializeAws_restJson1GetCampaignDateRangeKpiCommandError","CampaignDateRangeKpiResponse","deserializeAws_restJson1CampaignDateRangeKpiResponse","deserializeAws_restJson1GetCampaignsCommand","deserializeAws_restJson1GetCampaignsCommandError","CampaignsResponse","deserializeAws_restJson1CampaignsResponse","deserializeAws_restJson1GetCampaignVersionCommand","deserializeAws_restJson1GetCampaignVersionCommandError","deserializeAws_restJson1GetCampaignVersionsCommand","deserializeAws_restJson1GetCampaignVersionsCommandError","deserializeAws_restJson1GetChannelsCommand","deserializeAws_restJson1GetChannelsCommandError","ChannelsResponse","deserializeAws_restJson1ChannelsResponse","deserializeAws_restJson1GetEmailChannelCommand","deserializeAws_restJson1GetEmailChannelCommandError","deserializeAws_restJson1GetEmailTemplateCommand","deserializeAws_restJson1GetEmailTemplateCommandError","EmailTemplateResponse","deserializeAws_restJson1EmailTemplateResponse","deserializeAws_restJson1GetEndpointCommand","deserializeAws_restJson1GetEndpointCommandError","deserializeAws_restJson1GetEventStreamCommand","deserializeAws_restJson1GetEventStreamCommandError","deserializeAws_restJson1GetExportJobCommand","deserializeAws_restJson1GetExportJobCommandError","deserializeAws_restJson1GetExportJobsCommand","deserializeAws_restJson1GetExportJobsCommandError","ExportJobsResponse","deserializeAws_restJson1ExportJobsResponse","deserializeAws_restJson1GetGcmChannelCommand","deserializeAws_restJson1GetGcmChannelCommandError","deserializeAws_restJson1GetImportJobCommand","deserializeAws_restJson1GetImportJobCommandError","deserializeAws_restJson1GetImportJobsCommand","deserializeAws_restJson1GetImportJobsCommandError","ImportJobsResponse","deserializeAws_restJson1ImportJobsResponse","deserializeAws_restJson1GetJourneyCommand","deserializeAws_restJson1GetJourneyCommandError","deserializeAws_restJson1GetJourneyDateRangeKpiCommand","deserializeAws_restJson1GetJourneyDateRangeKpiCommandError","JourneyDateRangeKpiResponse","deserializeAws_restJson1JourneyDateRangeKpiResponse","deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError","JourneyExecutionActivityMetricsResponse","deserializeAws_restJson1JourneyExecutionActivityMetricsResponse","deserializeAws_restJson1GetJourneyExecutionMetricsCommand","deserializeAws_restJson1GetJourneyExecutionMetricsCommandError","JourneyExecutionMetricsResponse","deserializeAws_restJson1JourneyExecutionMetricsResponse","deserializeAws_restJson1GetPushTemplateCommand","deserializeAws_restJson1GetPushTemplateCommandError","PushNotificationTemplateResponse","deserializeAws_restJson1PushNotificationTemplateResponse","deserializeAws_restJson1GetRecommenderConfigurationCommand","deserializeAws_restJson1GetRecommenderConfigurationCommandError","deserializeAws_restJson1GetRecommenderConfigurationsCommand","deserializeAws_restJson1GetRecommenderConfigurationsCommandError","ListRecommenderConfigurationsResponse","deserializeAws_restJson1ListRecommenderConfigurationsResponse","deserializeAws_restJson1GetSegmentCommand","deserializeAws_restJson1GetSegmentCommandError","deserializeAws_restJson1GetSegmentExportJobsCommand","deserializeAws_restJson1GetSegmentExportJobsCommandError","deserializeAws_restJson1GetSegmentImportJobsCommand","deserializeAws_restJson1GetSegmentImportJobsCommandError","deserializeAws_restJson1GetSegmentsCommand","deserializeAws_restJson1GetSegmentsCommandError","SegmentsResponse","deserializeAws_restJson1SegmentsResponse","deserializeAws_restJson1GetSegmentVersionCommand","deserializeAws_restJson1GetSegmentVersionCommandError","deserializeAws_restJson1GetSegmentVersionsCommand","deserializeAws_restJson1GetSegmentVersionsCommandError","deserializeAws_restJson1GetSmsChannelCommand","deserializeAws_restJson1GetSmsChannelCommandError","deserializeAws_restJson1GetSmsTemplateCommand","deserializeAws_restJson1GetSmsTemplateCommandError","SMSTemplateResponse","deserializeAws_restJson1SMSTemplateResponse","deserializeAws_restJson1GetUserEndpointsCommand","deserializeAws_restJson1GetUserEndpointsCommandError","deserializeAws_restJson1GetVoiceChannelCommand","deserializeAws_restJson1GetVoiceChannelCommandError","deserializeAws_restJson1GetVoiceTemplateCommand","deserializeAws_restJson1GetVoiceTemplateCommandError","VoiceTemplateResponse","deserializeAws_restJson1VoiceTemplateResponse","deserializeAws_restJson1ListJourneysCommand","deserializeAws_restJson1ListJourneysCommandError","JourneysResponse","deserializeAws_restJson1JourneysResponse","deserializeAws_restJson1ListTagsForResourceCommand","deserializeAws_restJson1ListTagsForResourceCommandError","deserializeAws_restJson1TagsModel","deserializeAws_restJson1ListTemplatesCommand","deserializeAws_restJson1ListTemplatesCommandError","TemplatesResponse","deserializeAws_restJson1TemplatesResponse","deserializeAws_restJson1ListTemplateVersionsCommand","deserializeAws_restJson1ListTemplateVersionsCommandError","TemplateVersionsResponse","deserializeAws_restJson1TemplateVersionsResponse","deserializeAws_restJson1PhoneNumberValidateCommand","deserializeAws_restJson1PhoneNumberValidateCommandError","NumberValidateResponse","deserializeAws_restJson1NumberValidateResponse","deserializeAws_restJson1PutEventsCommand","deserializeAws_restJson1PutEventsCommandError","EventsResponse","deserializeAws_restJson1EventsResponse","deserializeAws_restJson1PutEventStreamCommand","deserializeAws_restJson1PutEventStreamCommandError","deserializeAws_restJson1RemoveAttributesCommand","deserializeAws_restJson1RemoveAttributesCommandError","AttributesResource","deserializeAws_restJson1AttributesResource","deserializeAws_restJson1SendMessagesCommand","deserializeAws_restJson1SendMessagesCommandError","MessageResponse","deserializeAws_restJson1MessageResponse","deserializeAws_restJson1SendUsersMessagesCommand","deserializeAws_restJson1SendUsersMessagesCommandError","SendUsersMessageResponse","deserializeAws_restJson1SendUsersMessageResponse","deserializeAws_restJson1TagResourceCommand","deserializeAws_restJson1TagResourceCommandError","collectBody","deserializeAws_restJson1UntagResourceCommand","deserializeAws_restJson1UntagResourceCommandError","deserializeAws_restJson1UpdateAdmChannelCommand","deserializeAws_restJson1UpdateAdmChannelCommandError","deserializeAws_restJson1UpdateApnsChannelCommand","deserializeAws_restJson1UpdateApnsChannelCommandError","deserializeAws_restJson1UpdateApnsSandboxChannelCommand","deserializeAws_restJson1UpdateApnsSandboxChannelCommandError","deserializeAws_restJson1UpdateApnsVoipChannelCommand","deserializeAws_restJson1UpdateApnsVoipChannelCommandError","deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand","deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError","deserializeAws_restJson1UpdateApplicationSettingsCommand","deserializeAws_restJson1UpdateApplicationSettingsCommandError","deserializeAws_restJson1UpdateBaiduChannelCommand","deserializeAws_restJson1UpdateBaiduChannelCommandError","deserializeAws_restJson1UpdateCampaignCommand","deserializeAws_restJson1UpdateCampaignCommandError","deserializeAws_restJson1UpdateEmailChannelCommand","deserializeAws_restJson1UpdateEmailChannelCommandError","deserializeAws_restJson1UpdateEmailTemplateCommand","deserializeAws_restJson1UpdateEmailTemplateCommandError","deserializeAws_restJson1UpdateEndpointCommand","deserializeAws_restJson1UpdateEndpointCommandError","deserializeAws_restJson1UpdateEndpointsBatchCommand","deserializeAws_restJson1UpdateEndpointsBatchCommandError","deserializeAws_restJson1UpdateGcmChannelCommand","deserializeAws_restJson1UpdateGcmChannelCommandError","deserializeAws_restJson1UpdateJourneyCommand","deserializeAws_restJson1UpdateJourneyCommandError","_m","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1UpdateJourneyStateCommand","deserializeAws_restJson1UpdateJourneyStateCommandError","deserializeAws_restJson1UpdatePushTemplateCommand","deserializeAws_restJson1UpdatePushTemplateCommandError","deserializeAws_restJson1UpdateRecommenderConfigurationCommand","deserializeAws_restJson1UpdateRecommenderConfigurationCommandError","deserializeAws_restJson1UpdateSegmentCommand","deserializeAws_restJson1UpdateSegmentCommandError","deserializeAws_restJson1UpdateSmsChannelCommand","deserializeAws_restJson1UpdateSmsChannelCommandError","deserializeAws_restJson1UpdateSmsTemplateCommand","deserializeAws_restJson1UpdateSmsTemplateCommandError","deserializeAws_restJson1UpdateTemplateActiveVersionCommand","deserializeAws_restJson1UpdateTemplateActiveVersionCommandError","deserializeAws_restJson1UpdateVoiceChannelCommand","deserializeAws_restJson1UpdateVoiceChannelCommandError","deserializeAws_restJson1UpdateVoiceTemplateCommand","deserializeAws_restJson1UpdateVoiceTemplateCommandError","RequestID","serializeAws_restJson1Activity","CUSTOM","serializeAws_restJson1CustomMessageActivity","ConditionalSplit","serializeAws_restJson1ConditionalSplitActivity","Description","EMAIL","serializeAws_restJson1EmailMessageActivity","Holdout","serializeAws_restJson1HoldoutActivity","MultiCondition","serializeAws_restJson1MultiConditionalSplitActivity","PUSH","serializeAws_restJson1PushMessageActivity","RandomSplit","serializeAws_restJson1RandomSplitActivity","SMS","serializeAws_restJson1SMSMessageActivity","Wait","serializeAws_restJson1WaitActivity","serializeAws_restJson1AddressConfiguration","BodyOverride","ChannelType","Context","serializeAws_restJson1MapOf__string","RawContent","Substitutions","serializeAws_restJson1MapOfListOf__string","TitleOverride","ClientId","ClientSecret","Enabled","serializeAws_restJson1ADMMessage","Action","Body","ConsolidationKey","Data","ExpiresAfter","IconReference","ImageIconUrl","ImageUrl","MD5","SilentPush","SmallImageIconUrl","Sound","Title","Url","serializeAws_restJson1AndroidPushNotificationTemplate","BundleId","Certificate","DefaultAuthenticationMethod","PrivateKey","TeamId","TokenKey","TokenKeyId","serializeAws_restJson1APNSMessage","APNSPushType","Badge","Category","CollapseId","MediaUrl","PreferredAuthenticationMethod","Priority","ThreadId","TimeToLive","serializeAws_restJson1APNSPushNotificationTemplate","serializeAws_restJson1AttributeDimension","Values","serializeAws_restJson1ListOf__string","ApiKey","SecretKey","serializeAws_restJson1BaiduMessage","serializeAws_restJson1CampaignCustomMessage","serializeAws_restJson1CampaignEmailMessage","FromAddress","HtmlBody","serializeAws_restJson1CampaignEventFilter","Dimensions","serializeAws_restJson1EventDimensions","FilterType","serializeAws_restJson1CampaignHook","LambdaFunctionName","Mode","WebUrl","serializeAws_restJson1CampaignLimits","Daily","MaximumDuration","MessagesPerSecond","Total","serializeAws_restJson1CampaignSmsMessage","MessageType","SenderId","serializeAws_restJson1Condition","Conditions","serializeAws_restJson1ListOfSimpleCondition","Operator","Condition","EvaluationWaitTime","serializeAws_restJson1WaitTime","FalseActivity","TrueActivity","Name","tags","Attributes","RecommendationProviderIdType","RecommendationProviderRoleArn","RecommendationProviderUri","RecommendationTransformerUri","RecommendationsDisplayName","RecommendationsPerMessage","serializeAws_restJson1CustomDeliveryConfiguration","DeliveryUri","EndpointTypes","serializeAws_restJson1ListOf__EndpointTypesElement","MessageConfig","serializeAws_restJson1JourneyCustomMessage","NextActivity","TemplateVersion","serializeAws_restJson1DefaultMessage","serializeAws_restJson1DefaultPushNotificationMessage","serializeAws_restJson1DefaultPushNotificationTemplate","serializeAws_restJson1DirectMessageConfiguration","ADMMessage","APNSMessage","BaiduMessage","DefaultMessage","DefaultPushNotificationMessage","EmailMessage","serializeAws_restJson1EmailMessage","GCMMessage","serializeAws_restJson1GCMMessage","SMSMessage","serializeAws_restJson1SMSMessage","VoiceMessage","serializeAws_restJson1VoiceMessage","ConfigurationSet","Identity","RoleArn","FeedbackForwardingAddress","RawEmail","serializeAws_restJson1RawEmail","ReplyToAddresses","SimpleEmail","serializeAws_restJson1SimpleEmail","serializeAws_restJson1JourneyEmailMessage","DefaultSubstitutions","HtmlPart","Subject","TemplateDescription","TextPart","serializeAws_restJson1EndpointBatchItem","Address","Demographic","serializeAws_restJson1EndpointDemographic","EffectiveDate","EndpointStatus","Id","Location","serializeAws_restJson1EndpointLocation","Metrics","serializeAws_restJson1MapOf__double","OptOut","RequestId","User","serializeAws_restJson1EndpointUser","Item","serializeAws_restJson1ListOfEndpointBatchItem","AppVersion","Locale","Make","Model","ModelVersion","Platform","PlatformVersion","Timezone","City","Country","Latitude","Longitude","PostalCode","Region","serializeAws_restJson1EndpointSendConfiguration","UserAttributes","serializeAws_restJson1Event","AppPackageName","AppTitle","AppVersionCode","ClientSdkVersion","EventType","SdkName","Session","serializeAws_restJson1Session","Timestamp","serializeAws_restJson1EventCondition","MessageActivity","serializeAws_restJson1MapOfAttributeDimension","serializeAws_restJson1SetDimension","serializeAws_restJson1MapOfMetricDimension","serializeAws_restJson1EventFilter","serializeAws_restJson1EventsBatch","Endpoint","serializeAws_restJson1PublicEndpoint","Events","serializeAws_restJson1MapOfEvent","BatchItem","serializeAws_restJson1MapOfEventsBatch","serializeAws_restJson1EventStartCondition","EventFilter","S3UrlPrefix","SegmentVersion","CollapseKey","RestrictedPackageName","serializeAws_restJson1GPSCoordinates","serializeAws_restJson1GPSPointDimension","Coordinates","RangeInKilometers","Percentage","DefineSegment","ExternalId","Format","RegisterEndpoints","S3Url","SegmentName","serializeAws_restJson1JourneyLimits","DailyCap","EndpointReentryCap","serializeAws_restJson1JourneyPushMessage","serializeAws_restJson1JourneySchedule","serializeAws_restJson1JourneySMSMessage","State","filter","e","entry","serializeAws_restJson1ListOfMultiConditionalBranch","serializeAws_restJson1MultiConditionalBranch","serializeAws_restJson1ListOfRandomSplitEntry","serializeAws_restJson1RandomSplitEntry","serializeAws_restJson1ListOfSegmentDimensions","serializeAws_restJson1SegmentDimensions","serializeAws_restJson1ListOfSegmentGroup","serializeAws_restJson1SegmentGroup","serializeAws_restJson1ListOfSegmentReference","serializeAws_restJson1SegmentReference","serializeAws_restJson1SimpleCondition","serializeAws_restJson1ListOfWriteTreatmentResource","serializeAws_restJson1WriteTreatmentResource","entries","reduce","acc","key","value","serializeAws_restJson1MapOfActivity","serializeAws_restJson1MapOfAddressConfiguration","serializeAws_restJson1MapOfEndpointSendConfiguration","serializeAws_restJson1MetricDimension","serializeAws_restJson1Message","ImageSmallIconUrl","JsonBody","serializeAws_restJson1MessageConfiguration","CustomMessage","Addresses","Endpoints","MessageConfiguration","TemplateConfiguration","serializeAws_restJson1TemplateConfiguration","TraceId","ComparisonOperator","Value","Branches","DefaultActivity","IsoCountryCode","PhoneNumber","ADM","APNS","Baidu","Default","GCM","serializeAws_restJson1QuietTime","End","Start","base64Encoder","serializeAws_restJson1RecencyDimension","Duration","RecencyType","serializeAws_restJson1Schedule","Frequency","IsLocalTime","QuietTime","serializeAws_restJson1SegmentBehaviors","Recency","serializeAws_restJson1SegmentCondition","serializeAws_restJson1SegmentDemographics","Channel","DeviceType","Behavior","serializeAws_restJson1SegmentLocation","SourceSegments","SourceType","Type","serializeAws_restJson1SegmentGroupList","Groups","Include","GPSPoint","Users","StartTimestamp","StopTimestamp","DimensionType","EventCondition","SegmentCondition","SegmentDimensions","segmentDimensions","serializeAws_restJson1SimpleEmailPart","Charset","ShortCode","Keyword","OriginationNumber","serializeAws_restJson1StartCondition","EventStartCondition","SegmentStartCondition","serializeAws_restJson1Template","EmailTemplate","PushTemplate","SMSTemplate","VoiceTemplate","Blacklist","LanguageCode","VoiceId","WaitTime","WaitFor","WaitUntil","CampaignHook","CloudWatchMetricsEnabled","EventTaggingEnabled","Limits","AdditionalTreatments","CustomDeliveryConfiguration","HoldoutPercent","Hook","IsPaused","Schedule","TreatmentDescription","TreatmentName","DestinationStreamArn","Activities","CreationDate","LastModifiedDate","LocalTime","RefreshFrequency","StartActivity","StartCondition","SegmentGroups","SizePercent","deserializeAws_restJson1ListOfActivityResponse","deserializeAws_restJson1Activity","deserializeAws_restJson1CustomMessageActivity","deserializeAws_restJson1ConditionalSplitActivity","deserializeAws_restJson1EmailMessageActivity","deserializeAws_restJson1HoldoutActivity","deserializeAws_restJson1MultiConditionalSplitActivity","deserializeAws_restJson1PushMessageActivity","deserializeAws_restJson1RandomSplitActivity","deserializeAws_restJson1SMSMessageActivity","deserializeAws_restJson1WaitActivity","deserializeAws_restJson1ActivityResponse","Result","ScheduledStart","SuccessfulEndpointCount","TimezonesCompletedCount","TimezonesTotalCount","TotalEndpointCount","TreatmentId","HasCredential","IsArchived","LastModifiedBy","deserializeAws_restJson1AndroidPushNotificationTemplate","HasTokenKey","deserializeAws_restJson1APNSPushNotificationTemplate","Date","KpiResult","deserializeAws_restJson1BaseKpiResult","Arn","deserializeAws_restJson1MapOf__string","deserializeAws_restJson1CampaignHook","deserializeAws_restJson1CampaignLimits","deserializeAws_restJson1QuietTime","deserializeAws_restJson1ListOfApplicationResponse","deserializeAws_restJson1AttributeDimension","deserializeAws_restJson1ListOf__string","Credential","Rows","deserializeAws_restJson1ListOfResultRow","deserializeAws_restJson1CampaignCustomMessage","deserializeAws_restJson1CampaignEmailMessage","deserializeAws_restJson1CampaignEventFilter","deserializeAws_restJson1EventDimensions","deserializeAws_restJson1ListOfTreatmentResource","deserializeAws_restJson1CustomDeliveryConfiguration","DefaultState","deserializeAws_restJson1CampaignState","deserializeAws_restJson1MessageConfiguration","deserializeAws_restJson1Schedule","deserializeAws_restJson1TemplateConfiguration","deserializeAws_restJson1CampaignSmsMessage","deserializeAws_restJson1ListOfCampaignResponse","CampaignStatus","deserializeAws_restJson1ChannelResponse","Channels","deserializeAws_restJson1MapOfChannelResponse","deserializeAws_restJson1Condition","deserializeAws_restJson1ListOfSimpleCondition","deserializeAws_restJson1WaitTime","deserializeAws_restJson1ListOf__EndpointTypesElement","deserializeAws_restJson1JourneyCustomMessage","deserializeAws_restJson1DefaultPushNotificationTemplate","deserializeAws_restJson1JourneyEmailMessage","deserializeAws_restJson1EndpointDemographic","deserializeAws_restJson1EndpointItemResponse","StatusCode","deserializeAws_restJson1EndpointLocation","deserializeAws_restJson1EndpointMessageResult","DeliveryStatus","MessageId","StatusMessage","UpdatedToken","deserializeAws_restJson1MapOfListOf__string","CohortId","deserializeAws_restJson1MapOf__double","deserializeAws_restJson1EndpointUser","deserializeAws_restJson1ListOfEndpointResponse","deserializeAws_restJson1EventCondition","deserializeAws_restJson1MapOfAttributeDimension","deserializeAws_restJson1SetDimension","deserializeAws_restJson1MapOfMetricDimension","deserializeAws_restJson1EventFilter","deserializeAws_restJson1EventItemResponse","Results","deserializeAws_restJson1MapOfItemResponse","deserializeAws_restJson1EventStartCondition","LastUpdatedBy","deserializeAws_restJson1ExportJobResource","CompletedPieces","CompletionDate","Definition","FailedPieces","Failures","JobStatus","TotalFailures","TotalPieces","TotalProcessed","deserializeAws_restJson1ListOfExportJobResponse","deserializeAws_restJson1GPSCoordinates","deserializeAws_restJson1GPSPointDimension","deserializeAws_restJson1ImportJobResource","deserializeAws_restJson1ListOfImportJobResponse","deserializeAws_restJson1ItemResponse","EndpointItemResponse","EventsItemResponse","deserializeAws_restJson1MapOfEventItemResponse","ActivityType","LastEvaluatedTime","deserializeAws_restJson1JourneyLimits","deserializeAws_restJson1JourneyPushMessage","deserializeAws_restJson1MapOfActivity","deserializeAws_restJson1JourneySchedule","deserializeAws_restJson1StartCondition","deserializeAws_restJson1JourneySMSMessage","deserializeAws_restJson1ListOfJourneyResponse","deserializeAws_restJson1ListOfMultiConditionalBranch","deserializeAws_restJson1MultiConditionalBranch","deserializeAws_restJson1ListOfRandomSplitEntry","deserializeAws_restJson1RandomSplitEntry","deserializeAws_restJson1ListOfRecommenderConfigurationResponse","deserializeAws_restJson1ResultRow","deserializeAws_restJson1ListOfResultRowValue","deserializeAws_restJson1ResultRowValue","deserializeAws_restJson1ListOfSegmentDimensions","deserializeAws_restJson1SegmentDimensions","deserializeAws_restJson1ListOfSegmentGroup","deserializeAws_restJson1SegmentGroup","deserializeAws_restJson1ListOfSegmentReference","deserializeAws_restJson1SegmentReference","deserializeAws_restJson1ListOfSegmentResponse","deserializeAws_restJson1SimpleCondition","deserializeAws_restJson1ListOfTemplateResponse","deserializeAws_restJson1TemplateResponse","deserializeAws_restJson1ListOfTemplateVersionResponse","deserializeAws_restJson1TemplateVersionResponse","deserializeAws_restJson1TreatmentResource","deserializeAws_restJson1MapOf__integer","deserializeAws_restJson1MapOfEndpointMessageResult","deserializeAws_restJson1MapOfMapOfEndpointMessageResult","deserializeAws_restJson1MapOfMessageResult","deserializeAws_restJson1MessageResult","deserializeAws_restJson1MetricDimension","deserializeAws_restJson1Message","EndpointResult","Carrier","CleansedPhoneNumberE164","CleansedPhoneNumberNational","CountryCodeIso2","CountryCodeNumeric","County","OriginalCountryCodeIso2","OriginalPhoneNumber","PhoneType","PhoneTypeCode","ZipCode","deserializeAws_restJson1RecencyDimension","GroupedBys","Key","deserializeAws_restJson1SegmentBehaviors","deserializeAws_restJson1SegmentCondition","deserializeAws_restJson1SegmentDemographics","deserializeAws_restJson1SegmentLocation","deserializeAws_restJson1SegmentGroupList","deserializeAws_restJson1SegmentImportResource","ChannelCounts","Size","ImportDefinition","SegmentType","PromotionalMessagesPerSecond","TransactionalMessagesPerSecond","deserializeAws_restJson1Template","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","getOwnPropertyNames","includes","size","encoded","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","headerKey"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-pinpoint/protocols/Aws_restJson1.ts"],"sourcesContent":["import { CreateAppCommandInput, CreateAppCommandOutput } from \"../commands/CreateAppCommand\";\nimport { CreateCampaignCommandInput, CreateCampaignCommandOutput } from \"../commands/CreateCampaignCommand\";\nimport {\n  CreateEmailTemplateCommandInput,\n  CreateEmailTemplateCommandOutput,\n} from \"../commands/CreateEmailTemplateCommand\";\nimport { CreateExportJobCommandInput, CreateExportJobCommandOutput } from \"../commands/CreateExportJobCommand\";\nimport { CreateImportJobCommandInput, CreateImportJobCommandOutput } from \"../commands/CreateImportJobCommand\";\nimport { CreateJourneyCommandInput, CreateJourneyCommandOutput } from \"../commands/CreateJourneyCommand\";\nimport { CreatePushTemplateCommandInput, CreatePushTemplateCommandOutput } from \"../commands/CreatePushTemplateCommand\";\nimport {\n  CreateRecommenderConfigurationCommandInput,\n  CreateRecommenderConfigurationCommandOutput,\n} from \"../commands/CreateRecommenderConfigurationCommand\";\nimport { CreateSegmentCommandInput, CreateSegmentCommandOutput } from \"../commands/CreateSegmentCommand\";\nimport { CreateSmsTemplateCommandInput, CreateSmsTemplateCommandOutput } from \"../commands/CreateSmsTemplateCommand\";\nimport {\n  CreateVoiceTemplateCommandInput,\n  CreateVoiceTemplateCommandOutput,\n} from \"../commands/CreateVoiceTemplateCommand\";\nimport { DeleteAdmChannelCommandInput, DeleteAdmChannelCommandOutput } from \"../commands/DeleteAdmChannelCommand\";\nimport { DeleteApnsChannelCommandInput, DeleteApnsChannelCommandOutput } from \"../commands/DeleteApnsChannelCommand\";\nimport {\n  DeleteApnsSandboxChannelCommandInput,\n  DeleteApnsSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsSandboxChannelCommand\";\nimport {\n  DeleteApnsVoipChannelCommandInput,\n  DeleteApnsVoipChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipChannelCommand\";\nimport {\n  DeleteApnsVoipSandboxChannelCommandInput,\n  DeleteApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipSandboxChannelCommand\";\nimport { DeleteAppCommandInput, DeleteAppCommandOutput } from \"../commands/DeleteAppCommand\";\nimport { DeleteBaiduChannelCommandInput, DeleteBaiduChannelCommandOutput } from \"../commands/DeleteBaiduChannelCommand\";\nimport { DeleteCampaignCommandInput, DeleteCampaignCommandOutput } from \"../commands/DeleteCampaignCommand\";\nimport { DeleteEmailChannelCommandInput, DeleteEmailChannelCommandOutput } from \"../commands/DeleteEmailChannelCommand\";\nimport {\n  DeleteEmailTemplateCommandInput,\n  DeleteEmailTemplateCommandOutput,\n} from \"../commands/DeleteEmailTemplateCommand\";\nimport { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from \"../commands/DeleteEndpointCommand\";\nimport { DeleteEventStreamCommandInput, DeleteEventStreamCommandOutput } from \"../commands/DeleteEventStreamCommand\";\nimport { DeleteGcmChannelCommandInput, DeleteGcmChannelCommandOutput } from \"../commands/DeleteGcmChannelCommand\";\nimport { DeleteJourneyCommandInput, DeleteJourneyCommandOutput } from \"../commands/DeleteJourneyCommand\";\nimport { DeletePushTemplateCommandInput, DeletePushTemplateCommandOutput } from \"../commands/DeletePushTemplateCommand\";\nimport {\n  DeleteRecommenderConfigurationCommandInput,\n  DeleteRecommenderConfigurationCommandOutput,\n} from \"../commands/DeleteRecommenderConfigurationCommand\";\nimport { DeleteSegmentCommandInput, DeleteSegmentCommandOutput } from \"../commands/DeleteSegmentCommand\";\nimport { DeleteSmsChannelCommandInput, DeleteSmsChannelCommandOutput } from \"../commands/DeleteSmsChannelCommand\";\nimport { DeleteSmsTemplateCommandInput, DeleteSmsTemplateCommandOutput } from \"../commands/DeleteSmsTemplateCommand\";\nimport {\n  DeleteUserEndpointsCommandInput,\n  DeleteUserEndpointsCommandOutput,\n} from \"../commands/DeleteUserEndpointsCommand\";\nimport { DeleteVoiceChannelCommandInput, DeleteVoiceChannelCommandOutput } from \"../commands/DeleteVoiceChannelCommand\";\nimport {\n  DeleteVoiceTemplateCommandInput,\n  DeleteVoiceTemplateCommandOutput,\n} from \"../commands/DeleteVoiceTemplateCommand\";\nimport { GetAdmChannelCommandInput, GetAdmChannelCommandOutput } from \"../commands/GetAdmChannelCommand\";\nimport { GetApnsChannelCommandInput, GetApnsChannelCommandOutput } from \"../commands/GetApnsChannelCommand\";\nimport {\n  GetApnsSandboxChannelCommandInput,\n  GetApnsSandboxChannelCommandOutput,\n} from \"../commands/GetApnsSandboxChannelCommand\";\nimport { GetApnsVoipChannelCommandInput, GetApnsVoipChannelCommandOutput } from \"../commands/GetApnsVoipChannelCommand\";\nimport {\n  GetApnsVoipSandboxChannelCommandInput,\n  GetApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/GetApnsVoipSandboxChannelCommand\";\nimport { GetAppCommandInput, GetAppCommandOutput } from \"../commands/GetAppCommand\";\nimport {\n  GetApplicationDateRangeKpiCommandInput,\n  GetApplicationDateRangeKpiCommandOutput,\n} from \"../commands/GetApplicationDateRangeKpiCommand\";\nimport {\n  GetApplicationSettingsCommandInput,\n  GetApplicationSettingsCommandOutput,\n} from \"../commands/GetApplicationSettingsCommand\";\nimport { GetAppsCommandInput, GetAppsCommandOutput } from \"../commands/GetAppsCommand\";\nimport { GetBaiduChannelCommandInput, GetBaiduChannelCommandOutput } from \"../commands/GetBaiduChannelCommand\";\nimport {\n  GetCampaignActivitiesCommandInput,\n  GetCampaignActivitiesCommandOutput,\n} from \"../commands/GetCampaignActivitiesCommand\";\nimport { GetCampaignCommandInput, GetCampaignCommandOutput } from \"../commands/GetCampaignCommand\";\nimport {\n  GetCampaignDateRangeKpiCommandInput,\n  GetCampaignDateRangeKpiCommandOutput,\n} from \"../commands/GetCampaignDateRangeKpiCommand\";\nimport { GetCampaignVersionCommandInput, GetCampaignVersionCommandOutput } from \"../commands/GetCampaignVersionCommand\";\nimport {\n  GetCampaignVersionsCommandInput,\n  GetCampaignVersionsCommandOutput,\n} from \"../commands/GetCampaignVersionsCommand\";\nimport { GetCampaignsCommandInput, GetCampaignsCommandOutput } from \"../commands/GetCampaignsCommand\";\nimport { GetChannelsCommandInput, GetChannelsCommandOutput } from \"../commands/GetChannelsCommand\";\nimport { GetEmailChannelCommandInput, GetEmailChannelCommandOutput } from \"../commands/GetEmailChannelCommand\";\nimport { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from \"../commands/GetEmailTemplateCommand\";\nimport { GetEndpointCommandInput, GetEndpointCommandOutput } from \"../commands/GetEndpointCommand\";\nimport { GetEventStreamCommandInput, GetEventStreamCommandOutput } from \"../commands/GetEventStreamCommand\";\nimport { GetExportJobCommandInput, GetExportJobCommandOutput } from \"../commands/GetExportJobCommand\";\nimport { GetExportJobsCommandInput, GetExportJobsCommandOutput } from \"../commands/GetExportJobsCommand\";\nimport { GetGcmChannelCommandInput, GetGcmChannelCommandOutput } from \"../commands/GetGcmChannelCommand\";\nimport { GetImportJobCommandInput, GetImportJobCommandOutput } from \"../commands/GetImportJobCommand\";\nimport { GetImportJobsCommandInput, GetImportJobsCommandOutput } from \"../commands/GetImportJobsCommand\";\nimport { GetJourneyCommandInput, GetJourneyCommandOutput } from \"../commands/GetJourneyCommand\";\nimport {\n  GetJourneyDateRangeKpiCommandInput,\n  GetJourneyDateRangeKpiCommandOutput,\n} from \"../commands/GetJourneyDateRangeKpiCommand\";\nimport {\n  GetJourneyExecutionActivityMetricsCommandInput,\n  GetJourneyExecutionActivityMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionActivityMetricsCommand\";\nimport {\n  GetJourneyExecutionMetricsCommandInput,\n  GetJourneyExecutionMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionMetricsCommand\";\nimport { GetPushTemplateCommandInput, GetPushTemplateCommandOutput } from \"../commands/GetPushTemplateCommand\";\nimport {\n  GetRecommenderConfigurationCommandInput,\n  GetRecommenderConfigurationCommandOutput,\n} from \"../commands/GetRecommenderConfigurationCommand\";\nimport {\n  GetRecommenderConfigurationsCommandInput,\n  GetRecommenderConfigurationsCommandOutput,\n} from \"../commands/GetRecommenderConfigurationsCommand\";\nimport { GetSegmentCommandInput, GetSegmentCommandOutput } from \"../commands/GetSegmentCommand\";\nimport {\n  GetSegmentExportJobsCommandInput,\n  GetSegmentExportJobsCommandOutput,\n} from \"../commands/GetSegmentExportJobsCommand\";\nimport {\n  GetSegmentImportJobsCommandInput,\n  GetSegmentImportJobsCommandOutput,\n} from \"../commands/GetSegmentImportJobsCommand\";\nimport { GetSegmentVersionCommandInput, GetSegmentVersionCommandOutput } from \"../commands/GetSegmentVersionCommand\";\nimport { GetSegmentVersionsCommandInput, GetSegmentVersionsCommandOutput } from \"../commands/GetSegmentVersionsCommand\";\nimport { GetSegmentsCommandInput, GetSegmentsCommandOutput } from \"../commands/GetSegmentsCommand\";\nimport { GetSmsChannelCommandInput, GetSmsChannelCommandOutput } from \"../commands/GetSmsChannelCommand\";\nimport { GetSmsTemplateCommandInput, GetSmsTemplateCommandOutput } from \"../commands/GetSmsTemplateCommand\";\nimport { GetUserEndpointsCommandInput, GetUserEndpointsCommandOutput } from \"../commands/GetUserEndpointsCommand\";\nimport { GetVoiceChannelCommandInput, GetVoiceChannelCommandOutput } from \"../commands/GetVoiceChannelCommand\";\nimport { GetVoiceTemplateCommandInput, GetVoiceTemplateCommandOutput } from \"../commands/GetVoiceTemplateCommand\";\nimport { ListJourneysCommandInput, ListJourneysCommandOutput } from \"../commands/ListJourneysCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"../commands/ListTagsForResourceCommand\";\nimport {\n  ListTemplateVersionsCommandInput,\n  ListTemplateVersionsCommandOutput,\n} from \"../commands/ListTemplateVersionsCommand\";\nimport { ListTemplatesCommandInput, ListTemplatesCommandOutput } from \"../commands/ListTemplatesCommand\";\nimport {\n  PhoneNumberValidateCommandInput,\n  PhoneNumberValidateCommandOutput,\n} from \"../commands/PhoneNumberValidateCommand\";\nimport { PutEventStreamCommandInput, PutEventStreamCommandOutput } from \"../commands/PutEventStreamCommand\";\nimport { PutEventsCommandInput, PutEventsCommandOutput } from \"../commands/PutEventsCommand\";\nimport { RemoveAttributesCommandInput, RemoveAttributesCommandOutput } from \"../commands/RemoveAttributesCommand\";\nimport { SendMessagesCommandInput, SendMessagesCommandOutput } from \"../commands/SendMessagesCommand\";\nimport { SendUsersMessagesCommandInput, SendUsersMessagesCommandOutput } from \"../commands/SendUsersMessagesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"../commands/TagResourceCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"../commands/UntagResourceCommand\";\nimport { UpdateAdmChannelCommandInput, UpdateAdmChannelCommandOutput } from \"../commands/UpdateAdmChannelCommand\";\nimport { UpdateApnsChannelCommandInput, UpdateApnsChannelCommandOutput } from \"../commands/UpdateApnsChannelCommand\";\nimport {\n  UpdateApnsSandboxChannelCommandInput,\n  UpdateApnsSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsSandboxChannelCommand\";\nimport {\n  UpdateApnsVoipChannelCommandInput,\n  UpdateApnsVoipChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipChannelCommand\";\nimport {\n  UpdateApnsVoipSandboxChannelCommandInput,\n  UpdateApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipSandboxChannelCommand\";\nimport {\n  UpdateApplicationSettingsCommandInput,\n  UpdateApplicationSettingsCommandOutput,\n} from \"../commands/UpdateApplicationSettingsCommand\";\nimport { UpdateBaiduChannelCommandInput, UpdateBaiduChannelCommandOutput } from \"../commands/UpdateBaiduChannelCommand\";\nimport { UpdateCampaignCommandInput, UpdateCampaignCommandOutput } from \"../commands/UpdateCampaignCommand\";\nimport { UpdateEmailChannelCommandInput, UpdateEmailChannelCommandOutput } from \"../commands/UpdateEmailChannelCommand\";\nimport {\n  UpdateEmailTemplateCommandInput,\n  UpdateEmailTemplateCommandOutput,\n} from \"../commands/UpdateEmailTemplateCommand\";\nimport { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from \"../commands/UpdateEndpointCommand\";\nimport {\n  UpdateEndpointsBatchCommandInput,\n  UpdateEndpointsBatchCommandOutput,\n} from \"../commands/UpdateEndpointsBatchCommand\";\nimport { UpdateGcmChannelCommandInput, UpdateGcmChannelCommandOutput } from \"../commands/UpdateGcmChannelCommand\";\nimport { UpdateJourneyCommandInput, UpdateJourneyCommandOutput } from \"../commands/UpdateJourneyCommand\";\nimport { UpdateJourneyStateCommandInput, UpdateJourneyStateCommandOutput } from \"../commands/UpdateJourneyStateCommand\";\nimport { UpdatePushTemplateCommandInput, UpdatePushTemplateCommandOutput } from \"../commands/UpdatePushTemplateCommand\";\nimport {\n  UpdateRecommenderConfigurationCommandInput,\n  UpdateRecommenderConfigurationCommandOutput,\n} from \"../commands/UpdateRecommenderConfigurationCommand\";\nimport { UpdateSegmentCommandInput, UpdateSegmentCommandOutput } from \"../commands/UpdateSegmentCommand\";\nimport { UpdateSmsChannelCommandInput, UpdateSmsChannelCommandOutput } from \"../commands/UpdateSmsChannelCommand\";\nimport { UpdateSmsTemplateCommandInput, UpdateSmsTemplateCommandOutput } from \"../commands/UpdateSmsTemplateCommand\";\nimport {\n  UpdateTemplateActiveVersionCommandInput,\n  UpdateTemplateActiveVersionCommandOutput,\n} from \"../commands/UpdateTemplateActiveVersionCommand\";\nimport { UpdateVoiceChannelCommandInput, UpdateVoiceChannelCommandOutput } from \"../commands/UpdateVoiceChannelCommand\";\nimport {\n  UpdateVoiceTemplateCommandInput,\n  UpdateVoiceTemplateCommandOutput,\n} from \"../commands/UpdateVoiceTemplateCommand\";\nimport {\n  ADMChannelRequest,\n  ADMChannelResponse,\n  ADMMessage,\n  APNSChannelRequest,\n  APNSChannelResponse,\n  APNSMessage,\n  APNSPushNotificationTemplate,\n  APNSSandboxChannelRequest,\n  APNSSandboxChannelResponse,\n  APNSVoipChannelRequest,\n  APNSVoipChannelResponse,\n  APNSVoipSandboxChannelRequest,\n  APNSVoipSandboxChannelResponse,\n  ActivitiesResponse,\n  Activity,\n  ActivityResponse,\n  AddressConfiguration,\n  AndroidPushNotificationTemplate,\n  ApplicationDateRangeKpiResponse,\n  ApplicationResponse,\n  ApplicationSettingsResource,\n  ApplicationsResponse,\n  AttributeDimension,\n  AttributesResource,\n  BadRequestException,\n  BaiduChannelRequest,\n  BaiduChannelResponse,\n  BaiduMessage,\n  BaseKpiResult,\n  CampaignCustomMessage,\n  CampaignDateRangeKpiResponse,\n  CampaignEmailMessage,\n  CampaignEventFilter,\n  CampaignHook,\n  CampaignLimits,\n  CampaignResponse,\n  CampaignSmsMessage,\n  CampaignState,\n  CampaignsResponse,\n  ChannelResponse,\n  ChannelsResponse,\n  Condition,\n  ConditionalSplitActivity,\n  ConflictException,\n  CreateApplicationRequest,\n  CreateRecommenderConfigurationShape,\n  CreateTemplateMessageBody,\n  CustomDeliveryConfiguration,\n  CustomMessageActivity,\n  DefaultMessage,\n  DefaultPushNotificationMessage,\n  DefaultPushNotificationTemplate,\n  DirectMessageConfiguration,\n  EmailChannelRequest,\n  EmailChannelResponse,\n  EmailMessage,\n  EmailMessageActivity,\n  EmailTemplateRequest,\n  EmailTemplateResponse,\n  EndpointBatchItem,\n  EndpointBatchRequest,\n  EndpointDemographic,\n  EndpointItemResponse,\n  EndpointLocation,\n  EndpointMessageResult,\n  EndpointRequest,\n  EndpointResponse,\n  EndpointSendConfiguration,\n  EndpointUser,\n  EndpointsResponse,\n  Event,\n  EventCondition,\n  EventDimensions,\n  EventFilter,\n  EventItemResponse,\n  EventStartCondition,\n  EventStream,\n  EventsBatch,\n  EventsRequest,\n  EventsResponse,\n  ExportJobRequest,\n  ExportJobResource,\n  ExportJobResponse,\n  ExportJobsResponse,\n  ForbiddenException,\n  GCMChannelRequest,\n  GCMChannelResponse,\n  GCMMessage,\n  GPSCoordinates,\n  GPSPointDimension,\n  HoldoutActivity,\n  ImportJobRequest,\n  ImportJobResource,\n  ImportJobResponse,\n  ImportJobsResponse,\n  InternalServerErrorException,\n  ItemResponse,\n  JourneyCustomMessage,\n  JourneyEmailMessage,\n  JourneyLimits,\n  JourneyPushMessage,\n  JourneyResponse,\n  JourneySMSMessage,\n  JourneySchedule,\n  Message,\n  MessageBody,\n  MessageConfiguration,\n  MethodNotAllowedException,\n  MetricDimension,\n  MultiConditionalBranch,\n  MultiConditionalSplitActivity,\n  NotFoundException,\n  PayloadTooLargeException,\n  PublicEndpoint,\n  PushMessageActivity,\n  PushNotificationTemplateRequest,\n  QuietTime,\n  RandomSplitActivity,\n  RandomSplitEntry,\n  RawEmail,\n  RecencyDimension,\n  RecommenderConfigurationResponse,\n  ResultRow,\n  ResultRowValue,\n  SMSChannelResponse,\n  SMSMessage,\n  SMSMessageActivity,\n  SMSTemplateRequest,\n  Schedule,\n  SegmentBehaviors,\n  SegmentCondition,\n  SegmentDemographics,\n  SegmentDimensions,\n  SegmentGroup,\n  SegmentGroupList,\n  SegmentImportResource,\n  SegmentLocation,\n  SegmentReference,\n  SegmentResponse,\n  Session,\n  SetDimension,\n  SimpleCondition,\n  SimpleEmail,\n  SimpleEmailPart,\n  StartCondition,\n  Template,\n  TemplateConfiguration,\n  TooManyRequestsException,\n  TreatmentResource,\n  VoiceChannelResponse,\n  VoiceMessage,\n  VoiceTemplateRequest,\n  WaitActivity,\n  WaitTime,\n  WriteCampaignRequest,\n  WriteJourneyRequest,\n  WriteSegmentRequest,\n  WriteTreatmentResource,\n  __EndpointTypesElement,\n} from \"../models/models_0\";\nimport {\n  JourneyDateRangeKpiResponse,\n  JourneyExecutionActivityMetricsResponse,\n  JourneyExecutionMetricsResponse,\n  JourneyStateRequest,\n  JourneysResponse,\n  ListRecommenderConfigurationsResponse,\n  MessageRequest,\n  MessageResponse,\n  MessageResult,\n  NumberValidateRequest,\n  NumberValidateResponse,\n  PushNotificationTemplateResponse,\n  SMSChannelRequest,\n  SMSTemplateResponse,\n  SegmentsResponse,\n  SendUsersMessageRequest,\n  SendUsersMessageResponse,\n  TagsModel,\n  TemplateActiveVersionRequest,\n  TemplateResponse,\n  TemplateVersionResponse,\n  TemplateVersionsResponse,\n  TemplatesResponse,\n  UpdateAttributesRequest,\n  UpdateRecommenderConfigurationShape,\n  VoiceChannelRequest,\n  VoiceTemplateResponse,\n  WriteApplicationSettingsRequest,\n  WriteEventStream,\n} from \"../models/models_1\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  SmithyException as __SmithyException,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1CreateAppCommand = async (\n  input: CreateAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps\";\n  let body: any;\n  if (input.CreateApplicationRequest !== undefined) {\n    body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateCampaignCommand = async (\n  input: CreateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateEmailTemplateCommand = async (\n  input: CreateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateExportJobCommand = async (\n  input: CreateExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ExportJobRequest !== undefined) {\n    body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateImportJobCommand = async (\n  input: CreateImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ImportJobRequest !== undefined) {\n    body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateJourneyCommand = async (\n  input: CreateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreatePushTemplateCommand = async (\n  input: CreatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  input: CreateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders\";\n  let body: any;\n  if (input.CreateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSegmentCommand = async (\n  input: CreateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSmsTemplateCommand = async (\n  input: CreateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateVoiceTemplateCommand = async (\n  input: CreateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAdmChannelCommand = async (\n  input: DeleteAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsChannelCommand = async (\n  input: DeleteApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  input: DeleteApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  input: DeleteApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  input: DeleteApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAppCommand = async (\n  input: DeleteAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteBaiduChannelCommand = async (\n  input: DeleteBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteCampaignCommand = async (\n  input: DeleteCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailChannelCommand = async (\n  input: DeleteEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailTemplateCommand = async (\n  input: DeleteEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEndpointCommand = async (\n  input: DeleteEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEventStreamCommand = async (\n  input: DeleteEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteGcmChannelCommand = async (\n  input: DeleteGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteJourneyCommand = async (\n  input: DeleteJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeletePushTemplateCommand = async (\n  input: DeletePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  input: DeleteRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSegmentCommand = async (\n  input: DeleteSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsChannelCommand = async (\n  input: DeleteSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsTemplateCommand = async (\n  input: DeleteSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteUserEndpointsCommand = async (\n  input: DeleteUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceChannelCommand = async (\n  input: DeleteVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  input: DeleteVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAdmChannelCommand = async (\n  input: GetAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsChannelCommand = async (\n  input: GetApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  input: GetApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipChannelCommand = async (\n  input: GetApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  input: GetApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppCommand = async (\n  input: GetAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  input: GetApplicationDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationSettingsCommand = async (\n  input: GetApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppsCommand = async (\n  input: GetAppsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetBaiduChannelCommand = async (\n  input: GetBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignCommand = async (\n  input: GetCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignActivitiesCommand = async (\n  input: GetCampaignActivitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  input: GetCampaignDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignsCommand = async (\n  input: GetCampaignsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionCommand = async (\n  input: GetCampaignVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionsCommand = async (\n  input: GetCampaignVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetChannelsCommand = async (\n  input: GetChannelsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailChannelCommand = async (\n  input: GetEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailTemplateCommand = async (\n  input: GetEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEndpointCommand = async (\n  input: GetEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEventStreamCommand = async (\n  input: GetEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobCommand = async (\n  input: GetExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobsCommand = async (\n  input: GetExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetGcmChannelCommand = async (\n  input: GetGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobCommand = async (\n  input: GetImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobsCommand = async (\n  input: GetImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyCommand = async (\n  input: GetJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  input: GetJourneyDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  input: GetJourneyExecutionActivityMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyActivityId !== undefined) {\n    const labelValue: string = input.JourneyActivityId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  input: GetJourneyExecutionMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetPushTemplateCommand = async (\n  input: GetPushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  input: GetRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  input: GetRecommenderConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentCommand = async (\n  input: GetSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentExportJobsCommand = async (\n  input: GetSegmentExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentImportJobsCommand = async (\n  input: GetSegmentImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentsCommand = async (\n  input: GetSegmentsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionCommand = async (\n  input: GetSegmentVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionsCommand = async (\n  input: GetSegmentVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsChannelCommand = async (\n  input: GetSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsTemplateCommand = async (\n  input: GetSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetUserEndpointsCommand = async (\n  input: GetUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceChannelCommand = async (\n  input: GetVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceTemplateCommand = async (\n  input: GetVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListJourneysCommand = async (\n  input: ListJourneysCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTagsForResourceCommand = async (\n  input: ListTagsForResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplatesCommand = async (\n  input: ListTemplatesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates\";\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.TemplateType !== undefined && { \"template-type\": input.TemplateType }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplateVersionsCommand = async (\n  input: ListTemplateVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PhoneNumberValidateCommand = async (\n  input: PhoneNumberValidateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/phone/number/validate\";\n  let body: any;\n  if (input.NumberValidateRequest !== undefined) {\n    body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventsCommand = async (\n  input: PutEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EventsRequest !== undefined) {\n    body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventStreamCommand = async (\n  input: PutEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteEventStream !== undefined) {\n    body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1RemoveAttributesCommand = async (\n  input: RemoveAttributesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.AttributeType !== undefined) {\n    const labelValue: string = input.AttributeType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n  }\n  let body: any;\n  if (input.UpdateAttributesRequest !== undefined) {\n    body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendMessagesCommand = async (\n  input: SendMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.MessageRequest !== undefined) {\n    body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendUsersMessagesCommand = async (\n  input: SendUsersMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SendUsersMessageRequest !== undefined) {\n    body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1TagResourceCommand = async (\n  input: TagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  if (input.TagsModel !== undefined) {\n    body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UntagResourceCommand = async (\n  input: UntagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  const query: any = {\n    ...(input.TagKeys !== undefined && { tagKeys: (input.TagKeys || []).map((_entry) => _entry) }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateAdmChannelCommand = async (\n  input: UpdateAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ADMChannelRequest !== undefined) {\n    body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsChannelCommand = async (\n  input: UpdateApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  input: UpdateApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  input: UpdateApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  input: UpdateApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  input: UpdateApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteApplicationSettingsRequest !== undefined) {\n    body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateBaiduChannelCommand = async (\n  input: UpdateBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.BaiduChannelRequest !== undefined) {\n    body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateCampaignCommand = async (\n  input: UpdateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailChannelCommand = async (\n  input: UpdateEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EmailChannelRequest !== undefined) {\n    body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailTemplateCommand = async (\n  input: UpdateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointCommand = async (\n  input: UpdateEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  if (input.EndpointRequest !== undefined) {\n    body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  input: UpdateEndpointsBatchCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EndpointBatchRequest !== undefined) {\n    body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateGcmChannelCommand = async (\n  input: UpdateGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.GCMChannelRequest !== undefined) {\n    body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyCommand = async (\n  input: UpdateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyStateCommand = async (\n  input: UpdateJourneyStateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.JourneyStateRequest !== undefined) {\n    body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdatePushTemplateCommand = async (\n  input: UpdatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  input: UpdateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  if (input.UpdateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSegmentCommand = async (\n  input: UpdateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsChannelCommand = async (\n  input: UpdateSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SMSChannelRequest !== undefined) {\n    body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsTemplateCommand = async (\n  input: UpdateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  input: UpdateTemplateActiveVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  let body: any;\n  if (input.TemplateActiveVersionRequest !== undefined) {\n    body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceChannelCommand = async (\n  input: UpdateVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.VoiceChannelRequest !== undefined) {\n    body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  input: UpdateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1CreateAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateAppCommandError(output, context);\n  }\n  const contents: CreateAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateCampaignCommandError(output, context);\n  }\n  const contents: CreateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateEmailTemplateCommandError(output, context);\n  }\n  const contents: CreateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateExportJobCommandError(output, context);\n  }\n  const contents: CreateExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateImportJobCommandError(output, context);\n  }\n  const contents: CreateImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateJourneyCommandError(output, context);\n  }\n  const contents: CreateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreatePushTemplateCommandError(output, context);\n  }\n  const contents: CreatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: CreateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSegmentCommandError(output, context);\n  }\n  const contents: CreateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSmsTemplateCommandError(output, context);\n  }\n  const contents: CreateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context);\n  }\n  const contents: CreateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAdmChannelCommandError(output, context);\n  }\n  const contents: DeleteAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAppCommandError(output, context);\n  }\n  const contents: DeleteAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context);\n  }\n  const contents: DeleteBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteCampaignCommandError(output, context);\n  }\n  const contents: DeleteCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailChannelCommandError(output, context);\n  }\n  const contents: DeleteEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context);\n  }\n  const contents: DeleteEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEndpointCommandError(output, context);\n  }\n  const contents: DeleteEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEventStreamCommandError(output, context);\n  }\n  const contents: DeleteEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteGcmChannelCommandError(output, context);\n  }\n  const contents: DeleteGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteJourneyCommandError(output, context);\n  }\n  const contents: DeleteJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeletePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeletePushTemplateCommandError(output, context);\n  }\n  const contents: DeletePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeletePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: DeleteRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSegmentCommandError(output, context);\n  }\n  const contents: DeleteSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsChannelCommandError(output, context);\n  }\n  const contents: DeleteSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context);\n  }\n  const contents: DeleteSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context);\n  }\n  const contents: DeleteUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context);\n  }\n  const contents: DeleteVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context);\n  }\n  const contents: DeleteVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAdmChannelCommandError(output, context);\n  }\n  const contents: GetAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsChannelCommandError(output, context);\n  }\n  const contents: GetApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppCommandError(output, context);\n  }\n  const contents: GetAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetApplicationDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationSettingsCommandError(output, context);\n  }\n  const contents: GetApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppsCommandError(output, context);\n  }\n  const contents: GetAppsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetBaiduChannelCommandError(output, context);\n  }\n  const contents: GetBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignCommandError(output, context);\n  }\n  const contents: GetCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignActivitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context);\n  }\n  const contents: GetCampaignActivitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ActivitiesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignActivitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetCampaignDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignsCommandError(output, context);\n  }\n  const contents: GetCampaignsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionCommandError(output, context);\n  }\n  const contents: GetCampaignVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionsCommandError(output, context);\n  }\n  const contents: GetCampaignVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetChannelsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetChannelsCommandError(output, context);\n  }\n  const contents: GetChannelsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ChannelsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetChannelsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailChannelCommandError(output, context);\n  }\n  const contents: GetEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailTemplateCommandError(output, context);\n  }\n  const contents: GetEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEndpointCommandError(output, context);\n  }\n  const contents: GetEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEventStreamCommandError(output, context);\n  }\n  const contents: GetEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobCommandError(output, context);\n  }\n  const contents: GetExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobsCommandError(output, context);\n  }\n  const contents: GetExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetGcmChannelCommandError(output, context);\n  }\n  const contents: GetGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobCommandError(output, context);\n  }\n  const contents: GetImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobsCommandError(output, context);\n  }\n  const contents: GetImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyCommandError(output, context);\n  }\n  const contents: GetJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetJourneyDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionActivityMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionActivityMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetPushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetPushTemplateCommandError(output, context);\n  }\n  const contents: GetPushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    PushNotificationTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetPushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ListRecommenderConfigurationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentCommandError(output, context);\n  }\n  const contents: GetSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentsCommandError(output, context);\n  }\n  const contents: GetSegmentsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionCommandError(output, context);\n  }\n  const contents: GetSegmentVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionsCommandError(output, context);\n  }\n  const contents: GetSegmentVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsChannelCommandError(output, context);\n  }\n  const contents: GetSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsTemplateCommandError(output, context);\n  }\n  const contents: GetSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetUserEndpointsCommandError(output, context);\n  }\n  const contents: GetUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceChannelCommandError(output, context);\n  }\n  const contents: GetVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceTemplateCommandError(output, context);\n  }\n  const contents: GetVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListJourneysCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListJourneysCommandError(output, context);\n  }\n  const contents: ListJourneysCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneysResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListJourneysCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTagsForResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTagsForResourceCommandError(output, context);\n  }\n  const contents: ListTagsForResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TagsModel: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTagsForResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplatesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplatesCommandError(output, context);\n  }\n  const contents: ListTemplatesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplatesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplatesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplateVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplateVersionsCommandError(output, context);\n  }\n  const contents: ListTemplateVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplateVersionsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplateVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PhoneNumberValidateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PhoneNumberValidateCommandError(output, context);\n  }\n  const contents: PhoneNumberValidateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    NumberValidateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PhoneNumberValidateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventsCommandError(output, context);\n  }\n  const contents: PutEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventStreamCommandError(output, context);\n  }\n  const contents: PutEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1RemoveAttributesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RemoveAttributesCommandError(output, context);\n  }\n  const contents: RemoveAttributesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AttributesResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1RemoveAttributesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendMessagesCommandError(output, context);\n  }\n  const contents: SendMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendUsersMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendUsersMessagesCommandError(output, context);\n  }\n  const contents: SendUsersMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SendUsersMessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendUsersMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1TagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1TagResourceCommandError(output, context);\n  }\n  const contents: TagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1TagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UntagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UntagResourceCommandError(output, context);\n  }\n  const contents: UntagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UntagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateAdmChannelCommandError(output, context);\n  }\n  const contents: UpdateAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context);\n  }\n  const contents: UpdateApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context);\n  }\n  const contents: UpdateBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateCampaignCommandError(output, context);\n  }\n  const contents: UpdateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailChannelCommandError(output, context);\n  }\n  const contents: UpdateEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context);\n  }\n  const contents: UpdateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointCommandError(output, context);\n  }\n  const contents: UpdateEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context);\n  }\n  const contents: UpdateEndpointsBatchCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointsBatchCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateGcmChannelCommandError(output, context);\n  }\n  const contents: UpdateGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyCommandError(output, context);\n  }\n  const contents: UpdateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.pinpoint#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyStateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyStateCommandError(output, context);\n  }\n  const contents: UpdateJourneyStateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyStateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdatePushTemplateCommandError(output, context);\n  }\n  const contents: UpdatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: UpdateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSegmentCommandError(output, context);\n  }\n  const contents: UpdateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsChannelCommandError(output, context);\n  }\n  const contents: UpdateSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context);\n  }\n  const contents: UpdateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context);\n  }\n  const contents: UpdateTemplateActiveVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context);\n  }\n  const contents: UpdateVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context);\n  }\n  const contents: UpdateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restJson1BadRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadRequestException> => {\n  const contents: BadRequestException = {\n    name: \"BadRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ForbiddenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ForbiddenException> => {\n  const contents: ForbiddenException = {\n    name: \"ForbiddenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1InternalServerErrorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerErrorException> => {\n  const contents: InternalServerErrorException = {\n    name: \"InternalServerErrorException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1MethodNotAllowedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<MethodNotAllowedException> => {\n  const contents: MethodNotAllowedException = {\n    name: \"MethodNotAllowedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1NotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotFoundException> => {\n  const contents: NotFoundException = {\n    name: \"NotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1PayloadTooLargeExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<PayloadTooLargeException> => {\n  const contents: PayloadTooLargeException = {\n    name: \"PayloadTooLargeException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1Activity = (input: Activity, context: __SerdeContext): any => {\n  return {\n    ...(input.CUSTOM !== undefined &&\n      input.CUSTOM !== null && { CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context) }),\n    ...(input.ConditionalSplit !== undefined &&\n      input.ConditionalSplit !== null && {\n        ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EMAIL !== undefined &&\n      input.EMAIL !== null && { EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context) }),\n    ...(input.Holdout !== undefined &&\n      input.Holdout !== null && { Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context) }),\n    ...(input.MultiCondition !== undefined &&\n      input.MultiCondition !== null && {\n        MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context),\n      }),\n    ...(input.PUSH !== undefined &&\n      input.PUSH !== null && { PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context) }),\n    ...(input.RandomSplit !== undefined &&\n      input.RandomSplit !== null && {\n        RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context),\n      }),\n    ...(input.SMS !== undefined &&\n      input.SMS !== null && { SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context) }),\n    ...(input.Wait !== undefined &&\n      input.Wait !== null && { Wait: serializeAws_restJson1WaitActivity(input.Wait, context) }),\n  };\n};\n\nconst serializeAws_restJson1AddressConfiguration = (input: AddressConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1ADMChannelRequest = (input: ADMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId }),\n    ...(input.ClientSecret !== undefined && input.ClientSecret !== null && { ClientSecret: input.ClientSecret }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1ADMMessage = (input: ADMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ConsolidationKey !== undefined &&\n      input.ConsolidationKey !== null && { ConsolidationKey: input.ConsolidationKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && { ExpiresAfter: input.ExpiresAfter }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.MD5 !== undefined && input.MD5 !== null && { MD5: input.MD5 }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1AndroidPushNotificationTemplate = (\n  input: AndroidPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSChannelRequest = (input: APNSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSMessage = (input: APNSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.APNSPushType !== undefined && input.APNSPushType !== null && { APNSPushType: input.APNSPushType }),\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Badge !== undefined && input.Badge !== null && { Badge: input.Badge }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Category !== undefined && input.Category !== null && { Category: input.Category }),\n    ...(input.CollapseId !== undefined && input.CollapseId !== null && { CollapseId: input.CollapseId }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.PreferredAuthenticationMethod !== undefined &&\n      input.PreferredAuthenticationMethod !== null && {\n        PreferredAuthenticationMethod: input.PreferredAuthenticationMethod,\n      }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.ThreadId !== undefined && input.ThreadId !== null && { ThreadId: input.ThreadId }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSPushNotificationTemplate = (\n  input: APNSPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSSandboxChannelRequest = (\n  input: APNSSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipChannelRequest = (input: APNSVoipChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipSandboxChannelRequest = (\n  input: APNSVoipSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1AttributeDimension = (input: AttributeDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.AttributeType !== undefined && input.AttributeType !== null && { AttributeType: input.AttributeType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1BaiduChannelRequest = (input: BaiduChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SecretKey !== undefined && input.SecretKey !== null && { SecretKey: input.SecretKey }),\n  };\n};\n\nconst serializeAws_restJson1BaiduMessage = (input: BaiduMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1CampaignCustomMessage = (input: CampaignCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEmailMessage = (input: CampaignEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.HtmlBody !== undefined && input.HtmlBody !== null && { HtmlBody: input.HtmlBody }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEventFilter = (input: CampaignEventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1CampaignHook = (input: CampaignHook, context: __SerdeContext): any => {\n  return {\n    ...(input.LambdaFunctionName !== undefined &&\n      input.LambdaFunctionName !== null && { LambdaFunctionName: input.LambdaFunctionName }),\n    ...(input.Mode !== undefined && input.Mode !== null && { Mode: input.Mode }),\n    ...(input.WebUrl !== undefined && input.WebUrl !== null && { WebUrl: input.WebUrl }),\n  };\n};\n\nconst serializeAws_restJson1CampaignLimits = (input: CampaignLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.Daily !== undefined && input.Daily !== null && { Daily: input.Daily }),\n    ...(input.MaximumDuration !== undefined &&\n      input.MaximumDuration !== null && { MaximumDuration: input.MaximumDuration }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n    ...(input.Total !== undefined && input.Total !== null && { Total: input.Total }),\n  };\n};\n\nconst serializeAws_restJson1CampaignSmsMessage = (input: CampaignSmsMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1Condition = (input: Condition, context: __SerdeContext): any => {\n  return {\n    ...(input.Conditions !== undefined &&\n      input.Conditions !== null && {\n        Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context),\n      }),\n    ...(input.Operator !== undefined && input.Operator !== null && { Operator: input.Operator }),\n  };\n};\n\nconst serializeAws_restJson1ConditionalSplitActivity = (\n  input: ConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1Condition(input.Condition, context) }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n    ...(input.FalseActivity !== undefined && input.FalseActivity !== null && { FalseActivity: input.FalseActivity }),\n    ...(input.TrueActivity !== undefined && input.TrueActivity !== null && { TrueActivity: input.TrueActivity }),\n  };\n};\n\nconst serializeAws_restJson1CreateApplicationRequest = (\n  input: CreateApplicationRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1CreateRecommenderConfigurationShape = (\n  input: CreateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1CustomDeliveryConfiguration = (\n  input: CustomDeliveryConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1CustomMessageActivity = (input: CustomMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1DefaultMessage = (input: DefaultMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationMessage = (\n  input: DefaultPushNotificationMessage,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationTemplate = (\n  input: DefaultPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DirectMessageConfiguration = (\n  input: DirectMessageConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context) }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context),\n      }),\n    ...(input.DefaultPushNotificationMessage !== undefined &&\n      input.DefaultPushNotificationMessage !== null && {\n        DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(\n          input.DefaultPushNotificationMessage,\n          context\n        ),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && { EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context) }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context) }),\n    ...(input.VoiceMessage !== undefined &&\n      input.VoiceMessage !== null && { VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1EmailChannelRequest = (input: EmailChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ConfigurationSet !== undefined &&\n      input.ConfigurationSet !== null && { ConfigurationSet: input.ConfigurationSet }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.Identity !== undefined && input.Identity !== null && { Identity: input.Identity }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessage = (input: EmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FeedbackForwardingAddress !== undefined &&\n      input.FeedbackForwardingAddress !== null && { FeedbackForwardingAddress: input.FeedbackForwardingAddress }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.RawEmail !== undefined &&\n      input.RawEmail !== null && { RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context) }),\n    ...(input.ReplyToAddresses !== undefined &&\n      input.ReplyToAddresses !== null && {\n        ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context),\n      }),\n    ...(input.SimpleEmail !== undefined &&\n      input.SimpleEmail !== null && { SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context) }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessageActivity = (input: EmailMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1EmailTemplateRequest = (input: EmailTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.HtmlPart !== undefined && input.HtmlPart !== null && { HtmlPart: input.HtmlPart }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.Subject !== undefined && input.Subject !== null && { Subject: input.Subject }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.TextPart !== undefined && input.TextPart !== null && { TextPart: input.TextPart }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchItem = (input: EndpointBatchItem, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchRequest = (input: EndpointBatchRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Item !== undefined &&\n      input.Item !== null && { Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointDemographic = (input: EndpointDemographic, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined && input.AppVersion !== null && { AppVersion: input.AppVersion }),\n    ...(input.Locale !== undefined && input.Locale !== null && { Locale: input.Locale }),\n    ...(input.Make !== undefined && input.Make !== null && { Make: input.Make }),\n    ...(input.Model !== undefined && input.Model !== null && { Model: input.Model }),\n    ...(input.ModelVersion !== undefined && input.ModelVersion !== null && { ModelVersion: input.ModelVersion }),\n    ...(input.Platform !== undefined && input.Platform !== null && { Platform: input.Platform }),\n    ...(input.PlatformVersion !== undefined &&\n      input.PlatformVersion !== null && { PlatformVersion: input.PlatformVersion }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1EndpointLocation = (input: EndpointLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.City !== undefined && input.City !== null && { City: input.City }),\n    ...(input.Country !== undefined && input.Country !== null && { Country: input.Country }),\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n    ...(input.PostalCode !== undefined && input.PostalCode !== null && { PostalCode: input.PostalCode }),\n    ...(input.Region !== undefined && input.Region !== null && { Region: input.Region }),\n  };\n};\n\nconst serializeAws_restJson1EndpointRequest = (input: EndpointRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointSendConfiguration = (\n  input: EndpointSendConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1EndpointUser = (input: EndpointUser, context: __SerdeContext): any => {\n  return {\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context),\n      }),\n    ...(input.UserId !== undefined && input.UserId !== null && { UserId: input.UserId }),\n  };\n};\n\nconst serializeAws_restJson1Event = (input: Event, context: __SerdeContext): any => {\n  return {\n    ...(input.AppPackageName !== undefined &&\n      input.AppPackageName !== null && { AppPackageName: input.AppPackageName }),\n    ...(input.AppTitle !== undefined && input.AppTitle !== null && { AppTitle: input.AppTitle }),\n    ...(input.AppVersionCode !== undefined &&\n      input.AppVersionCode !== null && { AppVersionCode: input.AppVersionCode }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.ClientSdkVersion !== undefined &&\n      input.ClientSdkVersion !== null && { ClientSdkVersion: input.ClientSdkVersion }),\n    ...(input.EventType !== undefined && input.EventType !== null && { EventType: input.EventType }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.SdkName !== undefined && input.SdkName !== null && { SdkName: input.SdkName }),\n    ...(input.Session !== undefined &&\n      input.Session !== null && { Session: serializeAws_restJson1Session(input.Session, context) }),\n    ...(input.Timestamp !== undefined && input.Timestamp !== null && { Timestamp: input.Timestamp }),\n  };\n};\n\nconst serializeAws_restJson1EventCondition = (input: EventCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.MessageActivity !== undefined &&\n      input.MessageActivity !== null && { MessageActivity: input.MessageActivity }),\n  };\n};\n\nconst serializeAws_restJson1EventDimensions = (input: EventDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.EventType !== undefined &&\n      input.EventType !== null && { EventType: serializeAws_restJson1SetDimension(input.EventType, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventFilter = (input: EventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1EventsBatch = (input: EventsBatch, context: __SerdeContext): any => {\n  return {\n    ...(input.Endpoint !== undefined &&\n      input.Endpoint !== null && { Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context) }),\n    ...(input.Events !== undefined &&\n      input.Events !== null && { Events: serializeAws_restJson1MapOfEvent(input.Events, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventsRequest = (input: EventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BatchItem !== undefined &&\n      input.BatchItem !== null && { BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventStartCondition = (input: EventStartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && { EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1ExportJobRequest = (input: ExportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && { S3UrlPrefix: input.S3UrlPrefix }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n  };\n};\n\nconst serializeAws_restJson1GCMChannelRequest = (input: GCMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1GCMMessage = (input: GCMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.CollapseKey !== undefined && input.CollapseKey !== null && { CollapseKey: input.CollapseKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.RestrictedPackageName !== undefined &&\n      input.RestrictedPackageName !== null && { RestrictedPackageName: input.RestrictedPackageName }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1GPSCoordinates = (input: GPSCoordinates, context: __SerdeContext): any => {\n  return {\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n  };\n};\n\nconst serializeAws_restJson1GPSPointDimension = (input: GPSPointDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Coordinates !== undefined &&\n      input.Coordinates !== null && { Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context) }),\n    ...(input.RangeInKilometers !== undefined &&\n      input.RangeInKilometers !== null && { RangeInKilometers: input.RangeInKilometers }),\n  };\n};\n\nconst serializeAws_restJson1HoldoutActivity = (input: HoldoutActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1ImportJobRequest = (input: ImportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefineSegment !== undefined && input.DefineSegment !== null && { DefineSegment: input.DefineSegment }),\n    ...(input.ExternalId !== undefined && input.ExternalId !== null && { ExternalId: input.ExternalId }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.RegisterEndpoints !== undefined &&\n      input.RegisterEndpoints !== null && { RegisterEndpoints: input.RegisterEndpoints }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3Url !== undefined && input.S3Url !== null && { S3Url: input.S3Url }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentName !== undefined && input.SegmentName !== null && { SegmentName: input.SegmentName }),\n  };\n};\n\nconst serializeAws_restJson1JourneyCustomMessage = (input: JourneyCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1JourneyEmailMessage = (input: JourneyEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n  };\n};\n\nconst serializeAws_restJson1JourneyLimits = (input: JourneyLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.DailyCap !== undefined && input.DailyCap !== null && { DailyCap: input.DailyCap }),\n    ...(input.EndpointReentryCap !== undefined &&\n      input.EndpointReentryCap !== null && { EndpointReentryCap: input.EndpointReentryCap }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n  };\n};\n\nconst serializeAws_restJson1JourneyPushMessage = (input: JourneyPushMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n  };\n};\n\nconst serializeAws_restJson1JourneySchedule = (input: JourneySchedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined &&\n      input.EndTime !== null && { EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.StartTime !== undefined &&\n      input.StartTime !== null && { StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1JourneySMSMessage = (input: JourneySMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1JourneyStateRequest = (input: JourneyStateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1ListOf__EndpointTypesElement = (\n  input: (__EndpointTypesElement | string)[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOf__string = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOfEndpointBatchItem = (input: EndpointBatchItem[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1EndpointBatchItem(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfMultiConditionalBranch = (\n  input: MultiConditionalBranch[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfRandomSplitEntry = (input: RandomSplitEntry[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentDimensions = (input: SegmentDimensions[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentGroup = (input: SegmentGroup[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentReference = (input: SegmentReference[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSimpleCondition = (input: SimpleCondition[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfWriteTreatmentResource = (\n  input: WriteTreatmentResource[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1WriteTreatmentResource(entry, context);\n    });\n};\n\nconst serializeAws_restJson1MapOf__double = (input: { [key: string]: number }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOf__string = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfActivity = (input: { [key: string]: Activity }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAddressConfiguration = (\n  input: { [key: string]: AddressConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AddressConfiguration }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AddressConfiguration(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAttributeDimension = (\n  input: { [key: string]: AttributeDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEndpointSendConfiguration = (\n  input: { [key: string]: EndpointSendConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce(\n    (acc: { [key: string]: EndpointSendConfiguration }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: serializeAws_restJson1EndpointSendConfiguration(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst serializeAws_restJson1MapOfEvent = (input: { [key: string]: Event }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Event }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Event(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEventsBatch = (\n  input: { [key: string]: EventsBatch },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: EventsBatch }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1EventsBatch(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfListOf__string = (\n  input: { [key: string]: string[] },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfMetricDimension = (\n  input: { [key: string]: MetricDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1Message = (input: Message, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageSmallIconUrl !== undefined &&\n      input.ImageSmallIconUrl !== null && { ImageSmallIconUrl: input.ImageSmallIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.JsonBody !== undefined && input.JsonBody !== null && { JsonBody: input.JsonBody }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1MessageConfiguration = (input: MessageConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context) }),\n    ...(input.CustomMessage !== undefined &&\n      input.CustomMessage !== null && {\n        CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context),\n      }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && {\n        EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context),\n      }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1MessageRequest = (input: MessageRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Addresses !== undefined &&\n      input.Addresses !== null && {\n        Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context),\n      }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.Endpoints !== undefined &&\n      input.Endpoints !== null && {\n        Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n  };\n};\n\nconst serializeAws_restJson1MetricDimension = (input: MetricDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.ComparisonOperator !== undefined &&\n      input.ComparisonOperator !== null && { ComparisonOperator: input.ComparisonOperator }),\n    ...(input.Value !== undefined && input.Value !== null && { Value: input.Value }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalBranch = (input: MultiConditionalBranch, context: __SerdeContext): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1SimpleCondition(input.Condition, context) }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalSplitActivity = (\n  input: MultiConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && {\n        Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context),\n      }),\n    ...(input.DefaultActivity !== undefined &&\n      input.DefaultActivity !== null && { DefaultActivity: input.DefaultActivity }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1NumberValidateRequest = (input: NumberValidateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.IsoCountryCode !== undefined &&\n      input.IsoCountryCode !== null && { IsoCountryCode: input.IsoCountryCode }),\n    ...(input.PhoneNumber !== undefined && input.PhoneNumber !== null && { PhoneNumber: input.PhoneNumber }),\n  };\n};\n\nconst serializeAws_restJson1PublicEndpoint = (input: PublicEndpoint, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1PushMessageActivity = (input: PushMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1PushNotificationTemplateRequest = (\n  input: PushNotificationTemplateRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADM !== undefined &&\n      input.ADM !== null && { ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context) }),\n    ...(input.APNS !== undefined &&\n      input.APNS !== null && { APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context) }),\n    ...(input.Baidu !== undefined &&\n      input.Baidu !== null && { Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context) }),\n    ...(input.Default !== undefined &&\n      input.Default !== null && {\n        Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context),\n      }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.GCM !== undefined &&\n      input.GCM !== null && { GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context) }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1QuietTime = (input: QuietTime, context: __SerdeContext): any => {\n  return {\n    ...(input.End !== undefined && input.End !== null && { End: input.End }),\n    ...(input.Start !== undefined && input.Start !== null && { Start: input.Start }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitActivity = (input: RandomSplitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && { Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context) }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitEntry = (input: RandomSplitEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1RawEmail = (input: RawEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n  };\n};\n\nconst serializeAws_restJson1RecencyDimension = (input: RecencyDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.RecencyType !== undefined && input.RecencyType !== null && { RecencyType: input.RecencyType }),\n  };\n};\n\nconst serializeAws_restJson1Schedule = (input: Schedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined && input.EndTime !== null && { EndTime: input.EndTime }),\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && {\n        EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context),\n      }),\n    ...(input.Frequency !== undefined && input.Frequency !== null && { Frequency: input.Frequency }),\n    ...(input.IsLocalTime !== undefined && input.IsLocalTime !== null && { IsLocalTime: input.IsLocalTime }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.StartTime !== undefined && input.StartTime !== null && { StartTime: input.StartTime }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1SegmentBehaviors = (input: SegmentBehaviors, context: __SerdeContext): any => {\n  return {\n    ...(input.Recency !== undefined &&\n      input.Recency !== null && { Recency: serializeAws_restJson1RecencyDimension(input.Recency, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentCondition = (input: SegmentCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDemographics = (input: SegmentDemographics, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined &&\n      input.AppVersion !== null && { AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context) }),\n    ...(input.Channel !== undefined &&\n      input.Channel !== null && { Channel: serializeAws_restJson1SetDimension(input.Channel, context) }),\n    ...(input.DeviceType !== undefined &&\n      input.DeviceType !== null && { DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context) }),\n    ...(input.Make !== undefined &&\n      input.Make !== null && { Make: serializeAws_restJson1SetDimension(input.Make, context) }),\n    ...(input.Model !== undefined &&\n      input.Model !== null && { Model: serializeAws_restJson1SetDimension(input.Model, context) }),\n    ...(input.Platform !== undefined &&\n      input.Platform !== null && { Platform: serializeAws_restJson1SetDimension(input.Platform, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDimensions = (input: SegmentDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.Behavior !== undefined &&\n      input.Behavior !== null && { Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context) }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context),\n      }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1SegmentLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroup = (input: SegmentGroup, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && {\n        Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context),\n      }),\n    ...(input.SourceSegments !== undefined &&\n      input.SourceSegments !== null && {\n        SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context),\n      }),\n    ...(input.SourceType !== undefined && input.SourceType !== null && { SourceType: input.SourceType }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroupList = (input: SegmentGroupList, context: __SerdeContext): any => {\n  return {\n    ...(input.Groups !== undefined &&\n      input.Groups !== null && { Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context) }),\n    ...(input.Include !== undefined && input.Include !== null && { Include: input.Include }),\n  };\n};\n\nconst serializeAws_restJson1SegmentLocation = (input: SegmentLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.Country !== undefined &&\n      input.Country !== null && { Country: serializeAws_restJson1SetDimension(input.Country, context) }),\n    ...(input.GPSPoint !== undefined &&\n      input.GPSPoint !== null && { GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentReference = (input: SegmentReference, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1SendUsersMessageRequest = (\n  input: SendUsersMessageRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n    ...(input.Users !== undefined &&\n      input.Users !== null && { Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context) }),\n  };\n};\n\nconst serializeAws_restJson1Session = (input: Session, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.StartTimestamp !== undefined &&\n      input.StartTimestamp !== null && { StartTimestamp: input.StartTimestamp }),\n    ...(input.StopTimestamp !== undefined && input.StopTimestamp !== null && { StopTimestamp: input.StopTimestamp }),\n  };\n};\n\nconst serializeAws_restJson1SetDimension = (input: SetDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.DimensionType !== undefined && input.DimensionType !== null && { DimensionType: input.DimensionType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleCondition = (input: SimpleCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventCondition !== undefined &&\n      input.EventCondition !== null && {\n        EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context),\n      }),\n    ...(input.SegmentCondition !== undefined &&\n      input.SegmentCondition !== null && {\n        SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context),\n      }),\n    ...(input.SegmentDimensions !== undefined &&\n      input.SegmentDimensions !== null && {\n        segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmail = (input: SimpleEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.HtmlPart !== undefined &&\n      input.HtmlPart !== null && { HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context) }),\n    ...(input.Subject !== undefined &&\n      input.Subject !== null && { Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context) }),\n    ...(input.TextPart !== undefined &&\n      input.TextPart !== null && { TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmailPart = (input: SimpleEmailPart, context: __SerdeContext): any => {\n  return {\n    ...(input.Charset !== undefined && input.Charset !== null && { Charset: input.Charset }),\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1SMSChannelRequest = (input: SMSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.ShortCode !== undefined && input.ShortCode !== null && { ShortCode: input.ShortCode }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessage = (input: SMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Keyword !== undefined && input.Keyword !== null && { Keyword: input.Keyword }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessageActivity = (input: SMSMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1SMSTemplateRequest = (input: SMSTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1StartCondition = (input: StartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EventStartCondition !== undefined &&\n      input.EventStartCondition !== null && {\n        EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context),\n      }),\n    ...(input.SegmentStartCondition !== undefined &&\n      input.SegmentStartCondition !== null && {\n        SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1TagsModel = (input: TagsModel, context: __SerdeContext): any => {\n  return {\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1Template = (input: Template, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateActiveVersionRequest = (\n  input: TemplateActiveVersionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateConfiguration = (input: TemplateConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.EmailTemplate !== undefined &&\n      input.EmailTemplate !== null && { EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context) }),\n    ...(input.PushTemplate !== undefined &&\n      input.PushTemplate !== null && { PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context) }),\n    ...(input.SMSTemplate !== undefined &&\n      input.SMSTemplate !== null && { SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context) }),\n    ...(input.VoiceTemplate !== undefined &&\n      input.VoiceTemplate !== null && { VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateAttributesRequest = (\n  input: UpdateAttributesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Blacklist !== undefined &&\n      input.Blacklist !== null && { Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateRecommenderConfigurationShape = (\n  input: UpdateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1VoiceChannelRequest = (input: VoiceChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1VoiceMessage = (input: VoiceMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n  };\n};\n\nconst serializeAws_restJson1VoiceTemplateRequest = (input: VoiceTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitActivity = (input: WaitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.WaitTime !== undefined &&\n      input.WaitTime !== null && { WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitTime = (input: WaitTime, context: __SerdeContext): any => {\n  return {\n    ...(input.WaitFor !== undefined && input.WaitFor !== null && { WaitFor: input.WaitFor }),\n    ...(input.WaitUntil !== undefined && input.WaitUntil !== null && { WaitUntil: input.WaitUntil }),\n  };\n};\n\nconst serializeAws_restJson1WriteApplicationSettingsRequest = (\n  input: WriteApplicationSettingsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.CampaignHook !== undefined &&\n      input.CampaignHook !== null && { CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context) }),\n    ...(input.CloudWatchMetricsEnabled !== undefined &&\n      input.CloudWatchMetricsEnabled !== null && { CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled }),\n    ...(input.EventTaggingEnabled !== undefined &&\n      input.EventTaggingEnabled !== null && { EventTaggingEnabled: input.EventTaggingEnabled }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteCampaignRequest = (input: WriteCampaignRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.AdditionalTreatments !== undefined &&\n      input.AdditionalTreatments !== null && {\n        AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context),\n      }),\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.HoldoutPercent !== undefined &&\n      input.HoldoutPercent !== null && { HoldoutPercent: input.HoldoutPercent }),\n    ...(input.Hook !== undefined &&\n      input.Hook !== null && { Hook: serializeAws_restJson1CampaignHook(input.Hook, context) }),\n    ...(input.IsPaused !== undefined && input.IsPaused !== null && { IsPaused: input.IsPaused }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteEventStream = (input: WriteEventStream, context: __SerdeContext): any => {\n  return {\n    ...(input.DestinationStreamArn !== undefined &&\n      input.DestinationStreamArn !== null && { DestinationStreamArn: input.DestinationStreamArn }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1WriteJourneyRequest = (input: WriteJourneyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Activities !== undefined &&\n      input.Activities !== null && { Activities: serializeAws_restJson1MapOfActivity(input.Activities, context) }),\n    ...(input.CreationDate !== undefined && input.CreationDate !== null && { CreationDate: input.CreationDate }),\n    ...(input.LastModifiedDate !== undefined &&\n      input.LastModifiedDate !== null && { LastModifiedDate: input.LastModifiedDate }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1JourneyLimits(input.Limits, context) }),\n    ...(input.LocalTime !== undefined && input.LocalTime !== null && { LocalTime: input.LocalTime }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.RefreshFrequency !== undefined &&\n      input.RefreshFrequency !== null && { RefreshFrequency: input.RefreshFrequency }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context) }),\n    ...(input.StartActivity !== undefined && input.StartActivity !== null && { StartActivity: input.StartActivity }),\n    ...(input.StartCondition !== undefined &&\n      input.StartCondition !== null && {\n        StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context),\n      }),\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1WriteSegmentRequest = (input: WriteSegmentRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context) }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.SegmentGroups !== undefined &&\n      input.SegmentGroups !== null && {\n        SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context),\n      }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteTreatmentResource = (input: WriteTreatmentResource, context: __SerdeContext): any => {\n  return {\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SizePercent !== undefined && input.SizePercent !== null && { SizePercent: input.SizePercent }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n  };\n};\n\nconst deserializeAws_restJson1ActivitiesResponse = (output: any, context: __SerdeContext): ActivitiesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Activity = (output: any, context: __SerdeContext): Activity => {\n  return {\n    CUSTOM:\n      output.CUSTOM !== undefined && output.CUSTOM !== null\n        ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context)\n        : undefined,\n    ConditionalSplit:\n      output.ConditionalSplit !== undefined && output.ConditionalSplit !== null\n        ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL:\n      output.EMAIL !== undefined && output.EMAIL !== null\n        ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context)\n        : undefined,\n    Holdout:\n      output.Holdout !== undefined && output.Holdout !== null\n        ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context)\n        : undefined,\n    MultiCondition:\n      output.MultiCondition !== undefined && output.MultiCondition !== null\n        ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context)\n        : undefined,\n    PUSH:\n      output.PUSH !== undefined && output.PUSH !== null\n        ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context)\n        : undefined,\n    RandomSplit:\n      output.RandomSplit !== undefined && output.RandomSplit !== null\n        ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context)\n        : undefined,\n    SMS:\n      output.SMS !== undefined && output.SMS !== null\n        ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context)\n        : undefined,\n    Wait:\n      output.Wait !== undefined && output.Wait !== null\n        ? deserializeAws_restJson1WaitActivity(output.Wait, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ActivityResponse = (output: any, context: __SerdeContext): ActivityResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart:\n      output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount:\n      output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null\n        ? output.SuccessfulEndpointCount\n        : undefined,\n    TimezonesCompletedCount:\n      output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null\n        ? output.TimezonesCompletedCount\n        : undefined,\n    TimezonesTotalCount:\n      output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null\n        ? output.TimezonesTotalCount\n        : undefined,\n    TotalEndpointCount:\n      output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null\n        ? output.TotalEndpointCount\n        : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ADMChannelResponse = (output: any, context: __SerdeContext): ADMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AndroidPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): AndroidPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl:\n      output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null\n        ? output.SmallImageIconUrl\n        : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSChannelResponse = (output: any, context: __SerdeContext): APNSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): APNSPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationResponse = (output: any, context: __SerdeContext): ApplicationResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationSettingsResource = (\n  output: any,\n  context: __SerdeContext\n): ApplicationSettingsResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook:\n      output.CampaignHook !== undefined && output.CampaignHook !== null\n        ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationsResponse = (output: any, context: __SerdeContext): ApplicationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributeDimension = (output: any, context: __SerdeContext): AttributeDimension => {\n  return {\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributesResource = (output: any, context: __SerdeContext): AttributesResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1ListOf__string(output.Attributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaiduChannelResponse = (output: any, context: __SerdeContext): BaiduChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaseKpiResult = (output: any, context: __SerdeContext): BaseKpiResult => {\n  return {\n    Rows:\n      output.Rows !== undefined && output.Rows !== null\n        ? deserializeAws_restJson1ListOfResultRow(output.Rows, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignCustomMessage = (output: any, context: __SerdeContext): CampaignCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): CampaignDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEmailMessage = (output: any, context: __SerdeContext): CampaignEmailMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEventFilter = (output: any, context: __SerdeContext): CampaignEventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignHook = (output: any, context: __SerdeContext): CampaignHook => {\n  return {\n    LambdaFunctionName:\n      output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null\n        ? output.LambdaFunctionName\n        : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignLimits = (output: any, context: __SerdeContext): CampaignLimits => {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration:\n      output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignResponse = (output: any, context: __SerdeContext): CampaignResponse => {\n  return {\n    AdditionalTreatments:\n      output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null\n        ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    DefaultState:\n      output.DefaultState !== undefined && output.DefaultState !== null\n        ? deserializeAws_restJson1CampaignState(output.DefaultState, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent:\n      output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook:\n      output.Hook !== undefined && output.Hook !== null\n        ? deserializeAws_restJson1CampaignHook(output.Hook, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignSmsMessage = (output: any, context: __SerdeContext): CampaignSmsMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignsResponse = (output: any, context: __SerdeContext): CampaignsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignState = (output: any, context: __SerdeContext): CampaignState => {\n  return {\n    CampaignStatus:\n      output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelResponse = (output: any, context: __SerdeContext): ChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelsResponse = (output: any, context: __SerdeContext): ChannelsResponse => {\n  return {\n    Channels:\n      output.Channels !== undefined && output.Channels !== null\n        ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Condition = (output: any, context: __SerdeContext): Condition => {\n  return {\n    Conditions:\n      output.Conditions !== undefined && output.Conditions !== null\n        ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context)\n        : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): ConditionalSplitActivity => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1Condition(output.Condition, context)\n        : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n    FalseActivity:\n      output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CreateTemplateMessageBody = (\n  output: any,\n  context: __SerdeContext\n): CreateTemplateMessageBody => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomDeliveryConfiguration = (\n  output: any,\n  context: __SerdeContext\n): CustomDeliveryConfiguration => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomMessageActivity = (output: any, context: __SerdeContext): CustomMessageActivity => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1DefaultPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): DefaultPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailChannelResponse = (output: any, context: __SerdeContext): EmailChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet:\n      output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailMessageActivity = (output: any, context: __SerdeContext): EmailMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailTemplateResponse = (output: any, context: __SerdeContext): EmailTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointDemographic = (output: any, context: __SerdeContext): EndpointDemographic => {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion:\n      output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointItemResponse = (output: any, context: __SerdeContext): EndpointItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointLocation = (output: any, context: __SerdeContext): EndpointLocation => {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointMessageResult = (output: any, context: __SerdeContext): EndpointMessageResult => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointResponse = (output: any, context: __SerdeContext): EndpointResponse => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context)\n        : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context)\n        : undefined,\n    EffectiveDate:\n      output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus:\n      output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1EndpointLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__double(output.Metrics, context)\n        : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User:\n      output.User !== undefined && output.User !== null\n        ? deserializeAws_restJson1EndpointUser(output.User, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointsResponse = (output: any, context: __SerdeContext): EndpointsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointUser = (output: any, context: __SerdeContext): EndpointUser => {\n  return {\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context)\n        : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventCondition = (output: any, context: __SerdeContext): EventCondition => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    MessageActivity:\n      output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventDimensions = (output: any, context: __SerdeContext): EventDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    EventType:\n      output.EventType !== undefined && output.EventType !== null\n        ? deserializeAws_restJson1SetDimension(output.EventType, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventFilter = (output: any, context: __SerdeContext): EventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventItemResponse = (output: any, context: __SerdeContext): EventItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventsResponse = (output: any, context: __SerdeContext): EventsResponse => {\n  return {\n    Results:\n      output.Results !== undefined && output.Results !== null\n        ? deserializeAws_restJson1MapOfItemResponse(output.Results, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStartCondition = (output: any, context: __SerdeContext): EventStartCondition => {\n  return {\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1EventFilter(output.EventFilter, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStream = (output: any, context: __SerdeContext): EventStream => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn:\n      output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null\n        ? output.DestinationStreamArn\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy:\n      output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResource = (output: any, context: __SerdeContext): ExportJobResource => {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ExportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobsResponse = (output: any, context: __SerdeContext): ExportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GCMChannelResponse = (output: any, context: __SerdeContext): GCMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSCoordinates = (output: any, context: __SerdeContext): GPSCoordinates => {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSPointDimension = (output: any, context: __SerdeContext): GPSPointDimension => {\n  return {\n    Coordinates:\n      output.Coordinates !== undefined && output.Coordinates !== null\n        ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context)\n        : undefined,\n    RangeInKilometers:\n      output.RangeInKilometers !== undefined && output.RangeInKilometers !== null\n        ? output.RangeInKilometers\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1HoldoutActivity = (output: any, context: __SerdeContext): HoldoutActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResource = (output: any, context: __SerdeContext): ImportJobResource => {\n  return {\n    DefineSegment:\n      output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints:\n      output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null\n        ? output.RegisterEndpoints\n        : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ImportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobsResponse = (output: any, context: __SerdeContext): ImportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ItemResponse = (output: any, context: __SerdeContext): ItemResponse => {\n  return {\n    EndpointItemResponse:\n      output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null\n        ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context)\n        : undefined,\n    EventsItemResponse:\n      output.EventsItemResponse !== undefined && output.EventsItemResponse !== null\n        ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyCustomMessage = (output: any, context: __SerdeContext): JourneyCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyEmailMessage = (output: any, context: __SerdeContext): JourneyEmailMessage => {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionActivityMetricsResponse => {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId:\n      output.JourneyActivityId !== undefined && output.JourneyActivityId !== null\n        ? output.JourneyActivityId\n        : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionMetricsResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyLimits = (output: any, context: __SerdeContext): JourneyLimits => {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap:\n      output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null\n        ? output.EndpointReentryCap\n        : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyPushMessage = (output: any, context: __SerdeContext): JourneyPushMessage => {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyResponse = (output: any, context: __SerdeContext): JourneyResponse => {\n  return {\n    Activities:\n      output.Activities !== undefined && output.Activities !== null\n        ? deserializeAws_restJson1MapOfActivity(output.Activities, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1JourneyLimits(output.Limits, context)\n        : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    RefreshFrequency:\n      output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1JourneySchedule(output.Schedule, context)\n        : undefined,\n    StartActivity:\n      output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition:\n      output.StartCondition !== undefined && output.StartCondition !== null\n        ? deserializeAws_restJson1StartCondition(output.StartCondition, context)\n        : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySchedule = (output: any, context: __SerdeContext): JourneySchedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySMSMessage = (output: any, context: __SerdeContext): JourneySMSMessage => {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneysResponse = (output: any, context: __SerdeContext): JourneysResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ListOf__EndpointTypesElement = (\n  output: any,\n  context: __SerdeContext\n): (__EndpointTypesElement | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOf__string = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOfActivityResponse = (output: any, context: __SerdeContext): ActivityResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ActivityResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfApplicationResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ApplicationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfCampaignResponse = (output: any, context: __SerdeContext): CampaignResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1CampaignResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfEndpointResponse = (output: any, context: __SerdeContext): EndpointResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1EndpointResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ExportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ImportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfJourneyResponse = (output: any, context: __SerdeContext): JourneyResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1JourneyResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfMultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRow = (output: any, context: __SerdeContext): ResultRow[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRow(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRowValue = (output: any, context: __SerdeContext): ResultRowValue[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRowValue(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentGroup = (output: any, context: __SerdeContext): SegmentGroup[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentReference = (output: any, context: __SerdeContext): SegmentReference[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentResponse = (output: any, context: __SerdeContext): SegmentResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSimpleCondition = (output: any, context: __SerdeContext): SimpleCondition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateResponse = (output: any, context: __SerdeContext): TemplateResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTreatmentResource = (output: any, context: __SerdeContext): TreatmentResource[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TreatmentResource(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListRecommenderConfigurationsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListRecommenderConfigurationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MapOf__double = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__integer = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__string = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfActivity = (output: any, context: __SerdeContext): { [key: string]: Activity } => {\n  return Object.entries(output).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfAttributeDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: AttributeDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ChannelResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ChannelResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ChannelResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EndpointMessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EndpointMessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EndpointMessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEventItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EventItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EventItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EventItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfListOf__string = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string[] } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: { [key: string]: EndpointMessageResult } } => {\n  return Object.entries(output).reduce(\n    (acc: { [key: string]: { [key: string]: EndpointMessageResult } }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: deserializeAws_restJson1MapOfEndpointMessageResult(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst deserializeAws_restJson1MapOfMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMetricDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MetricDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1Message = (output: any, context: __SerdeContext): Message => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl:\n      output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null\n        ? output.ImageSmallIconUrl\n        : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageBody = (output: any, context: __SerdeContext): MessageBody => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageConfiguration = (output: any, context: __SerdeContext): MessageConfiguration => {\n  return {\n    ADMMessage:\n      output.ADMMessage !== undefined && output.ADMMessage !== null\n        ? deserializeAws_restJson1Message(output.ADMMessage, context)\n        : undefined,\n    APNSMessage:\n      output.APNSMessage !== undefined && output.APNSMessage !== null\n        ? deserializeAws_restJson1Message(output.APNSMessage, context)\n        : undefined,\n    BaiduMessage:\n      output.BaiduMessage !== undefined && output.BaiduMessage !== null\n        ? deserializeAws_restJson1Message(output.BaiduMessage, context)\n        : undefined,\n    CustomMessage:\n      output.CustomMessage !== undefined && output.CustomMessage !== null\n        ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context)\n        : undefined,\n    DefaultMessage:\n      output.DefaultMessage !== undefined && output.DefaultMessage !== null\n        ? deserializeAws_restJson1Message(output.DefaultMessage, context)\n        : undefined,\n    EmailMessage:\n      output.EmailMessage !== undefined && output.EmailMessage !== null\n        ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context)\n        : undefined,\n    GCMMessage:\n      output.GCMMessage !== undefined && output.GCMMessage !== null\n        ? deserializeAws_restJson1Message(output.GCMMessage, context)\n        : undefined,\n    SMSMessage:\n      output.SMSMessage !== undefined && output.SMSMessage !== null\n        ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResponse = (output: any, context: __SerdeContext): MessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult:\n      output.EndpointResult !== undefined && output.EndpointResult !== null\n        ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context)\n        : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResult = (output: any, context: __SerdeContext): MessageResult => {\n  return {\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MetricDimension = (output: any, context: __SerdeContext): MetricDimension => {\n  return {\n    ComparisonOperator:\n      output.ComparisonOperator !== undefined && output.ComparisonOperator !== null\n        ? output.ComparisonOperator\n        : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1SimpleCondition(output.Condition, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context)\n        : undefined,\n    DefaultActivity:\n      output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1NumberValidateResponse = (\n  output: any,\n  context: __SerdeContext\n): NumberValidateResponse => {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164:\n      output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null\n        ? output.CleansedPhoneNumberE164\n        : undefined,\n    CleansedPhoneNumberNational:\n      output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null\n        ? output.CleansedPhoneNumberNational\n        : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2:\n      output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric:\n      output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null\n        ? output.CountryCodeNumeric\n        : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2:\n      output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null\n        ? output.OriginalCountryCodeIso2\n        : undefined,\n    OriginalPhoneNumber:\n      output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null\n        ? output.OriginalPhoneNumber\n        : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode:\n      output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushMessageActivity = (output: any, context: __SerdeContext): PushMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushNotificationTemplateResponse = (\n  output: any,\n  context: __SerdeContext\n): PushNotificationTemplateResponse => {\n  return {\n    ADM:\n      output.ADM !== undefined && output.ADM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context)\n        : undefined,\n    APNS:\n      output.APNS !== undefined && output.APNS !== null\n        ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context)\n        : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu:\n      output.Baidu !== undefined && output.Baidu !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default:\n      output.Default !== undefined && output.Default !== null\n        ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context)\n        : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    GCM:\n      output.GCM !== undefined && output.GCM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1QuietTime = (output: any, context: __SerdeContext): QuietTime => {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitActivity = (output: any, context: __SerdeContext): RandomSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecencyDimension = (output: any, context: __SerdeContext): RecencyDimension => {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOf__string(output.Attributes, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType:\n      output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null\n        ? output.RecommendationProviderIdType\n        : undefined,\n    RecommendationProviderRoleArn:\n      output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null\n        ? output.RecommendationProviderRoleArn\n        : undefined,\n    RecommendationProviderUri:\n      output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null\n        ? output.RecommendationProviderUri\n        : undefined,\n    RecommendationTransformerUri:\n      output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null\n        ? output.RecommendationTransformerUri\n        : undefined,\n    RecommendationsDisplayName:\n      output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null\n        ? output.RecommendationsDisplayName\n        : undefined,\n    RecommendationsPerMessage:\n      output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null\n        ? output.RecommendationsPerMessage\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRow = (output: any, context: __SerdeContext): ResultRow => {\n  return {\n    GroupedBys:\n      output.GroupedBys !== undefined && output.GroupedBys !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context)\n        : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRowValue = (output: any, context: __SerdeContext): ResultRowValue => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Schedule = (output: any, context: __SerdeContext): Schedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context)\n        : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentBehaviors = (output: any, context: __SerdeContext): SegmentBehaviors => {\n  return {\n    Recency:\n      output.Recency !== undefined && output.Recency !== null\n        ? deserializeAws_restJson1RecencyDimension(output.Recency, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentCondition = (output: any, context: __SerdeContext): SegmentCondition => {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDemographics = (output: any, context: __SerdeContext): SegmentDemographics => {\n  return {\n    AppVersion:\n      output.AppVersion !== undefined && output.AppVersion !== null\n        ? deserializeAws_restJson1SetDimension(output.AppVersion, context)\n        : undefined,\n    Channel:\n      output.Channel !== undefined && output.Channel !== null\n        ? deserializeAws_restJson1SetDimension(output.Channel, context)\n        : undefined,\n    DeviceType:\n      output.DeviceType !== undefined && output.DeviceType !== null\n        ? deserializeAws_restJson1SetDimension(output.DeviceType, context)\n        : undefined,\n    Make:\n      output.Make !== undefined && output.Make !== null\n        ? deserializeAws_restJson1SetDimension(output.Make, context)\n        : undefined,\n    Model:\n      output.Model !== undefined && output.Model !== null\n        ? deserializeAws_restJson1SetDimension(output.Model, context)\n        : undefined,\n    Platform:\n      output.Platform !== undefined && output.Platform !== null\n        ? deserializeAws_restJson1SetDimension(output.Platform, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    Behavior:\n      output.Behavior !== undefined && output.Behavior !== null\n        ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context)\n        : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context)\n        : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1SegmentLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroup = (output: any, context: __SerdeContext): SegmentGroup => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context)\n        : undefined,\n    SourceSegments:\n      output.SourceSegments !== undefined && output.SourceSegments !== null\n        ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context)\n        : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroupList = (output: any, context: __SerdeContext): SegmentGroupList => {\n  return {\n    Groups:\n      output.Groups !== undefined && output.Groups !== null\n        ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context)\n        : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentImportResource = (output: any, context: __SerdeContext): SegmentImportResource => {\n  return {\n    ChannelCounts:\n      output.ChannelCounts !== undefined && output.ChannelCounts !== null\n        ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context)\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentLocation = (output: any, context: __SerdeContext): SegmentLocation => {\n  return {\n    Country:\n      output.Country !== undefined && output.Country !== null\n        ? deserializeAws_restJson1SetDimension(output.Country, context)\n        : undefined,\n    GPSPoint:\n      output.GPSPoint !== undefined && output.GPSPoint !== null\n        ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentReference = (output: any, context: __SerdeContext): SegmentReference => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentResponse = (output: any, context: __SerdeContext): SegmentResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition:\n      output.ImportDefinition !== undefined && output.ImportDefinition !== null\n        ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups:\n      output.SegmentGroups !== undefined && output.SegmentGroups !== null\n        ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context)\n        : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentsResponse = (output: any, context: __SerdeContext): SegmentsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SendUsersMessageResponse = (\n  output: any,\n  context: __SerdeContext\n): SendUsersMessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SetDimension = (output: any, context: __SerdeContext): SetDimension => {\n  return {\n    DimensionType:\n      output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SimpleCondition = (output: any, context: __SerdeContext): SimpleCondition => {\n  return {\n    EventCondition:\n      output.EventCondition !== undefined && output.EventCondition !== null\n        ? deserializeAws_restJson1EventCondition(output.EventCondition, context)\n        : undefined,\n    SegmentCondition:\n      output.SegmentCondition !== undefined && output.SegmentCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context)\n        : undefined,\n    SegmentDimensions:\n      output.segmentDimensions !== undefined && output.segmentDimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSChannelResponse = (output: any, context: __SerdeContext): SMSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond:\n      output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null\n        ? output.PromotionalMessagesPerSecond\n        : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond:\n      output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null\n        ? output.TransactionalMessagesPerSecond\n        : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSMessageActivity = (output: any, context: __SerdeContext): SMSMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSTemplateResponse = (output: any, context: __SerdeContext): SMSTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1StartCondition = (output: any, context: __SerdeContext): StartCondition => {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition:\n      output.EventStartCondition !== undefined && output.EventStartCondition !== null\n        ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context)\n        : undefined,\n    SegmentStartCondition:\n      output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TagsModel = (output: any, context: __SerdeContext): TagsModel => {\n  return {\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Template = (output: any, context: __SerdeContext): Template => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateConfiguration = (output: any, context: __SerdeContext): TemplateConfiguration => {\n  return {\n    EmailTemplate:\n      output.EmailTemplate !== undefined && output.EmailTemplate !== null\n        ? deserializeAws_restJson1Template(output.EmailTemplate, context)\n        : undefined,\n    PushTemplate:\n      output.PushTemplate !== undefined && output.PushTemplate !== null\n        ? deserializeAws_restJson1Template(output.PushTemplate, context)\n        : undefined,\n    SMSTemplate:\n      output.SMSTemplate !== undefined && output.SMSTemplate !== null\n        ? deserializeAws_restJson1Template(output.SMSTemplate, context)\n        : undefined,\n    VoiceTemplate:\n      output.VoiceTemplate !== undefined && output.VoiceTemplate !== null\n        ? deserializeAws_restJson1Template(output.VoiceTemplate, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateResponse = (output: any, context: __SerdeContext): TemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplatesResponse = (output: any, context: __SerdeContext): TemplatesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse => {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionsResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context)\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TreatmentResource = (output: any, context: __SerdeContext): TreatmentResource => {\n  return {\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceChannelResponse = (output: any, context: __SerdeContext): VoiceChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceTemplateResponse = (output: any, context: __SerdeContext): VoiceTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitActivity = (output: any, context: __SerdeContext): WaitActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime:\n      output.WaitTime !== undefined && output.WaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.WaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitTime = (output: any, context: __SerdeContext): WaitTime => {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}