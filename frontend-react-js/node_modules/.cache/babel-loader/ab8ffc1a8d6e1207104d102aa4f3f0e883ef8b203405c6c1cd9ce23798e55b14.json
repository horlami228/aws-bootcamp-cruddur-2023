{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketLifecycleConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketLifecycleConfigurationCommand, serializeAws_restXmlPutBucketLifecycleConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle\n *          configuration. For information about lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <note>\n *             <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an\n *             object key name prefix, one or more object tags, or a combination of both. Accordingly,\n *             this section describes the latest API. The previous version of the API supported\n *             filtering based only on an object key name prefix, which is supported for backward\n *             compatibility. For the related API description, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>.</p>\n *          </note>\n *\n *\n *\n *          <p>\n *             <b>Rules</b>\n *          </p>\n *          <p>You specify the lifecycle configuration in your request body. The lifecycle\n *          configuration is specified as XML consisting of one or more rules. Each rule consists of\n *          the following:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Filter identifying a subset of objects to which the rule applies. The filter can\n *                be based on a key name prefix, object tags, or a combination of both.</p>\n *             </li>\n *             <li>\n *                <p>Status whether the rule is in effect.</p>\n *             </li>\n *             <li>\n *                <p>One or more lifecycle transition and expiration actions that you want Amazon S3 to\n *                perform on the objects identified by the filter. If the state of your bucket is\n *                versioning-enabled or versioning-suspended, you can have many versions of the same\n *                object (one current version and zero or more noncurrent versions). Amazon S3 provides\n *                predefined actions that you can specify for current and noncurrent object\n *                versions.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\">Object\n *             Lifecycle Management</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html\">Lifecycle Configuration Elements</a>.</p>\n *\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *\n *\n *          <p>By default, all Amazon S3 resources are private, including buckets, objects, and related\n *          subresources (for example, lifecycle configuration and website configuration). Only the\n *          resource owner (that is, the AWS account that created it) can access the resource. The\n *          resource owner can optionally grant access permissions to others by writing an access\n *          policy. For this operation, a user must get the s3:PutLifecycleConfiguration\n *          permission.</p>\n *\n *          <p>You can also explicitly deny permissions. Explicit deny also supersedes any other\n *          permissions. If you want to block users or accounts from removing or deleting objects from\n *          your bucket, you must deny them permissions for the following actions:</p>\n *\n *          <ul>\n *             <li>\n *                <p>s3:DeleteObject</p>\n *             </li>\n *             <li>\n *                <p>s3:DeleteObjectVersion</p>\n *             </li>\n *             <li>\n *                <p>s3:PutLifecycleConfiguration</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>The following are related to <code>PutBucketLifecycleConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html\">Examples of\n *                   Lifecycle Configuration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\">DeleteBucketLifecycle</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nvar PutBucketLifecycleConfigurationCommand = /** @class */function (_super) {\n  __extends(PutBucketLifecycleConfigurationCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function PutBucketLifecycleConfigurationCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  PutBucketLifecycleConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketLifecycleConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketLifecycleConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  PutBucketLifecycleConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context);\n  };\n  PutBucketLifecycleConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context);\n  };\n  return PutBucketLifecycleConfigurationCommand;\n}($Command);\nexport { PutBucketLifecycleConfigurationCommand };","map":{"version":3,"mappings":";AACA,SAASA,sCAAsC,QAAQ,oBAAoB;AAC3E,SACEC,4DAA4D,EAC5DC,0DAA0D,QACrD,0BAA0B;AACjC,SAASC,6BAA6B,QAAQ,yCAAyC;AACvF,SAASC,uBAAuB,QAAQ,qCAAqC;AAC7E,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;EAA4DC;EAK1D;EACA;EAEA,gDAAqBC,KAAkD;IAAvE;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,kEAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAqC,EACrCC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACb,uBAAuB,CAACU,aAAa,CAAC,CAAC;IAChE,IAAI,CAACE,eAAe,CAACC,GAAG,CAACd,6BAA6B,CAACW,aAAa,CAAC,CAAC;IAEtE,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,UAAU;IAC7B,IAAMC,WAAW,GAAG,wCAAwC;IAC5D,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAE1B,sCAAsC,CAAC2B,kBAAkB;MAClFC,wBAAwB,EAAE,UAACC,MAAW;QAAK,aAAM;MAAN;KAC5C;IACO,kBAAc,GAAKf,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,0DAAS,GAAjB,UACEH,KAAkD,EAClDwB,OAAuB;IAEvB,OAAO/B,0DAA0D,CAACO,KAAK,EAAEwB,OAAO,CAAC;EACnF,CAAC;EAEOrB,4DAAW,GAAnB,UACEiB,MAAsB,EACtBI,OAAuB;IAEvB,OAAOhC,4DAA4D,CAAC4B,MAAM,EAAEI,OAAO,CAAC;EACtF,CAAC;EAIH,6CAAC;AAAD,CAAC,CA9D2D1B,QAAQ","names":["PutBucketLifecycleConfigurationRequest","deserializeAws_restXmlPutBucketLifecycleConfigurationCommand","serializeAws_restXmlPutBucketLifecycleConfigurationCommand","getApplyMd5BodyChecksumPlugin","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketLifecycleConfigurationCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/frontend-react-js/node_modules/@aws-sdk/client-s3/commands/PutBucketLifecycleConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketLifecycleConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketLifecycleConfigurationCommand,\n  serializeAws_restXmlPutBucketLifecycleConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getApplyMd5BodyChecksumPlugin } from \"@aws-sdk/middleware-apply-body-checksum\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketLifecycleConfigurationCommandInput = PutBucketLifecycleConfigurationRequest;\nexport type PutBucketLifecycleConfigurationCommandOutput = __MetadataBearer;\n\n/**\n * <p>Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle\n *          configuration. For information about lifecycle configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <note>\n *             <p>Bucket lifecycle configuration now supports specifying a lifecycle rule using an\n *             object key name prefix, one or more object tags, or a combination of both. Accordingly,\n *             this section describes the latest API. The previous version of the API supported\n *             filtering based only on an object key name prefix, which is supported for backward\n *             compatibility. For the related API description, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>.</p>\n *          </note>\n *\n *\n *\n *          <p>\n *             <b>Rules</b>\n *          </p>\n *          <p>You specify the lifecycle configuration in your request body. The lifecycle\n *          configuration is specified as XML consisting of one or more rules. Each rule consists of\n *          the following:</p>\n *\n *          <ul>\n *             <li>\n *                <p>Filter identifying a subset of objects to which the rule applies. The filter can\n *                be based on a key name prefix, object tags, or a combination of both.</p>\n *             </li>\n *             <li>\n *                <p>Status whether the rule is in effect.</p>\n *             </li>\n *             <li>\n *                <p>One or more lifecycle transition and expiration actions that you want Amazon S3 to\n *                perform on the objects identified by the filter. If the state of your bucket is\n *                versioning-enabled or versioning-suspended, you can have many versions of the same\n *                object (one current version and zero or more noncurrent versions). Amazon S3 provides\n *                predefined actions that you can specify for current and noncurrent object\n *                versions.</p>\n *             </li>\n *          </ul>\n *\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\">Object\n *             Lifecycle Management</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html\">Lifecycle Configuration Elements</a>.</p>\n *\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *\n *\n *          <p>By default, all Amazon S3 resources are private, including buckets, objects, and related\n *          subresources (for example, lifecycle configuration and website configuration). Only the\n *          resource owner (that is, the AWS account that created it) can access the resource. The\n *          resource owner can optionally grant access permissions to others by writing an access\n *          policy. For this operation, a user must get the s3:PutLifecycleConfiguration\n *          permission.</p>\n *\n *          <p>You can also explicitly deny permissions. Explicit deny also supersedes any other\n *          permissions. If you want to block users or accounts from removing or deleting objects from\n *          your bucket, you must deny them permissions for the following actions:</p>\n *\n *          <ul>\n *             <li>\n *                <p>s3:DeleteObject</p>\n *             </li>\n *             <li>\n *                <p>s3:DeleteObjectVersion</p>\n *             </li>\n *             <li>\n *                <p>s3:PutLifecycleConfiguration</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>For more information about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p>The following are related to <code>PutBucketLifecycleConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html\">Examples of\n *                   Lifecycle Configuration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\">GetBucketLifecycleConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\">DeleteBucketLifecycle</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketLifecycleConfigurationCommand extends $Command<\n  PutBucketLifecycleConfigurationCommandInput,\n  PutBucketLifecycleConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketLifecycleConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketLifecycleConfigurationCommandInput, PutBucketLifecycleConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    this.middlewareStack.use(getApplyMd5BodyChecksumPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketLifecycleConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketLifecycleConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: PutBucketLifecycleConfigurationCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<PutBucketLifecycleConfigurationCommandOutput> {\n    return deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}